name: CI

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node 12.X
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - run: yarn audit
      - run: yarn lint
      - run: yarn lint:copyright ${{ github.workspace }}/*/**.{js,ts,tsx}
      - run: yarn build
      - run: yarn build-storybook
  
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node 12.X
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - run: yarn test --coverage

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: 'coverage/junit.xml'
          comment_on_pr: false
          check_name: 'Test results'
          fail_on: 'nothing'
