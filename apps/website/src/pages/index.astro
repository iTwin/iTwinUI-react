---
import Global from '../layouts/GlobalLayout.astro';
import Header from '../components/Header.astro';
import AccessibleIcon from 'src/icons/AccessibleIcon.astro';
import NoFussIcon from 'src/icons/NoFussIcon.astro';
import EvolvingIcon from 'src/icons/EvolvingIcon.astro';
import ConsistentIcon from 'src/icons/ConsistentIcon.astro';
import HexagonBackground from 'src/icons/HexagonBackground.astro';
import BadgeExample from 'src/examples/Badge.example';
import AlertExample from 'src/examples/Alert.example';
import AvatarExample from 'src/examples/Avatar.example';
import BreadcrumbsExample from 'src/examples/Breadcrumbs.example';
import ExpandableBlockExample from 'src/examples/ExpandableBlock.example';

const currentPage = new URL(Astro.request.url).pathname;
---

<Global currentPage={currentPage}>
  <HexagonBackground class='hexagon-bg' aria-hidden='true' />
  <Header class='header' />
  <main>
    <div class='title-box'>
      <h1>For a <span class='highlight-text'>unified</span> experience</h1>
      <p class='subheading'>
        By documenting and assembling a reference site of iTwin components and patterns, we were
        able to speed up our process and solve some internal communication problems.
      </p>
      <div class='button-area'>
        <a class='main-button' href='/docs/introduction'> Documentation</a>
        <a class='secondary-button' href='/docs/introduction'> Get started</a>
      </div>

      <div class='code-blocks'>
        <div class='code-wrapper'>
          <div class='code-sample code-sample-1'><BadgeExample /></div>
          <h3>Badge</h3>
          <p>A colorful visual indicator for categorizing items</p>
        </div>
        <div class='code-wrapper'>
          <div class='code-sample code-sample-2'>
            <AlertExample />
          </div>
          <h3>Alert</h3>
          <p>A small box to quickly grab user attention and communicate a brief message</p>
        </div>
        <div class='code-wrapper'>
          <div class='code-sample code-sample-3'><AvatarExample /></div>
          <h3>Avatar</h3>
          <p>
            A circular identifier that displays the user's custom set photo or the user's first and
            last name initials.
          </p>
        </div>
        <div class='code-wrapper'>
          <div class='code-sample code-sample-1'><BreadcrumbsExample /></div>
          <h3>Breadcumbs</h3>
          <p>Navigate a folder hierarchy quickly with a table and breadcrumbs.</p>
        </div>
        <div class='code-wrapper'>
          <div class='code-sample code-sample-2'><ExpandableBlockExample /></div>
          <h3>Expandable block</h3>
          <p>A pattern for progressive disclosure of information.</p>
        </div>
      </div>
    </div>
    <div class='centered-content'>
      <h2 class='highlight-text'>Why iTwinUI?</h2>
      <div class='column-content'>
        <div class='text-with-icon'>
          <ConsistentIcon class='icon' />
          <div>
            <h3 class='colored-text'>Consistent</h3>

            <p>
              Our components and layouts library was designed specifically for apps within the iTwin
              space. It allows creating seamless front-end environments consistent with the iTwin
              experience.
            </p>
          </div>
        </div>
        <div class='text-with-icon'>
          <AccessibleIcon class='icon' />
          <div>
            <h3 class='colored-text'>Accessible</h3>

            <p>
              The web is for everyone. All our components were designed with accessibility in mind
              for an inclusive, comfortable experience that leaves no one behind.
            </p>
          </div>
        </div>
        <div class='text-with-icon'>
          <NoFussIcon class='icon' />
          <div>
            <h3 class='colored-text'>No fuss</h3>

            <p>
              Skip the brainstorming sessions. Our components and layouts are entirely ready-to-use,
              so you can focus on getting things done.
            </p>
          </div>
        </div>
        <div class='text-with-icon'>
          <EvolvingIcon class='icon' />
          <div>
            <h3 class='colored-text'>Evolving</h3>

            <p>
              iTwin UI is maintained daily and frequently updated by its supporting team, so you
              always have access to the latest version of our assets.
            </p>
          </div>
        </div>
      </div>
    </div>
    <div class='centered-content'>
      <h2 class='highlight-text'>Our library</h2>
      <div class='library-list'>
        <a class='library-item' href='/docs/introduction'>
          <div>
            <h3>Components</h3>
            <p>
              See our extensive library of pre-coded components. You can view live demos of how they
              behave in their environment to determine if they are the right fit.
            </p>
          </div>
        </a>
        <a class='library-item' href='https://itwin.github.io/iTwinUI-layouts/' target='_blank'>
          <div>
            <h3>Layouts</h3>
            <p>Full-page layouts built for maximizing your efficiency when you need it the most.</p>
          </div>
        </a>
        <a class='library-item' href='https://itwin.github.io/iTwinUI-icons/' target='_blank'>
          <div>
            <h3>Icons</h3>
            <p>
              Hundreds of flexible, flat-styled icons in SVG format, allowing for infinite
              scalability with zero quality loss.
            </p>
          </div>
        </a>
      </div>
    </div>
    <div class='centered-content'>
      <h2 class='highlight-text'>Join us</h2>
    </div>
  </main>

  <style lang='scss'>
    body {
      display: grid;
      grid-template: 'header' auto 'main' 1fr / 100%;
    }

    .hexagon-bg {
      min-height: 40vh;
      max-height: 85vh;
      position: absolute;
      z-index: -1;
      overflow: hidden;
    }

    a {
      text-decoration: none;
      color: unset;
    }

    .header {
      grid-area: header;
    }

    .code-blocks {
      display: flex;
      justify-self: center;
      gap: var(--space-6);
      margin: 96px 0;
      overflow-x: auto;
      max-width: 90vw;
    }

    .code-wrapper {
      min-width: 300px;
    }

    .code-sample {
      color-scheme: dark !important;
      padding: var(--space-7);
      width: 100%;
      min-height: 300px;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .code-sample-1 {
      background: var(--color-highlight-gradient);
    }

    .code-sample-2 {
      background: var(--color-highlight-gradient-2);
    }

    .code-sample-3 {
      background: var(--color-highlight-gradient-3);
    }

    .colored-text {
      color: var(--color-highlight-1);
    }

    .title-box {
      margin-top: calc(var(--space-7) * 4);
      justify-self: center;
      display: flex;
      flex-direction: column;
      align-items: center;
      max-width: 580px;
    }

    .button-area {
      display: flex;
      gap: var(--space-5);
    }

    .main-button {
      padding: 8px 12px;
      border-radius: 4px;
      text-decoration: none;
      background: var(--color-highlight-gradient);
      color: var(--color-background-1);
    }

    .secondary-button {
      padding: 8px 12px;
      border-radius: 4px;
      text-decoration: none;
      background: transparent;
      color: var(--color-text);
      border: 1px solid var(--color-text);
    }

    .main-button:hover,
    .secondary-button:hover,
    .library-item:hover {
      box-shadow: 0 0 10px var(--color-highlight-1), 0 0 20px var(--color-highlight-2);
    }

    .highlight-text {
      background: var(--color-highlight-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .glow {
      box-shadow: 0 0 10px var(--color-highlight-1), 0 0 20px var(--color-highlight-2);
    }

    .centered-content {
      display: flex;
      flex-direction: column;
      justify-self: center;
      align-items: center;
      margin: calc(var(--space-7)) 0 calc(var(--space-7) * 3) 0;
    }

    .column-content {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: var(--space-7);

      @media (max-width: 50em) {
        grid-template-columns: 1fr;
      }
    }

    .text-with-icon {
      display: grid;
      grid-template-columns: 100px 1fr;
      gap: var(--space-6);
    }

    .library-list {
      max-width: 90vw;
      display: grid;
      gap: var(--space-6);
      grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr));
    }

    .library-item {
      padding: var(--space-5);
      text-align: start;
      border: 1px solid var(--color-text);
      border-radius: 4px;
    }

    .subheading {
      color: var(--color-subtext);
      padding-bottom: var(--space-7);
    }

    p {
      font-size: var(--type-0);
    }

    h1 {
      margin-bottom: var(--space-2);
    }

    h2 {
      font-size: var(--type-4);
      padding-bottom: var(--space-7);
    }

    h4 {
      font-size: var(--type-1);
      text-align: center;
      padding-bottom: var(--space-4);
    }

    h3 {
      font-size: var(--type-2);
      text-align: left;
      padding-bottom: var(--space-5);
    }

    main {
      grid-area: main;
      display: grid;
      padding: var(--space-7);
    }

    main > * {
      max-width: 1200px;
    }

    .icon {
      align-self: center;
      fill: var(--color-highlight-1);
      height: 96px;
    }
  </style>
</Global>
