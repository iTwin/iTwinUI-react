---

const randomInRange = (min: number, max: number) => {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}
---

<div class="lights">
  <div class='light-object' style={`background-color: var(--color-highlight-${randomInRange(1,3)});--duration:
    ${randomInRange(10, 20)}; --delay: ${randomInRange(4, 10)}; --x: ${randomInRange(0, 5)}; --y: ${randomInRange(0,
    25)}; --scale: ${Math.random() / 10}`}></div>
  <div class='light-object' style={`background-color: var(--color-highlight-${randomInRange(1,3)});--duration:
    ${randomInRange(10, 20)}; --delay: ${randomInRange(4, 10)}; --x: ${randomInRange(0, 5)}; --y: ${randomInRange(0,
    25)}; --scale: ${Math.random() / 10}`}></div>
  <div class='light-object' style={`background-color: var(--color-highlight-${randomInRange(1,3)});--duration:
    ${randomInRange(10, 20)}; --delay: ${randomInRange(4, 10)}; --x: ${randomInRange(0, 5)}; --y: ${randomInRange(0,
    25)}; --scale: ${Math.random() / 10}`}></div>
  <div class='light-object' style={`background-color: var(--color-highlight-${randomInRange(1,3)});--duration:
    ${randomInRange(10, 20)}; --delay: ${randomInRange(4, 10)}; --x: ${randomInRange(0, 5)}; --y: ${randomInRange(0,
    25)}; --scale: ${Math.random() / 10}`}></div>
  <div class='light-object' style={`background-color: var(--color-highlight-${randomInRange(1,3)});--duration:
    ${randomInRange(10, 20)}; --delay: ${randomInRange(4, 10)}; --x: ${randomInRange(0, 5)}; --y: ${randomInRange(0,
    25)}; --scale: ${Math.random() / 10}`}></div>
  <div class='light-object' style={`background-color: var(--color-highlight-${randomInRange(1,3)});--duration:
    ${randomInRange(10, 20)}; --delay: ${randomInRange(4, 10)}; --x: ${randomInRange(0, 5)}; --y: ${randomInRange(0,
    25)}; --scale: ${Math.random() / 10}`}></div>
  <div class='light-object' style={`background-color: var(--color-highlight-${randomInRange(1,3)});--duration:
    ${randomInRange(10, 20)}; --delay: ${randomInRange(4, 10)}; --x: ${randomInRange(0, 5)}; --y: ${randomInRange(0,
    25)}; --scale: ${Math.random() / 10}`}></div>
  <div class='light-object' style={`background-color: var(--color-highlight-${randomInRange(1,3)});--duration:
    ${randomInRange(10, 20)}; --delay: ${randomInRange(4, 10)}; --x: ${randomInRange(0, 5)}; --y: ${randomInRange(0,
    25)}; --scale: ${Math.random() / 10}`}></div>
</div>

<style lang='scss'>
  .lights {
    width:100%;
    position: absolute;
    left: 0;
    top: 0;
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    filter: blur(75px);
  }

  .light-object {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    --up: calc(var(--y, 10) * 2vmax);
    --left: calc(var(--x, 2) * 2vmax);

    @media(max-width 768px) {
      --up: calc(var(--y, 10) * 2vmax);
      --left: calc(var(--x, 2) * 2vmax);
    }

    background-size: 100% 40vmax;
    background-position: center bottom;
    background-repeat: no-repeat;
    transform: translate(var(--left), var(--up)) scale(1);
    // Give it a random animation delay so that the pieces are already moving about   
    animation: shift calc(var(--duration, 2) * 1s) calc(var(--delay, 0) * -1s) infinite ease;
  }

  @keyframes shift {
    50% {
      transform: translate(0, 0) scale(1);
    }
  }

  @media (min-width: 50em) {}
</style>
