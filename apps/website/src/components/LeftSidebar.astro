---
const currentPage = new URL(Astro.request.url).pathname;

const componentsPages = (await Astro.glob('../pages/docs/*.mdx'))
  .filter(({ file }) => !file.endsWith('index.mdx'))
  .map(({ url, frontmatter }) => ({
    url,
    title: frontmatter.title,
  }));

const sections = new Map<string, typeof componentsPages>();
sections.set('components', componentsPages);
---

<nav aria-labelledby='grid-left'>
  <ul class='nav-groups'>
    <li class='nav-link'>
      <a href={'/docs'} aria-current={`${currentPage === '/docs' ? 'page' : 'false'}`}>
        Getting started
      </a>
    </li>

    {[...sections.entries()].map(([heading, list]) => (
      <li>
        <div class='nav-group'>
          <h2 class='nav-group-title'>{heading}</h2>
          <ul>
            {list.map(({ url, title }) => (
              <li class='nav-link'>
                <a href={url} aria-current={`${currentPage === url ? 'page' : 'false'}`}>
                  {title}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </li>
    ))}
  </ul>
</nav>

<script is:inline>
  window.addEventListener('DOMContentLoaded', (event) => {
    var target = document.querySelector('[aria-current="page"]');
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector('.nav-groups').scrollTop = target.offsetTop;
    }
  });
</script>

<style lang='scss'>
  nav {
    width: 100%;
    font-size: var(--type--1);

    & ul {
      list-style: none;
      padding: 0;
    }
  }

  .nav-groups {
    height: 100%;
    padding-top: var(--space-7);
    max-height: 100vh;
    min-width: 250px;
  }

  .nav-groups > li + li {
    margin-top: var(--space-5);
  }

  .nav-group-title {
    color: var(--color-subtext);
    font-size: var(--type-0);
    font-weight: 600;
    padding-inline: var(--space-4);
    margin-bottom: var(--space-2);
    text-transform: uppercase;
  }

  .nav-link a {
    font-size: 1rem;
    margin: 1px;
    padding: 0.3rem var(--space-4);
    font: inherit;
    color: var(--color-subtext);
    text-decoration: none;
    display: block;
    border-top-left-radius: 2px;
    border-bottom-left-radius: 2px;
  }

  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--color-active);
    color: var(--color-text);
  }

  .nav-link a[aria-current='page'] {
    background-color: var(--color-active);
    color: var(--color-text);
    position: relative;

    &::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      border-left: 2px solid var(--color-text);
      border-top-left-radius: 2px;
      border-bottom-left-radius: 2px;
    }
  }
</style>
