---
import { createRequire } from 'module';
import { parse } from 'react-docgen-typescript';
import { Markdown } from 'astro/components';

export interface Props {
  path: string;
}

const path = createRequire(import.meta.url).resolve(Astro.props.path);

const [docs] = parse(path);
const props = docs.props;
---

<div class='wrapper'>
  <table>
    <thead>
      <tr>
        <th>Prop</th>
        <th>Description</th>
        <th>Default</th>
      </tr>
    </thead>
    <tbody>
      {Object.values(props).map((value) => (
      <tr>
        <td class='mono'>{value.name}</td>
        <td>
          <div class='md'>
            <Markdown>{value.description}</Markdown>
          </div>
          <div class='types'>{value.type.name}</div>
        </td>
        <td class='mono'>{value.defaultValue?.value ?? ''}</td>
      </tr>
      ))}
    </tbody>
  </table>
</div>

<style>
  .wrapper {
    display: flex;
    overflow: auto;
  }

  table {
    border-spacing: 0;
    border-collapse: collapse;
    font-size: var(--type--1);
    width: 100%;
  }

  tr {
    background: transparent;

    &+& {
      border-top: 0.5px solid hsl(0 0% 0% / 0.2);
    }
  }

  th,
  td {
    padding: var(--space-3) var(--space-2);
    max-width: 35ch;

    &:first-child {
      padding-left: 0;
    }

    &:last-child {
      padding-right: 0;
    }
  }

  th {
    text-align: left;
  }

  tr+tr {
    border-top: 1px solid var(--color-line-2);
  }

  .md {
    font-family: var(--font-body);
    margin-bottom: var(--space-2);

    & code {
      font-family: var(--font-mono);
    }
  }

  .mono {
    font-family: var(--font-mono);
  }

  .types {
    font-family: var(--font-mono);
    font-size: var(--type--2);
  }
</style>
