import * as React from 'react';
import React__default, { createElement, forwardRef as forwardRef$1, cloneElement, useState, useLayoutEffect, useEffect, useRef, createContext, useImperativeHandle, useMemo, Fragment as Fragment$2, useContext, useCallback, PureComponent, createRef } from 'react';
import ReactDOM$1 from 'react-dom/server';
import { escape } from 'html-escaper';
/* empty css                                 *//* empty css                                     *//* empty css                                      */import { jsxs, jsx, Fragment as Fragment$1 } from 'react/jsx-runtime';
import path, { dirname, join } from 'path';
import { fileURLToPath } from 'url';
import fs from 'fs';
import { parse as parse$1 } from 'react-docgen-typescript';
import { handlers, resolver, importers, parse } from 'react-docgen';
import snarkdown from 'snarkdown';
/* empty css                                      */import cx from 'classnames';
import tippy from 'tippy.js';
import * as ReactDOM from 'react-dom';
import ReactDOM__default, { createPortal } from 'react-dom';
import { CSSTransition, Transition } from 'react-transition-group';
import { Svg404 } from '@itwin/itwinui-illustrations-react';
import { actions, useGetLatest, makePropGetter, useTable, useFlexLayout, useFilters, useGlobalFilter, useSortBy, useExpanded, usePagination, useRowSelect, useColumnOrder } from 'react-table';
import * as classer from '@code-hike/classer';
import { useClasser, ClasserProvider } from '@code-hike/classer';
import { getTemplate } from 'codesandbox-import-utils/lib/create-sandbox/templates.js';
import rt from 'lodash.isequal';
import { createStitches } from '@stitches/core';
import { closeBrackets, closeBracketsKeymap } from '@codemirror/closebrackets';
import { defaultKeymap, indentMore, indentLess, deleteGroupBackward } from '@codemirror/commands';
import { commentKeymap } from '@codemirror/comment';
import { lineNumbers } from '@codemirror/gutter';
import { defaultHighlightStyle, HighlightStyle, tags, highlightTree } from '@codemirror/highlight';
import { history, historyKeymap } from '@codemirror/history';
import { bracketMatching } from '@codemirror/matchbrackets';
import { EditorState, StateEffect, EditorSelection, Annotation } from '@codemirror/state';
import { Decoration, ViewPlugin, highlightSpecialChars, keymap, EditorView, highlightActiveLine } from '@codemirror/view';
import mn from '@react-hook/intersection-observer';
import { css } from '@codemirror/lang-css';
import { html } from '@codemirror/lang-html';
import { javascript } from '@codemirror/lang-javascript';
import Pn from 'lz-string';
import va from 'clean-set';
import fs$1 from 'node:fs';
/* empty css                                     */
function _mergeNamespaces(n, m) {
	for (var i = 0; i < m.length; i++) {
		const e = m[i];
		if (typeof e !== 'string' && !Array.isArray(e)) { for (const k in e) {
			if (k !== 'default' && !(k in n)) {
				const d = Object.getOwnPropertyDescriptor(e, k);
				if (d) {
					Object.defineProperty(n, k, d.get ? d : {
						enumerable: true,
						get: () => e[k]
					});
				}
			}
		} }
	}
	return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: 'Module' }));
}

/**
 * Astro passes `children` as a string of HTML, so we need
 * a wrapper `div` to render that content as VNodes.
 *
 * As a bonus, we can signal to React that this subtree is
 * entirely static and will never change via `shouldComponentUpdate`.
 */
const StaticHtml = ({ value, name }) => {
	if (!value) return null;
	return createElement('astro-slot', {
		name,
		suppressHydrationWarning: true,
		dangerouslySetInnerHTML: { __html: value },
	});
};

/**
 * This tells React to opt-out of re-rendering this subtree,
 * In addition to being a performance optimization,
 * this also allows other frameworks to attach to `children`.
 *
 * See https://preactjs.com/guide/v8/external-dom-mutations
 */
StaticHtml.shouldComponentUpdate = () => false;

const slotName$1 = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());
const reactTypeof = Symbol.for('react.element');

function errorIsComingFromPreactComponent(err) {
	return (
		err.message &&
		(err.message.startsWith("Cannot read property '__H'") ||
			err.message.includes("(reading '__H')"))
	);
}

async function check$1(Component, props, children) {
	// Note: there are packages that do some unholy things to create "components".
	// Checking the $$typeof property catches most of these patterns.
	if (typeof Component === 'object') {
		const $$typeof = Component['$$typeof'];
		return $$typeof && $$typeof.toString().slice('Symbol('.length).startsWith('react');
	}
	if (typeof Component !== 'function') return false;

	if (Component.prototype != null && typeof Component.prototype.render === 'function') {
		return React__default.Component.isPrototypeOf(Component) || React__default.PureComponent.isPrototypeOf(Component);
	}

	let error = null;
	let isReactComponent = false;
	function Tester(...args) {
		try {
			const vnode = Component(...args);
			if (vnode && vnode['$$typeof'] === reactTypeof) {
				isReactComponent = true;
			}
		} catch (err) {
			if (!errorIsComingFromPreactComponent(err)) {
				error = err;
			}
		}

		return React__default.createElement('div');
	}

	await renderToStaticMarkup$1(Tester, props, children, {});

	if (error) {
		throw error;
	}
	return isReactComponent;
}

async function getNodeWritable() {
	let nodeStreamBuiltinModuleName = 'stream';
	let { Writable } = await import(/* @vite-ignore */ nodeStreamBuiltinModuleName);
	return Writable;
}

async function renderToStaticMarkup$1(Component, props, { default: children, ...slotted }, metadata) {
	delete props['class'];
	const slots = {};
	for (const [key, value] of Object.entries(slotted)) {
		const name = slotName$1(key);
		slots[name] = React__default.createElement(StaticHtml, { value, name });
	}
	// Note: create newProps to avoid mutating `props` before they are serialized
	const newProps = {
		...props,
		...slots,
	};
	if (children != null) {
		newProps.children = React__default.createElement(StaticHtml, { value: children });
	}
	const vnode = React__default.createElement(Component, newProps);
	let html;
	if (metadata && metadata.hydrate) {
		if ('renderToReadableStream' in ReactDOM$1) {
			html = await renderToReadableStreamAsync(vnode);
		} else {
			html = await renderToPipeableStreamAsync(vnode);
		}
	} else {
		if ('renderToReadableStream' in ReactDOM$1) {
			html = await renderToReadableStreamAsync(vnode);
		} else {
			html = await renderToStaticNodeStreamAsync(vnode);
		}
	}
	return { html };
}

async function renderToPipeableStreamAsync(vnode) {
	const Writable = await getNodeWritable();
	let html = '';
	return new Promise((resolve, reject) => {
		let error = undefined;
		let stream = ReactDOM$1.renderToPipeableStream(vnode, {
			onError(err) {
				error = err;
				reject(error);
			},
			onAllReady() {
				stream.pipe(
					new Writable({
						write(chunk, _encoding, callback) {
							html += chunk.toString('utf-8');
							callback();
						},
						destroy() {
							resolve(html);
						},
					})
				);
			},
		});
	});
}

async function renderToStaticNodeStreamAsync(vnode) {
	const Writable = await getNodeWritable();
	let html = '';
	return new Promise((resolve, reject) => {
		let stream = ReactDOM$1.renderToStaticNodeStream(vnode);
		stream.on('error', (err) => {
			reject(err);
		});
		stream.pipe(
			new Writable({
				write(chunk, _encoding, callback) {
					html += chunk.toString('utf-8');
					callback();
				},
				destroy() {
					resolve(html);
				},
			})
		);
	});
}

/**
 * Use a while loop instead of "for await" due to cloudflare and Vercel Edge issues
 * See https://github.com/facebook/react/issues/24169
 */
async function readResult(stream) {
	const reader = stream.getReader();
	let result = '';
	const decoder = new TextDecoder('utf-8');
	while (true) {
		const { done, value } = await reader.read();
		if (done) {
			if (value) {
				result += decoder.decode(value);
			} else {
				// This closes the decoder
				decoder.decode(new Uint8Array());
			}

			return result;
		}
		result += decoder.decode(value, { stream: true });
	}
}

async function renderToReadableStreamAsync(vnode) {
	return await readResult(await ReactDOM$1.renderToReadableStream(vnode));
}

const _renderer1 = {
	check: check$1,
	renderToStaticMarkup: renderToStaticMarkup$1,
};

const ASTRO_VERSION = "1.6.3";

function createDeprecatedFetchContentFn() {
  return () => {
    throw new Error("Deprecated: Astro.fetchContent() has been replaced with Astro.glob().");
  };
}
function createAstroGlobFn() {
  const globHandler = (importMetaGlobResult, globValue) => {
    let allEntries = [...Object.values(importMetaGlobResult)];
    if (allEntries.length === 0) {
      throw new Error(`Astro.glob(${JSON.stringify(globValue())}) - no matches found.`);
    }
    return Promise.all(allEntries.map((fn) => fn()));
  };
  return globHandler;
}
function createAstro(filePathname, _site, projectRootStr) {
  const site = _site ? new URL(_site) : void 0;
  const referenceURL = new URL(filePathname, `http://localhost`);
  const projectRoot = new URL(projectRootStr);
  return {
    site,
    generator: `Astro v${ASTRO_VERSION}`,
    fetchContent: createDeprecatedFetchContentFn(),
    glob: createAstroGlobFn(),
    resolve(...segments) {
      let resolved = segments.reduce((u, segment) => new URL(segment, u), referenceURL).pathname;
      if (resolved.startsWith(projectRoot.pathname)) {
        resolved = "/" + resolved.slice(projectRoot.pathname.length);
      }
      return resolved;
    }
  };
}

const escapeHTML = escape;
class HTMLBytes extends Uint8Array {
}
Object.defineProperty(HTMLBytes.prototype, Symbol.toStringTag, {
  get() {
    return "HTMLBytes";
  }
});
class HTMLString extends String {
  get [Symbol.toStringTag]() {
    return "HTMLString";
  }
}
const markHTMLString = (value) => {
  if (value instanceof HTMLString) {
    return value;
  }
  if (typeof value === "string") {
    return new HTMLString(value);
  }
  return value;
};
function isHTMLString(value) {
  return Object.prototype.toString.call(value) === "[object HTMLString]";
}
function markHTMLBytes(bytes) {
  return new HTMLBytes(bytes);
}
async function* unescapeChunksAsync(iterable) {
  for await (const chunk of iterable) {
    yield unescapeHTML(chunk);
  }
}
function* unescapeChunks(iterable) {
  for (const chunk of iterable) {
    yield unescapeHTML(chunk);
  }
}
function unescapeHTML(str) {
  if (!!str && typeof str === "object") {
    if (str instanceof Uint8Array) {
      return markHTMLBytes(str);
    } else if (str instanceof Response && str.body) {
      const body = str.body;
      return unescapeChunksAsync(body);
    } else if (typeof str.then === "function") {
      return Promise.resolve(str).then((value) => {
        return unescapeHTML(value);
      });
    } else if (Symbol.iterator in str) {
      return unescapeChunks(str);
    } else if (Symbol.asyncIterator in str) {
      return unescapeChunksAsync(str);
    }
  }
  return markHTMLString(str);
}

var idle_prebuilt_default = `(self.Astro=self.Astro||{}).idle=t=>{const e=async()=>{await(await t())()};"requestIdleCallback"in window?window.requestIdleCallback(e):setTimeout(e,200)},window.dispatchEvent(new Event("astro:idle"));`;

var load_prebuilt_default = `(self.Astro=self.Astro||{}).load=a=>{(async()=>await(await a())())()},window.dispatchEvent(new Event("astro:load"));`;

var media_prebuilt_default = `(self.Astro=self.Astro||{}).media=(s,a)=>{const t=async()=>{await(await s())()};if(a.value){const e=matchMedia(a.value);e.matches?t():e.addEventListener("change",t,{once:!0})}},window.dispatchEvent(new Event("astro:media"));`;

var only_prebuilt_default = `(self.Astro=self.Astro||{}).only=t=>{(async()=>await(await t())())()},window.dispatchEvent(new Event("astro:only"));`;

var visible_prebuilt_default = `(self.Astro=self.Astro||{}).visible=(s,c,n)=>{const r=async()=>{await(await s())()};let i=new IntersectionObserver(e=>{for(const t of e)if(!!t.isIntersecting){i.disconnect(),r();break}});for(let e=0;e<n.children.length;e++){const t=n.children[e];i.observe(t)}},window.dispatchEvent(new Event("astro:visible"));`;

var astro_island_prebuilt_default = `var l;{const c={0:t=>t,1:t=>JSON.parse(t,o),2:t=>new RegExp(t),3:t=>new Date(t),4:t=>new Map(JSON.parse(t,o)),5:t=>new Set(JSON.parse(t,o)),6:t=>BigInt(t),7:t=>new URL(t),8:t=>new Uint8Array(JSON.parse(t)),9:t=>new Uint16Array(JSON.parse(t)),10:t=>new Uint32Array(JSON.parse(t))},o=(t,s)=>{if(t===""||!Array.isArray(s))return s;const[e,n]=s;return e in c?c[e](n):void 0};customElements.get("astro-island")||customElements.define("astro-island",(l=class extends HTMLElement{constructor(){super(...arguments);this.hydrate=()=>{if(!this.hydrator||this.parentElement&&this.parentElement.closest("astro-island[ssr]"))return;const s=this.querySelectorAll("astro-slot"),e={},n=this.querySelectorAll("template[data-astro-template]");for(const r of n){const i=r.closest(this.tagName);!i||!i.isSameNode(this)||(e[r.getAttribute("data-astro-template")||"default"]=r.innerHTML,r.remove())}for(const r of s){const i=r.closest(this.tagName);!i||!i.isSameNode(this)||(e[r.getAttribute("name")||"default"]=r.innerHTML)}const a=this.hasAttribute("props")?JSON.parse(this.getAttribute("props"),o):{};this.hydrator(this)(this.Component,a,e,{client:this.getAttribute("client")}),this.removeAttribute("ssr"),window.removeEventListener("astro:hydrate",this.hydrate),window.dispatchEvent(new CustomEvent("astro:hydrate"))}}connectedCallback(){!this.hasAttribute("await-children")||this.firstChild?this.childrenConnectedCallback():new MutationObserver((s,e)=>{e.disconnect(),this.childrenConnectedCallback()}).observe(this,{childList:!0})}async childrenConnectedCallback(){window.addEventListener("astro:hydrate",this.hydrate);let s=this.getAttribute("before-hydration-url");s&&await import(s),this.start()}start(){const s=JSON.parse(this.getAttribute("opts")),e=this.getAttribute("client");if(Astro[e]===void 0){window.addEventListener(\`astro:\${e}\`,()=>this.start(),{once:!0});return}Astro[e](async()=>{const n=this.getAttribute("renderer-url"),[a,{default:r}]=await Promise.all([import(this.getAttribute("component-url")),n?import(n):()=>()=>{}]),i=this.getAttribute("component-export")||"default";if(!i.includes("."))this.Component=a[i];else{this.Component=a;for(const d of i.split("."))this.Component=this.Component[d]}return this.hydrator=r,this.hydrate},s,this)}attributeChangedCallback(){this.hydrator&&this.hydrate()}},l.observedAttributes=["props"],l))}`;

function determineIfNeedsHydrationScript(result) {
  if (result._metadata.hasHydrationScript) {
    return false;
  }
  return result._metadata.hasHydrationScript = true;
}
const hydrationScripts = {
  idle: idle_prebuilt_default,
  load: load_prebuilt_default,
  only: only_prebuilt_default,
  media: media_prebuilt_default,
  visible: visible_prebuilt_default
};
function determinesIfNeedsDirectiveScript(result, directive) {
  if (result._metadata.hasDirectives.has(directive)) {
    return false;
  }
  result._metadata.hasDirectives.add(directive);
  return true;
}
function getDirectiveScriptText(directive) {
  if (!(directive in hydrationScripts)) {
    throw new Error(`Unknown directive: ${directive}`);
  }
  const directiveScriptText = hydrationScripts[directive];
  return directiveScriptText;
}
function getPrescripts(type, directive) {
  switch (type) {
    case "both":
      return `<style>astro-island,astro-slot{display:contents}</style><script>${getDirectiveScriptText(directive) + astro_island_prebuilt_default}<\/script>`;
    case "directive":
      return `<script>${getDirectiveScriptText(directive)}<\/script>`;
  }
  return "";
}

const Fragment = Symbol.for("astro:fragment");
const Renderer = Symbol.for("astro:renderer");
const encoder = new TextEncoder();
const decoder = new TextDecoder();
function stringifyChunk(result, chunk) {
  switch (chunk.type) {
    case "directive": {
      const { hydration } = chunk;
      let needsHydrationScript = hydration && determineIfNeedsHydrationScript(result);
      let needsDirectiveScript = hydration && determinesIfNeedsDirectiveScript(result, hydration.directive);
      let prescriptType = needsHydrationScript ? "both" : needsDirectiveScript ? "directive" : null;
      if (prescriptType) {
        let prescripts = getPrescripts(prescriptType, hydration.directive);
        return markHTMLString(prescripts);
      } else {
        return "";
      }
    }
    default: {
      return chunk.toString();
    }
  }
}
class HTMLParts {
  constructor() {
    this.parts = "";
  }
  append(part, result) {
    if (ArrayBuffer.isView(part)) {
      this.parts += decoder.decode(part);
    } else {
      this.parts += stringifyChunk(result, part);
    }
  }
  toString() {
    return this.parts;
  }
  toArrayBuffer() {
    return encoder.encode(this.parts);
  }
}

const ClientOnlyPlaceholder = "astro-client-only";
const skipAstroJSXCheck = /* @__PURE__ */ new WeakSet();
let originalConsoleError;
let consoleFilterRefs = 0;
async function renderJSX(result, vnode) {
  switch (true) {
    case vnode instanceof HTMLString:
      if (vnode.toString().trim() === "") {
        return "";
      }
      return vnode;
    case typeof vnode === "string":
      return markHTMLString(escapeHTML(vnode));
    case typeof vnode === "function":
      return vnode;
    case (!vnode && vnode !== 0):
      return "";
    case Array.isArray(vnode):
      return markHTMLString(
        (await Promise.all(vnode.map((v) => renderJSX(result, v)))).join("")
      );
  }
  if (isVNode(vnode)) {
    switch (true) {
      case !vnode.type: {
        throw new Error(`Unable to render ${result._metadata.pathname} because it contains an undefined Component!
Did you forget to import the component or is it possible there is a typo?`);
      }
      case vnode.type === Symbol.for("astro:fragment"):
        return renderJSX(result, vnode.props.children);
      case vnode.type.isAstroComponentFactory: {
        let props = {};
        let slots = {};
        for (const [key, value] of Object.entries(vnode.props ?? {})) {
          if (key === "children" || value && typeof value === "object" && value["$$slot"]) {
            slots[key === "children" ? "default" : key] = () => renderJSX(result, value);
          } else {
            props[key] = value;
          }
        }
        return markHTMLString(await renderToString(result, vnode.type, props, slots));
      }
      case (!vnode.type && vnode.type !== 0):
        return "";
      case (typeof vnode.type === "string" && vnode.type !== ClientOnlyPlaceholder):
        return markHTMLString(await renderElement$1(result, vnode.type, vnode.props ?? {}));
    }
    if (vnode.type) {
      let extractSlots2 = function(child) {
        if (Array.isArray(child)) {
          return child.map((c) => extractSlots2(c));
        }
        if (!isVNode(child)) {
          _slots.default.push(child);
          return;
        }
        if ("slot" in child.props) {
          _slots[child.props.slot] = [..._slots[child.props.slot] ?? [], child];
          delete child.props.slot;
          return;
        }
        _slots.default.push(child);
      };
      if (typeof vnode.type === "function" && vnode.type["astro:renderer"]) {
        skipAstroJSXCheck.add(vnode.type);
      }
      if (typeof vnode.type === "function" && vnode.props["server:root"]) {
        const output2 = await vnode.type(vnode.props ?? {});
        return await renderJSX(result, output2);
      }
      if (typeof vnode.type === "function" && !skipAstroJSXCheck.has(vnode.type)) {
        useConsoleFilter();
        try {
          const output2 = await vnode.type(vnode.props ?? {});
          if (output2 && output2[AstroJSX]) {
            return await renderJSX(result, output2);
          } else if (!output2) {
            return await renderJSX(result, output2);
          }
        } catch (e) {
          skipAstroJSXCheck.add(vnode.type);
        } finally {
          finishUsingConsoleFilter();
        }
      }
      const { children = null, ...props } = vnode.props ?? {};
      const _slots = {
        default: []
      };
      extractSlots2(children);
      for (const [key, value] of Object.entries(props)) {
        if (value["$$slot"]) {
          _slots[key] = value;
          delete props[key];
        }
      }
      const slotPromises = [];
      const slots = {};
      for (const [key, value] of Object.entries(_slots)) {
        slotPromises.push(
          renderJSX(result, value).then((output2) => {
            if (output2.toString().trim().length === 0)
              return;
            slots[key] = () => output2;
          })
        );
      }
      await Promise.all(slotPromises);
      let output;
      if (vnode.type === ClientOnlyPlaceholder && vnode.props["client:only"]) {
        output = await renderComponent(
          result,
          vnode.props["client:display-name"] ?? "",
          null,
          props,
          slots
        );
      } else {
        output = await renderComponent(
          result,
          typeof vnode.type === "function" ? vnode.type.name : vnode.type,
          vnode.type,
          props,
          slots
        );
      }
      if (typeof output !== "string" && Symbol.asyncIterator in output) {
        let parts = new HTMLParts();
        for await (const chunk of output) {
          parts.append(chunk, result);
        }
        return markHTMLString(parts.toString());
      } else {
        return markHTMLString(output);
      }
    }
  }
  return markHTMLString(`${vnode}`);
}
async function renderElement$1(result, tag, { children, ...props }) {
  return markHTMLString(
    `<${tag}${spreadAttributes(props)}${markHTMLString(
      (children == null || children == "") && voidElementNames.test(tag) ? `/>` : `>${children == null ? "" : await renderJSX(result, children)}</${tag}>`
    )}`
  );
}
function useConsoleFilter() {
  consoleFilterRefs++;
  if (!originalConsoleError) {
    originalConsoleError = console.error;
    try {
      console.error = filteredConsoleError;
    } catch (error) {
    }
  }
}
function finishUsingConsoleFilter() {
  consoleFilterRefs--;
}
function filteredConsoleError(msg, ...rest) {
  if (consoleFilterRefs > 0 && typeof msg === "string") {
    const isKnownReactHookError = msg.includes("Warning: Invalid hook call.") && msg.includes("https://reactjs.org/link/invalid-hook-call");
    if (isKnownReactHookError)
      return;
  }
  originalConsoleError(msg, ...rest);
}

const PROP_TYPE = {
  Value: 0,
  JSON: 1,
  RegExp: 2,
  Date: 3,
  Map: 4,
  Set: 5,
  BigInt: 6,
  URL: 7,
  Uint8Array: 8,
  Uint16Array: 9,
  Uint32Array: 10
};
function serializeArray(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  if (parents.has(value)) {
    throw new Error(`Cyclic reference detected while serializing props for <${metadata.displayName} client:${metadata.hydrate}>!

Cyclic references cannot be safely serialized for client-side usage. Please remove the cyclic reference.`);
  }
  parents.add(value);
  const serialized = value.map((v) => {
    return convertToSerializedForm(v, metadata, parents);
  });
  parents.delete(value);
  return serialized;
}
function serializeObject(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  if (parents.has(value)) {
    throw new Error(`Cyclic reference detected while serializing props for <${metadata.displayName} client:${metadata.hydrate}>!

Cyclic references cannot be safely serialized for client-side usage. Please remove the cyclic reference.`);
  }
  parents.add(value);
  const serialized = Object.fromEntries(
    Object.entries(value).map(([k, v]) => {
      return [k, convertToSerializedForm(v, metadata, parents)];
    })
  );
  parents.delete(value);
  return serialized;
}
function convertToSerializedForm(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  const tag = Object.prototype.toString.call(value);
  switch (tag) {
    case "[object Date]": {
      return [PROP_TYPE.Date, value.toISOString()];
    }
    case "[object RegExp]": {
      return [PROP_TYPE.RegExp, value.source];
    }
    case "[object Map]": {
      return [
        PROP_TYPE.Map,
        JSON.stringify(serializeArray(Array.from(value), metadata, parents))
      ];
    }
    case "[object Set]": {
      return [
        PROP_TYPE.Set,
        JSON.stringify(serializeArray(Array.from(value), metadata, parents))
      ];
    }
    case "[object BigInt]": {
      return [PROP_TYPE.BigInt, value.toString()];
    }
    case "[object URL]": {
      return [PROP_TYPE.URL, value.toString()];
    }
    case "[object Array]": {
      return [PROP_TYPE.JSON, JSON.stringify(serializeArray(value, metadata, parents))];
    }
    case "[object Uint8Array]": {
      return [PROP_TYPE.Uint8Array, JSON.stringify(Array.from(value))];
    }
    case "[object Uint16Array]": {
      return [PROP_TYPE.Uint16Array, JSON.stringify(Array.from(value))];
    }
    case "[object Uint32Array]": {
      return [PROP_TYPE.Uint32Array, JSON.stringify(Array.from(value))];
    }
    default: {
      if (value !== null && typeof value === "object") {
        return [PROP_TYPE.Value, serializeObject(value, metadata, parents)];
      } else {
        return [PROP_TYPE.Value, value];
      }
    }
  }
}
function serializeProps(props, metadata) {
  const serialized = JSON.stringify(serializeObject(props, metadata));
  return serialized;
}

function serializeListValue(value) {
  const hash = {};
  push(value);
  return Object.keys(hash).join(" ");
  function push(item) {
    if (item && typeof item.forEach === "function")
      item.forEach(push);
    else if (item === Object(item))
      Object.keys(item).forEach((name) => {
        if (item[name])
          push(name);
      });
    else {
      item = item === false || item == null ? "" : String(item).trim();
      if (item) {
        item.split(/\s+/).forEach((name) => {
          hash[name] = true;
        });
      }
    }
  }
}

const HydrationDirectivesRaw = ["load", "idle", "media", "visible", "only"];
const HydrationDirectives = new Set(HydrationDirectivesRaw);
const HydrationDirectiveProps = new Set(HydrationDirectivesRaw.map((n) => `client:${n}`));
function extractDirectives(inputProps) {
  let extracted = {
    isPage: false,
    hydration: null,
    props: {}
  };
  for (const [key, value] of Object.entries(inputProps)) {
    if (key.startsWith("server:")) {
      if (key === "server:root") {
        extracted.isPage = true;
      }
    }
    if (key.startsWith("client:")) {
      if (!extracted.hydration) {
        extracted.hydration = {
          directive: "",
          value: "",
          componentUrl: "",
          componentExport: { value: "" }
        };
      }
      switch (key) {
        case "client:component-path": {
          extracted.hydration.componentUrl = value;
          break;
        }
        case "client:component-export": {
          extracted.hydration.componentExport.value = value;
          break;
        }
        case "client:component-hydration": {
          break;
        }
        case "client:display-name": {
          break;
        }
        default: {
          extracted.hydration.directive = key.split(":")[1];
          extracted.hydration.value = value;
          if (!HydrationDirectives.has(extracted.hydration.directive)) {
            throw new Error(
              `Error: invalid hydration directive "${key}". Supported hydration methods: ${Array.from(
                HydrationDirectiveProps
              ).join(", ")}`
            );
          }
          if (extracted.hydration.directive === "media" && typeof extracted.hydration.value !== "string") {
            throw new Error(
              'Error: Media query must be provided for "client:media", similar to client:media="(max-width: 600px)"'
            );
          }
          break;
        }
      }
    } else if (key === "class:list") {
      if (value) {
        extracted.props[key.slice(0, -5)] = serializeListValue(value);
      }
    } else {
      extracted.props[key] = value;
    }
  }
  return extracted;
}
async function generateHydrateScript(scriptOptions, metadata) {
  const { renderer, result, astroId, props, attrs } = scriptOptions;
  const { hydrate, componentUrl, componentExport } = metadata;
  if (!componentExport.value) {
    throw new Error(
      `Unable to resolve a valid export for "${metadata.displayName}"! Please open an issue at https://astro.build/issues!`
    );
  }
  const island = {
    children: "",
    props: {
      uid: astroId
    }
  };
  if (attrs) {
    for (const [key, value] of Object.entries(attrs)) {
      island.props[key] = escapeHTML(value);
    }
  }
  island.props["component-url"] = await result.resolve(decodeURI(componentUrl));
  if (renderer.clientEntrypoint) {
    island.props["component-export"] = componentExport.value;
    island.props["renderer-url"] = await result.resolve(decodeURI(renderer.clientEntrypoint));
    island.props["props"] = escapeHTML(serializeProps(props, metadata));
  }
  island.props["ssr"] = "";
  island.props["client"] = hydrate;
  let beforeHydrationUrl = await result.resolve("astro:scripts/before-hydration.js");
  if (beforeHydrationUrl.length) {
    island.props["before-hydration-url"] = beforeHydrationUrl;
  }
  island.props["opts"] = escapeHTML(
    JSON.stringify({
      name: metadata.displayName,
      value: metadata.hydrateArgs || ""
    })
  );
  return island;
}

class SlotString extends HTMLString {
  constructor(content, instructions) {
    super(content);
    this.instructions = instructions;
  }
}
async function renderSlot(_result, slotted, fallback) {
  if (slotted) {
    let iterator = renderChild(slotted);
    let content = "";
    let instructions = null;
    for await (const chunk of iterator) {
      if (chunk.type === "directive") {
        if (instructions === null) {
          instructions = [];
        }
        instructions.push(chunk);
      } else {
        content += chunk;
      }
    }
    return markHTMLString(new SlotString(content, instructions));
  }
  return fallback;
}
async function renderSlots(result, slots = {}) {
  let slotInstructions = null;
  let children = {};
  if (slots) {
    await Promise.all(
      Object.entries(slots).map(
        ([key, value]) => renderSlot(result, value).then((output) => {
          if (output.instructions) {
            if (slotInstructions === null) {
              slotInstructions = [];
            }
            slotInstructions.push(...output.instructions);
          }
          children[key] = output;
        })
      )
    );
  }
  return { slotInstructions, children };
}

async function* renderChild(child) {
  child = await child;
  if (child instanceof SlotString) {
    if (child.instructions) {
      yield* child.instructions;
    }
    yield child;
  } else if (isHTMLString(child)) {
    yield child;
  } else if (Array.isArray(child)) {
    for (const value of child) {
      yield markHTMLString(await renderChild(value));
    }
  } else if (typeof child === "function") {
    yield* renderChild(child());
  } else if (typeof child === "string") {
    yield markHTMLString(escapeHTML(child));
  } else if (!child && child !== 0) ; else if (child instanceof AstroComponent || Object.prototype.toString.call(child) === "[object AstroComponent]") {
    yield* renderAstroComponent(child);
  } else if (ArrayBuffer.isView(child)) {
    yield child;
  } else if (typeof child === "object" && (Symbol.asyncIterator in child || Symbol.iterator in child)) {
    yield* child;
  } else {
    yield child;
  }
}

function validateComponentProps(props, displayName) {
  var _a;
  if (((_a = {"BASE_URL":"/","MODE":"production","DEV":false,"PROD":true}) == null ? void 0 : _a.DEV) && props != null) {
    for (const prop of Object.keys(props)) {
      if (HydrationDirectiveProps.has(prop)) {
        console.warn(
          `You are attempting to render <${displayName} ${prop} />, but ${displayName} is an Astro component. Astro components do not render in the client and should not have a hydration directive. Please use a framework component for client rendering.`
        );
      }
    }
  }
}
class AstroComponent {
  constructor(htmlParts, expressions) {
    this.htmlParts = htmlParts;
    this.expressions = expressions;
  }
  get [Symbol.toStringTag]() {
    return "AstroComponent";
  }
  async *[Symbol.asyncIterator]() {
    const { htmlParts, expressions } = this;
    for (let i = 0; i < htmlParts.length; i++) {
      const html = htmlParts[i];
      const expression = expressions[i];
      yield markHTMLString(html);
      yield* renderChild(expression);
    }
  }
}
function isAstroComponent(obj) {
  return typeof obj === "object" && Object.prototype.toString.call(obj) === "[object AstroComponent]";
}
function isAstroComponentFactory(obj) {
  return obj == null ? false : obj.isAstroComponentFactory === true;
}
async function* renderAstroComponent(component) {
  for await (const value of component) {
    if (value || value === 0) {
      for await (const chunk of renderChild(value)) {
        switch (chunk.type) {
          case "directive": {
            yield chunk;
            break;
          }
          default: {
            yield markHTMLString(chunk);
            break;
          }
        }
      }
    }
  }
}
async function renderToString(result, componentFactory, props, children) {
  const Component = await componentFactory(result, props, children);
  if (!isAstroComponent(Component)) {
    const response = Component;
    throw response;
  }
  let parts = new HTMLParts();
  for await (const chunk of renderAstroComponent(Component)) {
    parts.append(chunk, result);
  }
  return parts.toString();
}
async function renderToIterable(result, componentFactory, displayName, props, children) {
  validateComponentProps(props, displayName);
  const Component = await componentFactory(result, props, children);
  if (!isAstroComponent(Component)) {
    console.warn(
      `Returning a Response is only supported inside of page components. Consider refactoring this logic into something like a function that can be used in the page.`
    );
    const response = Component;
    throw response;
  }
  return renderAstroComponent(Component);
}
async function renderTemplate(htmlParts, ...expressions) {
  return new AstroComponent(htmlParts, expressions);
}

/**
 * shortdash - https://github.com/bibig/node-shorthash
 *
 * @license
 *
 * (The MIT License)
 *
 * Copyright (c) 2013 Bibig <bibig@me.com>
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
const dictionary = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY";
const binary = dictionary.length;
function bitwise(str) {
  let hash = 0;
  if (str.length === 0)
    return hash;
  for (let i = 0; i < str.length; i++) {
    const ch = str.charCodeAt(i);
    hash = (hash << 5) - hash + ch;
    hash = hash & hash;
  }
  return hash;
}
function shorthash(text) {
  let num;
  let result = "";
  let integer = bitwise(text);
  const sign = integer < 0 ? "Z" : "";
  integer = Math.abs(integer);
  while (integer >= binary) {
    num = integer % binary;
    integer = Math.floor(integer / binary);
    result = dictionary[num] + result;
  }
  if (integer > 0) {
    result = dictionary[integer] + result;
  }
  return sign + result;
}

const voidElementNames = /^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;
const htmlBooleanAttributes = /^(allowfullscreen|async|autofocus|autoplay|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|itemscope)$/i;
const htmlEnumAttributes = /^(contenteditable|draggable|spellcheck|value)$/i;
const svgEnumAttributes = /^(autoReverse|externalResourcesRequired|focusable|preserveAlpha)$/i;
const STATIC_DIRECTIVES = /* @__PURE__ */ new Set(["set:html", "set:text"]);
const toIdent = (k) => k.trim().replace(/(?:(?!^)\b\w|\s+|[^\w]+)/g, (match, index) => {
  if (/[^\w]|\s/.test(match))
    return "";
  return index === 0 ? match : match.toUpperCase();
});
const toAttributeString = (value, shouldEscape = true) => shouldEscape ? String(value).replace(/&/g, "&#38;").replace(/"/g, "&#34;") : value;
const kebab = (k) => k.toLowerCase() === k ? k : k.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);
const toStyleString = (obj) => Object.entries(obj).map(([k, v]) => `${kebab(k)}:${v}`).join(";");
function defineScriptVars(vars) {
  let output = "";
  for (const [key, value] of Object.entries(vars)) {
    output += `const ${toIdent(key)} = ${JSON.stringify(value)};
`;
  }
  return markHTMLString(output);
}
function formatList(values) {
  if (values.length === 1) {
    return values[0];
  }
  return `${values.slice(0, -1).join(", ")} or ${values[values.length - 1]}`;
}
function addAttribute(value, key, shouldEscape = true) {
  if (value == null) {
    return "";
  }
  if (value === false) {
    if (htmlEnumAttributes.test(key) || svgEnumAttributes.test(key)) {
      return markHTMLString(` ${key}="false"`);
    }
    return "";
  }
  if (STATIC_DIRECTIVES.has(key)) {
    console.warn(`[astro] The "${key}" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.

Make sure to use the static attribute syntax (\`${key}={value}\`) instead of the dynamic spread syntax (\`{...{ "${key}": value }}\`).`);
    return "";
  }
  if (key === "class:list") {
    const listValue = toAttributeString(serializeListValue(value), shouldEscape);
    if (listValue === "") {
      return "";
    }
    return markHTMLString(` ${key.slice(0, -5)}="${listValue}"`);
  }
  if (key === "style" && !(value instanceof HTMLString) && typeof value === "object") {
    return markHTMLString(` ${key}="${toAttributeString(toStyleString(value), shouldEscape)}"`);
  }
  if (key === "className") {
    return markHTMLString(` class="${toAttributeString(value, shouldEscape)}"`);
  }
  if (value === true && (key.startsWith("data-") || htmlBooleanAttributes.test(key))) {
    return markHTMLString(` ${key}`);
  } else {
    return markHTMLString(` ${key}="${toAttributeString(value, shouldEscape)}"`);
  }
}
function internalSpreadAttributes(values, shouldEscape = true) {
  let output = "";
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, shouldEscape);
  }
  return markHTMLString(output);
}
function renderElement(name, { props: _props, children = "" }, shouldEscape = true) {
  const { lang: _, "data-astro-id": astroId, "define:vars": defineVars, ...props } = _props;
  if (defineVars) {
    if (name === "style") {
      delete props["is:global"];
      delete props["is:scoped"];
    }
    if (name === "script") {
      delete props.hoist;
      children = defineScriptVars(defineVars) + "\n" + children;
    }
  }
  if ((children == null || children == "") && voidElementNames.test(name)) {
    return `<${name}${internalSpreadAttributes(props, shouldEscape)} />`;
  }
  return `<${name}${internalSpreadAttributes(props, shouldEscape)}>${children}</${name}>`;
}

function componentIsHTMLElement(Component) {
  return typeof HTMLElement !== "undefined" && HTMLElement.isPrototypeOf(Component);
}
async function renderHTMLElement(result, constructor, props, slots) {
  const name = getHTMLElementName(constructor);
  let attrHTML = "";
  for (const attr in props) {
    attrHTML += ` ${attr}="${toAttributeString(await props[attr])}"`;
  }
  return markHTMLString(
    `<${name}${attrHTML}>${await renderSlot(result, slots == null ? void 0 : slots.default)}</${name}>`
  );
}
function getHTMLElementName(constructor) {
  const definedName = customElements.getName(constructor);
  if (definedName)
    return definedName;
  const assignedName = constructor.name.replace(/^HTML|Element$/g, "").replace(/[A-Z]/g, "-$&").toLowerCase().replace(/^-/, "html-");
  return assignedName;
}

const rendererAliases = /* @__PURE__ */ new Map([["solid", "solid-js"]]);
function guessRenderers(componentUrl) {
  const extname = componentUrl == null ? void 0 : componentUrl.split(".").pop();
  switch (extname) {
    case "svelte":
      return ["@astrojs/svelte"];
    case "vue":
      return ["@astrojs/vue"];
    case "jsx":
    case "tsx":
      return ["@astrojs/react", "@astrojs/preact", "@astrojs/vue (jsx)"];
    default:
      return ["@astrojs/react", "@astrojs/preact", "@astrojs/vue", "@astrojs/svelte"];
  }
}
function getComponentType(Component) {
  if (Component === Fragment) {
    return "fragment";
  }
  if (Component && typeof Component === "object" && Component["astro:html"]) {
    return "html";
  }
  if (isAstroComponentFactory(Component)) {
    return "astro-factory";
  }
  return "unknown";
}
async function renderComponent(result, displayName, Component, _props, slots = {}) {
  var _a;
  Component = await Component ?? Component;
  switch (getComponentType(Component)) {
    case "fragment": {
      const children2 = await renderSlot(result, slots == null ? void 0 : slots.default);
      if (children2 == null) {
        return children2;
      }
      return markHTMLString(children2);
    }
    case "html": {
      const { slotInstructions: slotInstructions2, children: children2 } = await renderSlots(result, slots);
      const html2 = Component.render({ slots: children2 });
      const hydrationHtml = slotInstructions2 ? slotInstructions2.map((instr) => stringifyChunk(result, instr)).join("") : "";
      return markHTMLString(hydrationHtml + html2);
    }
    case "astro-factory": {
      async function* renderAstroComponentInline() {
        let iterable = await renderToIterable(result, Component, displayName, _props, slots);
        yield* iterable;
      }
      return renderAstroComponentInline();
    }
  }
  if (!Component && !_props["client:only"]) {
    throw new Error(
      `Unable to render ${displayName} because it is ${Component}!
Did you forget to import the component or is it possible there is a typo?`
    );
  }
  const { renderers } = result._metadata;
  const metadata = { displayName };
  const { hydration, isPage, props } = extractDirectives(_props);
  let html = "";
  let attrs = void 0;
  if (hydration) {
    metadata.hydrate = hydration.directive;
    metadata.hydrateArgs = hydration.value;
    metadata.componentExport = hydration.componentExport;
    metadata.componentUrl = hydration.componentUrl;
  }
  const probableRendererNames = guessRenderers(metadata.componentUrl);
  if (Array.isArray(renderers) && renderers.length === 0 && typeof Component !== "string" && !componentIsHTMLElement(Component)) {
    const message = `Unable to render ${metadata.displayName}!

There are no \`integrations\` set in your \`astro.config.mjs\` file.
Did you mean to add ${formatList(probableRendererNames.map((r) => "`" + r + "`"))}?`;
    throw new Error(message);
  }
  const { children, slotInstructions } = await renderSlots(result, slots);
  let renderer;
  if (metadata.hydrate !== "only") {
    let isTagged = false;
    try {
      isTagged = Component && Component[Renderer];
    } catch {
    }
    if (isTagged) {
      const rendererName = Component[Renderer];
      renderer = renderers.find(({ name }) => name === rendererName);
    }
    if (!renderer) {
      let error;
      for (const r of renderers) {
        try {
          if (await r.ssr.check.call({ result }, Component, props, children)) {
            renderer = r;
            break;
          }
        } catch (e) {
          error ?? (error = e);
        }
      }
      if (!renderer && error) {
        throw error;
      }
    }
    if (!renderer && typeof HTMLElement === "function" && componentIsHTMLElement(Component)) {
      const output = renderHTMLElement(result, Component, _props, slots);
      return output;
    }
  } else {
    if (metadata.hydrateArgs) {
      const passedName = metadata.hydrateArgs;
      const rendererName = rendererAliases.has(passedName) ? rendererAliases.get(passedName) : passedName;
      renderer = renderers.find(
        ({ name }) => name === `@astrojs/${rendererName}` || name === rendererName
      );
    }
    if (!renderer && renderers.length === 1) {
      renderer = renderers[0];
    }
    if (!renderer) {
      const extname = (_a = metadata.componentUrl) == null ? void 0 : _a.split(".").pop();
      renderer = renderers.filter(
        ({ name }) => name === `@astrojs/${extname}` || name === extname
      )[0];
    }
  }
  if (!renderer) {
    if (metadata.hydrate === "only") {
      throw new Error(`Unable to render ${metadata.displayName}!

Using the \`client:only\` hydration strategy, Astro needs a hint to use the correct renderer.
Did you mean to pass <${metadata.displayName} client:only="${probableRendererNames.map((r) => r.replace("@astrojs/", "")).join("|")}" />
`);
    } else if (typeof Component !== "string") {
      const matchingRenderers = renderers.filter((r) => probableRendererNames.includes(r.name));
      const plural = renderers.length > 1;
      if (matchingRenderers.length === 0) {
        throw new Error(`Unable to render ${metadata.displayName}!

There ${plural ? "are" : "is"} ${renderers.length} renderer${plural ? "s" : ""} configured in your \`astro.config.mjs\` file,
but ${plural ? "none were" : "it was not"} able to server-side render ${metadata.displayName}.

Did you mean to enable ${formatList(probableRendererNames.map((r) => "`" + r + "`"))}?`);
      } else if (matchingRenderers.length === 1) {
        renderer = matchingRenderers[0];
        ({ html, attrs } = await renderer.ssr.renderToStaticMarkup.call(
          { result },
          Component,
          props,
          children,
          metadata
        ));
      } else {
        throw new Error(`Unable to render ${metadata.displayName}!

This component likely uses ${formatList(probableRendererNames)},
but Astro encountered an error during server-side rendering.

Please ensure that ${metadata.displayName}:
1. Does not unconditionally access browser-specific globals like \`window\` or \`document\`.
   If this is unavoidable, use the \`client:only\` hydration directive.
2. Does not conditionally return \`null\` or \`undefined\` when rendered on the server.

If you're still stuck, please open an issue on GitHub or join us at https://astro.build/chat.`);
      }
    }
  } else {
    if (metadata.hydrate === "only") {
      html = await renderSlot(result, slots == null ? void 0 : slots.fallback);
    } else {
      ({ html, attrs } = await renderer.ssr.renderToStaticMarkup.call(
        { result },
        Component,
        props,
        children,
        metadata
      ));
    }
  }
  if (renderer && !renderer.clientEntrypoint && renderer.name !== "@astrojs/lit" && metadata.hydrate) {
    throw new Error(
      `${metadata.displayName} component has a \`client:${metadata.hydrate}\` directive, but no client entrypoint was provided by ${renderer.name}!`
    );
  }
  if (!html && typeof Component === "string") {
    const childSlots = Object.values(children).join("");
    const iterable = renderAstroComponent(
      await renderTemplate`<${Component}${internalSpreadAttributes(props)}${markHTMLString(
        childSlots === "" && voidElementNames.test(Component) ? `/>` : `>${childSlots}</${Component}>`
      )}`
    );
    html = "";
    for await (const chunk of iterable) {
      html += chunk;
    }
  }
  if (!hydration) {
    return async function* () {
      if (slotInstructions) {
        yield* slotInstructions;
      }
      if (isPage || (renderer == null ? void 0 : renderer.name) === "astro:jsx") {
        yield html;
      } else {
        yield markHTMLString(html.replace(/\<\/?astro-slot\>/g, ""));
      }
    }();
  }
  const astroId = shorthash(
    `<!--${metadata.componentExport.value}:${metadata.componentUrl}-->
${html}
${serializeProps(
      props,
      metadata
    )}`
  );
  const island = await generateHydrateScript(
    { renderer, result, astroId, props, attrs },
    metadata
  );
  let unrenderedSlots = [];
  if (html) {
    if (Object.keys(children).length > 0) {
      for (const key of Object.keys(children)) {
        if (!html.includes(key === "default" ? `<astro-slot>` : `<astro-slot name="${key}">`)) {
          unrenderedSlots.push(key);
        }
      }
    }
  } else {
    unrenderedSlots = Object.keys(children);
  }
  const template = unrenderedSlots.length > 0 ? unrenderedSlots.map(
    (key) => `<template data-astro-template${key !== "default" ? `="${key}"` : ""}>${children[key]}</template>`
  ).join("") : "";
  island.children = `${html ?? ""}${template}`;
  if (island.children) {
    island.props["await-children"] = "";
  }
  async function* renderAll() {
    if (slotInstructions) {
      yield* slotInstructions;
    }
    yield { type: "directive", hydration, result };
    yield markHTMLString(renderElement("astro-island", island, false));
  }
  return renderAll();
}

const uniqueElements = (item, index, all) => {
  const props = JSON.stringify(item.props);
  const children = item.children;
  return index === all.findIndex((i) => JSON.stringify(i.props) === props && i.children == children);
};
function renderHead(result) {
  result._metadata.hasRenderedHead = true;
  const styles = Array.from(result.styles).filter(uniqueElements).map((style) => renderElement("style", style));
  result.styles.clear();
  const scripts = Array.from(result.scripts).filter(uniqueElements).map((script, i) => {
    return renderElement("script", script, false);
  });
  const links = Array.from(result.links).filter(uniqueElements).map((link) => renderElement("link", link, false));
  return markHTMLString(links.join("\n") + styles.join("\n") + scripts.join("\n"));
}
async function* maybeRenderHead(result) {
  if (result._metadata.hasRenderedHead) {
    return;
  }
  yield renderHead(result);
}

typeof process === "object" && Object.prototype.toString.call(process) === "[object process]";

function createComponent(cb) {
  cb.isAstroComponentFactory = true;
  return cb;
}
function __astro_tag_component__(Component, rendererName) {
  if (!Component)
    return;
  if (typeof Component !== "function")
    return;
  Object.defineProperty(Component, Renderer, {
    value: rendererName,
    enumerable: false,
    writable: false
  });
}
function spreadAttributes(values, _name, { class: scopedClassName } = {}) {
  let output = "";
  if (scopedClassName) {
    if (typeof values.class !== "undefined") {
      values.class += ` ${scopedClassName}`;
    } else if (typeof values["class:list"] !== "undefined") {
      values["class:list"] = [values["class:list"], scopedClassName];
    } else {
      values.class = scopedClassName;
    }
  }
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, true);
  }
  return markHTMLString(output);
}

const AstroJSX = "astro:jsx";
const Empty = Symbol("empty");
const toSlotName = (slotAttr) => slotAttr;
function isVNode(vnode) {
  return vnode && typeof vnode === "object" && vnode[AstroJSX];
}
function transformSlots(vnode) {
  if (typeof vnode.type === "string")
    return vnode;
  const slots = {};
  if (isVNode(vnode.props.children)) {
    const child = vnode.props.children;
    if (!isVNode(child))
      return;
    if (!("slot" in child.props))
      return;
    const name = toSlotName(child.props.slot);
    slots[name] = [child];
    slots[name]["$$slot"] = true;
    delete child.props.slot;
    delete vnode.props.children;
  }
  if (Array.isArray(vnode.props.children)) {
    vnode.props.children = vnode.props.children.map((child) => {
      if (!isVNode(child))
        return child;
      if (!("slot" in child.props))
        return child;
      const name = toSlotName(child.props.slot);
      if (Array.isArray(slots[name])) {
        slots[name].push(child);
      } else {
        slots[name] = [child];
        slots[name]["$$slot"] = true;
      }
      delete child.props.slot;
      return Empty;
    }).filter((v) => v !== Empty);
  }
  Object.assign(vnode.props, slots);
}
function markRawChildren(child) {
  if (typeof child === "string")
    return markHTMLString(child);
  if (Array.isArray(child))
    return child.map((c) => markRawChildren(c));
  return child;
}
function transformSetDirectives(vnode) {
  if (!("set:html" in vnode.props || "set:text" in vnode.props))
    return;
  if ("set:html" in vnode.props) {
    const children = markRawChildren(vnode.props["set:html"]);
    delete vnode.props["set:html"];
    Object.assign(vnode.props, { children });
    return;
  }
  if ("set:text" in vnode.props) {
    const children = vnode.props["set:text"];
    delete vnode.props["set:text"];
    Object.assign(vnode.props, { children });
    return;
  }
}
function createVNode(type, props) {
  const vnode = {
    [Renderer]: "astro:jsx",
    [AstroJSX]: true,
    type,
    props: props ?? {}
  };
  transformSetDirectives(vnode);
  transformSlots(vnode);
  return vnode;
}

const slotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());
async function check(Component, props, { default: children = null, ...slotted } = {}) {
  if (typeof Component !== "function")
    return false;
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = value;
  }
  try {
    const result = await Component({ ...props, ...slots, children });
    return result[AstroJSX];
  } catch (e) {
  }
  return false;
}
async function renderToStaticMarkup(Component, props = {}, { default: children = null, ...slotted } = {}) {
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = value;
  }
  const { result } = this;
  const html = await renderJSX(result, createVNode(Component, { ...props, ...slots, children }));
  return { html };
}
var server_default = {
  check,
  renderToStaticMarkup
};

const $$Astro$o = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/HeadSEO.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$HeadSEO = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$o, $$props, $$slots);
  Astro2.self = $$HeadSEO;
  const { content = {} } = Astro2.props;
  const contentTitle = content.title ? `${content.title} | iTwinUI` : "iTwinUI";
  const contentDescription = content.description || `An open-source design system for building consistent, accessible experiences.`;
  const canonicalUrl = "https://www.itwinui.com";
  const deployUrl = {"BASE_URL":"/","MODE":"production","DEV":false,"PROD":true}.DEPLOY_PRIME_URL || Astro2.request.url;
  return renderTemplate`<title>${contentTitle}</title>

<!-- Page Metadata -->
<link rel="canonical"${addAttribute(canonicalUrl, "href")}>
<meta name="description"${addAttribute(contentDescription, "content")}>

<!-- OpenGraph Tags -->
<meta property="og:title"${addAttribute(contentTitle, "content")}>
<meta property="og:description"${addAttribute(contentDescription, "content")}>
<meta property="og:type" content="article">
<meta property="og:url"${addAttribute(canonicalUrl, "content")}>
<meta property="og:locale"${addAttribute(content.ogLocale ?? "en-us", "content")}>
<meta property="og:image"${addAttribute(new URL("og-image.png", deployUrl), "content")}>
<meta property="og:image:alt" content="iTwinUI logo">
<meta property="og:site_name"${addAttribute(contentTitle, "content")}>

<!-- Twitter Tags -->
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title"${addAttribute(contentTitle, "content")}>
<meta name="twitter:description"${addAttribute(contentDescription, "content")}>
<meta name="twitter:image"${addAttribute(new URL("twitter-image.png", deployUrl), "content")}>
`;
});

var __freeze$1 = Object.freeze;
var __defProp$1 = Object.defineProperty;
var __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, "raw", { value: __freeze$1(raw || cooked.slice()) }));
var _a$1;
const $$Astro$n = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/_global.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$Global = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$n, $$props, $$slots);
  Astro2.self = $$Global;
  const { content = {} } = Astro2.props;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate(_a$1 || (_a$1 = __template$1(['<html class="iui-theme-dark astro-WGBIEITG"', "", `>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <meta name="color-scheme" content="dark">

    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="alternate icon" href="/favicon.ico" sizes="any">
    <link rel="sitemap" href="/sitemap.xml">
    <link rel="stylesheet" href="/prism-night-owl.css">

    <!--
      This is intentionally inlined to avoid FOUC
      TODO: investigate if this is possible to remove.
    -->
    <script>
      const theme = localStorage.getItem('theme');
      if (
        theme === 'dark' ||
        (!theme && window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        document.documentElement.dataset.theme = 'dark';
      } else {
        document.documentElement.dataset.theme = 'light';
      }
    <\/script>

    `, "\n\n    <!-- Resets -->\n    \n\n    <!-- Variables -->\n    \n\n    <!-- Page layout, etc -->\n    \n  ", '</head>\n\n  <body class="astro-WGBIEITG">\n    ', "\n\n    <!--\n      Scrollable a11y code helper.\n      TODO: remove the need for this script by creating a CodeBlock component.\n    -->\n    <script>\n      Array.from(document.getElementsByTagName('pre')).forEach((element) => {\n        element.setAttribute('tabindex', '0');\n      });\n    <\/script>\n  </body>\n</html>"])), addAttribute(content.dir ?? "ltr", "dir"), addAttribute(content.lang ?? "en-us", "lang"), renderComponent($$result, "HeadSEO", $$HeadSEO, { "content": content, "class": "astro-WGBIEITG" }), renderHead($$result), renderSlot($$result, $$slots["default"]));
});

const $$Astro$m = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/utils/SkipLink.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$SkipLink = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$m, $$props, $$slots);
  Astro2.self = $$SkipLink;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<a class="visually-hidden astro-SMHSHOHO" href="#article">
  ${renderSlot($$result, $$slots["default"], renderTemplate`
    <span class="astro-SMHSHOHO">Skip to Content</span>
  `)}
</a>

`;
});

const $$Astro$l = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/SidebarToggle.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$SidebarToggle = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$l, $$props, $$slots);
  Astro2.self = $$SidebarToggle;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "sidebar-toggle", "sidebar-toggle", { "class": "astro-ITBZD34H" }, { "default": () => renderTemplate`
  ${maybeRenderHead($$result)}<button type="button" aria-controls="main-navigation-list" aria-expanded="false" id="sidebar-toggle" aria-label="Toggle sidebar" class="astro-ITBZD34H">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" class="astro-ITBZD34H">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" class="astro-ITBZD34H"></path>
    </svg>
  </button>
` })}

${maybeRenderHead($$result)}

`;
});

const $$Astro$k = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/utils/VisuallyHidden.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$VisuallyHidden = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$k, $$props, $$slots);
  Astro2.self = $$VisuallyHidden;
  const { unhide = false } = Astro2.props;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<span${addAttribute(["visually-hidden", { "not-visually-hidden": unhide }], "class:list")}>
  ${renderSlot($$result, $$slots["default"])}
</span>

`;
});

const $$Astro$j = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/Header.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$Header = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$j, $$props, $$slots);
  Astro2.self = $$Header;
  const { pathname } = Astro2.url;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<header${addAttribute(Astro2.props.class + " astro-I5DPVZAD", "class")}>
  ${renderComponent($$result, "SkipLink", $$SkipLink, { "class": "astro-I5DPVZAD" })}

  ${pathname !== "/" && renderTemplate`${renderComponent($$result, "SidebarToggle", $$SidebarToggle, { "class": "astro-I5DPVZAD" })}`}

  <a href="/" class="logo astro-I5DPVZAD">
    ${renderComponent($$result, "VisuallyHidden", $$VisuallyHidden, { "class": "astro-I5DPVZAD" }, { "default": () => renderTemplate`iTwinUI home` })}
    <svg width="133.6" height="32" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 133.60001 32" fill="currentColor" class="astro-I5DPVZAD">
      <path d="M42,7.5c0,1-.79999,1.79999-1.79999,1.79999-.5,0-.90002-.20001-1.29999-.5-.30005-.39996-.5-.79999-.5-1.29999,0-1,.79999-1.79999,1.79999-1.79999s1.79999,.79999,1.79999,1.79999Zm-3.5,18.20001h3.29999V11.5h-3.29999v14.20001ZM26.90002,7.04999L15.47998,.35999c-.40997-.23999-.88-.37-1.34998-.37-.47003,0-.94,.13-1.35999,.37L1.38,7.03998c-.84998,.5-1.38,1.42004-1.38,2.40002v13.39001c0,.63995,.21997,1.25,.60999,1.72998,.21002,.27002,.46002,.48999,.76001,.66998l.28998,.17004,.68005,.39996,5.46997,3.23004h.01001c.17999,.07996,.38,.12,.58002,.12,.56,0,1.06-.31,1.33997-.80005,.31-.54999,.26001-1.20996-.08997-1.69995-.08002-.13-.18005-.24005-.30005-.34003l-.17999-.12-5.65997-3.31-.29004-.16998c-.06995-.05005-.12-.13-.12-.21002l-.01996-12.69c0-.08002,.03998-.15997,.12-.21002L13.96997,3.26001c.03003-.03003,.08002-.04004,.13-.04004,.04004,0,.09003,.01001,.13,.04004l10.80005,6.29999c.06995,.04999,.12,.13,.12,.22003l.01996,12.66998c0,.08997-.03998,.16998-.12,.20996l-9.37,5.55005v-9.89001c0-.96002-.51001-1.85004-1.33002-2.34003l-2.14996-1.29999c-.23999-.14001-.52002-.21997-.79999-.21997-.55005,0-1.06,.29999-1.33002,.76996-.44,.73999-.20001,1.70001,.53998,2.15002l1.84003,1.08002c.08002,.04999,.13,.13995,.13,.21997v10.85999c0,.86005,.42999,1.62,1.15997,2.05005,.35999,.20996,.76001,.31995,1.16003,.31995,.39996,0,.81-.10999,1.17999-.31995l10.82001-6.38c.83997-.49005,1.35999-1.39001,1.35999-2.35004V9.41998c0-.96997-.52002-1.87-1.35999-2.37Zm-12.77435,5.81775c1.12439,0,2.03949-.92468,2.03949-2.0611,0-1.1369-.9151-2.06152-2.03949-2.06152-1.12494,0-2.04004,.92462-2.04004,2.06152,0,1.13641,.9151,2.0611,2.04004,2.0611ZM58.40002,6.29999h-15v2.90002h5.79999V25.59998h3.39996V9.20001h5.80005v-2.90002Zm75.19995,2.60004v14.19995c0,2.30005-1.89996,4.10004-4.19995,4.10004h-20.40002c-2.29999,0-4.20001-1.79999-4.20001-4.10004V8.90002c0-2.30005,1.90002-4.10004,4.20001-4.10004h20.40002c2.29999,0,4.19995,1.79999,4.19995,4.10004Zm-12.19995,1.5c0-.70001-.5-1.20001-1.20001-1.20001s-1.20001,.5-1.20001,1.20001v7.29999c0,1.70001-1.39996,3.09998-3.09998,3.09998s-3.10004-1.39996-3.10004-3.09998v-7.29999c0-.70001-.5-1.20001-1.20001-1.20001-.69995,0-1.19995,.5-1.19995,1.20001v7.5c0,2.89996,2.10004,4.89996,5.5,4.89996s5.5-2,5.5-4.89996v-7.5Zm6.5,0c0-.70001-.5-1.20001-1.20001-1.20001s-1.20001,.5-1.20001,1.20001v11.19995c0,.70001,.5,1.20001,1.20001,1.20001s1.20001-.5,1.20001-1.20001V10.40002Zm-55.60004,12h-.09998l-2.79999-10.90002h-3.20001l-2.79999,10.90002h-.10004l-2.39996-10.90002h-3.40002l3.90002,14.20001h3.5l2.79999-10.40002h.09998l2.79999,10.40002h3.5l3.90002-14.20001h-3.29999l-2.40002,10.90002Zm21.29999-11.20001c-1.89996-.10004-3.69995,.89996-4.5,2.70001h-.09998v-2.40002h-3.20001l.10004,14.20001h3.29999v-8.60004c.09998-1.69995,1.5-3,3.20001-3,1.89996,0,2.79999,1.10004,2.79999,3.10004v8.5h3.29999v-9.20001c0-3.29999-1.79999-5.29999-4.90002-5.29999Zm-12.29999-5.5c-1,0-1.79999,.79999-1.79999,1.79999,0,.5,.20001,.90002,.5,1.29999,.40002,.29999,.79999,.5,1.29999,.5,1,0,1.80005-.79999,1.80005-1.79999s-.80005-1.79999-1.80005-1.79999Zm-1.59998,20h3.29999V11.5h-3.40002l.10004,14.20001Z" class="astro-I5DPVZAD"></path>
    </svg>
  </a>

  <nav aria-label="Global site" class="astro-I5DPVZAD">
    ${pathname === "/" && renderTemplate`<a href="/docs" class="astro-I5DPVZAD">Documentation</a>`}

    <a href="https://www.github.com/iTwin/iTwinUI-react" class="github-link astro-I5DPVZAD">
      ${renderComponent($$result, "VisuallyHidden", $$VisuallyHidden, { "class": "astro-I5DPVZAD" }, { "default": () => renderTemplate`GitHub` })}

      <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor" class="astro-I5DPVZAD"><path d="M12.026 2a9.975 9.975 0 0 0-3.153 19.439c.5.09.679-.217.679-.481c0-.237-.008-.865-.011-1.7c-2.775.6-3.361-1.338-3.361-1.338a2.635 2.635 0 0 0-1.107-1.459c-.9-.619.069-.605.069-.605c.64.088 1.205.467 1.527 1.028a2.124 2.124 0 0 0 2.9.829c.046-.506.272-.979.635-1.334c-2.214-.251-4.542-1.107-4.542-4.93a3.865 3.865 0 0 1 1.026-2.671a3.588 3.588 0 0 1 .1-2.64s.837-.269 2.742 1.021a9.439 9.439 0 0 1 4.992 0c1.906-1.291 2.742-1.021 2.742-1.021c.37.835.405 1.78.1 2.64a3.84 3.84 0 0 1 1.024 2.675c0 3.833-2.33 4.675-4.552 4.922c.48.49.725 1.162.675 1.846c0 1.334-.012 2.41-.012 2.737c0 .267.178.577.687.479A9.975 9.975 0 0 0 12.026 2Z" class="astro-I5DPVZAD"></path>
      </svg>
    </a>
  </nav>
</header>

`;
});

const _arrow_function$Y = (props) => {
  const [logoRotate, setLogoRotate] = React.useState({
    x: 0,
    y: 0
  });
  const [gradientRotate, setGradientRotate] = React.useState(135);
  const [highlightRotate, setHighlightRotate] = React.useState(270);
  const [animation, setAnimation] = React.useState("none");
  const svgRef = React.useRef(null);
  const windowWidth = useWindowWidth();
  React.useEffect(() => {
    const {
      x: svgX,
      y: svgY,
      width: svgWidth,
      height: svgHeight
    } = svgRef.current.getBoundingClientRect();
    const svgCenterX = svgX + svgWidth / 2;
    const svgCenterY = svgY + svgHeight / 2;
    const clamp = (value, min, max) => Math.min(Math.max(value, min), max);
    const handle = (e) => {
      const {
        pageX,
        pageY
      } = e;
      const deltaX = pageX - svgCenterX;
      const deltaY = pageY - svgCenterY;
      const x = clamp(deltaX / 20, -15, 15);
      const y = clamp(-deltaY / 20, -15, 15);
      const gradientRotate2 = Math.atan2(y, x) * 180 / Math.PI;
      setAnimation("none");
      setLogoRotate({
        x,
        y
      });
      setGradientRotate(gradientRotate2);
      setHighlightRotate(gradientRotate2);
    };
    const mouseLeaveHandle = (e) => {
      setAnimation("transform 1s ease");
      setLogoRotate({
        x: 0,
        y: 0
      });
      setGradientRotate(135);
      setHighlightRotate(270);
    };
    document.addEventListener("mousemove", handle);
    document.addEventListener("mouseleave", mouseLeaveHandle);
    return () => {
      document.removeEventListener("mousemove", handle);
      document.removeEventListener("mouseleave", mouseLeaveHandle);
    };
  }, [windowWidth]);
  return /* @__PURE__ */ jsxs("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 291.42 333",
    style: {
      transform: `rotateY(${logoRotate.x}deg) rotateX(${logoRotate.y}deg)`,
      transition: `${animation}`
    },
    ref: svgRef,
    ...props,
    children: [/* @__PURE__ */ jsxs("defs", {
      children: [/* @__PURE__ */ jsxs("linearGradient", {
        id: "grad1",
        gradientTransform: `rotate(${90 - gradientRotate} 0.5 0.5)`,
        children: [/* @__PURE__ */ jsx("stop", {
          offset: "0%",
          stopColor: "#ffb6fc",
          stopOpacity: "1"
        }), /* @__PURE__ */ jsx("stop", {
          offset: "100%",
          stopColor: "#83a4ff",
          stopOpacity: "1"
        })]
      }), /* @__PURE__ */ jsxs("linearGradient", {
        id: "gra2",
        gradientTransform: `rotate(${-highlightRotate} 0.5 0.5)`,
        children: [/* @__PURE__ */ jsx("stop", {
          offset: "0%",
          stopColor: "#fff",
          stopOpacity: "1"
        }), /* @__PURE__ */ jsx("stop", {
          offset: "60%",
          stopColor: "#fff",
          stopOpacity: "0"
        })]
      })]
    }), /* @__PURE__ */ jsx("path", {
      stroke: "url(#gra2)",
      strokeWidth: "2px",
      fill: "url(#grad1)",
      d: "M153.89,333c-3.62,0-7.25-.98-10.48-2.84-6.56-3.92-10.48-10.87-10.48-18.71v-115.88c0-2.16-1.18-4.21-3.04-5.39l-19.49-11.56c-6.07-3.72-8.13-11.75-4.51-17.93,3.53-6.17,11.36-8.33,17.53-4.6l22.73,13.81c7.64,4.6,12.34,12.93,12.34,21.84v107.85c0,1.67,1.86,2.74,3.23,1.86l101.29-60.24c1.86-1.08,3.04-3.13,3.04-5.39l-.2-135.18c0-2.16-1.18-4.21-3.04-5.39L148.6,27.97c-1.96-1.18-4.51-1.18-6.47,0L28.31,95.65c-1.86,1.08-3.04,3.13-3.04,5.39l.2,135.28c0,2.16,1.18,4.21,3.04,5.39l82.67,48.88c6.07,3.62,8.23,11.66,4.7,17.93-3.53,6.27-11.36,8.33-17.44,4.8L12.73,262.28c-7.93-4.7-12.73-13.22-12.73-22.43V97.03c0-9.21,4.9-17.73,12.83-22.43L133.22,3.38c7.74-4.51,17.24-4.51,24.98,0l120.68,71.41c7.74,4.6,12.54,13.03,12.54,22.04V240.14c0,9.01-4.7,17.34-12.54,21.94l-114.41,68.08c-3.33,1.86-6.95,2.84-10.58,2.84Zm-26.15-200.03c0,10.09,8.03,18.32,17.93,18.32s17.93-8.23,17.93-18.32-8.03-18.32-17.93-18.32c-9.89,0-17.93,8.13-17.93,18.32Z"
    })]
  });
};
const useWindowWidth = () => {
  const [windowWidth, setWindowWidth] = React.useState();
  React.useEffect(() => {
    const handleResize = () => setWindowWidth(window.innerWidth);
    window.addEventListener("resize", handleResize);
    handleResize();
    return () => window.removeEventListener("resize", handleResize);
  }, []);
  return windowWidth;
};
__astro_tag_component__(_arrow_function$Y, "@astrojs/react");

const $$Astro$i = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/icons/AccessibleIcon.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$AccessibleIcon = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$i, $$props, $$slots);
  Astro2.self = $$AccessibleIcon;
  return renderTemplate`${maybeRenderHead($$result)}<svg xmlns="http://www.w3.org/2000/svg" width="84.295" height="96" viewBox="0 0 84.295 96"${spreadAttributes(Astro2.props)}>
  <path d="M112.317,158.852a13,13,0,0,1-6.594-1.794L76.45,139.645a12.943,12.943,0,0,1-6.28-11.005V93.079a12.9,12.9,0,0,1,6.28-11.017l29.269-17.414a13.018,13.018,0,0,1,13.192,0l29.267,17.412a12.636,12.636,0,0,1,6.287,10.874v35.7a12.893,12.893,0,0,1-6.28,11.017l-29.269,17.412A13,13,0,0,1,112.317,158.852Zm0-93.658a10.717,10.717,0,0,0-5.411,1.468L77.646,84.073a10.562,10.562,0,0,0-5.135,9.008v35.547a10.617,10.617,0,0,0,5.144,9.01l29.26,17.407a10.67,10.67,0,0,0,10.808,0l29.264-17.409a10.551,10.551,0,0,0,5.135-9.008V92.934A10.292,10.292,0,0,0,147,84.08l-.012-.007L117.719,66.662A10.639,10.639,0,0,0,112.32,65.194Zm.021,18.919a5.674,5.674,0,1,1-5.671,5.674,5.68,5.68,0,0,1,5.671-5.674m0-2.342a8.015,8.015,0,1,0,8.015,8.015,8.014,8.014,0,0,0-8.015-8.015Zm20.772,14.78a1.171,1.171,0,0,0-1.449-.8l-19.346,5.585L92.974,95.75A1.171,1.171,0,0,0,92.325,98l18.725,5.407v15.356L96.636,135.584a1.17,1.17,0,1,0,1.777,1.522l13.817-16.121,13.8,16.121a1.171,1.171,0,1,0,1.78-1.522l-14.414-16.843V103.463L132.312,98A1.171,1.171,0,0,0,133.112,96.551Z" transform="translate(-70.17 -62.852)"></path>
</svg>`;
});

const $$Astro$h = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/icons/NoFussIcon.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$NoFussIcon = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$h, $$props, $$slots);
  Astro2.self = $$NoFussIcon;
  return renderTemplate`${maybeRenderHead($$result)}<svg xmlns="http://www.w3.org/2000/svg" width="84.033" height="96" viewBox="0 0 84.033 96"${spreadAttributes(Astro2.props)}>
  <path d="M193.851,96.456a1.134,1.134,0,0,1-1.1-.856C190.2,85.582,188.3,83.69,178.286,81.135a1.135,1.135,0,0,1,0-2.2c10.018-2.553,11.91-4.447,14.465-14.465a1.18,1.18,0,0,1,2.2,0c2.555,10.018,4.447,11.912,14.465,14.465a1.135,1.135,0,0,1,0,2.2C199.4,83.69,197.507,85.582,194.952,95.6A1.137,1.137,0,0,1,193.851,96.456ZM182.738,80.034c6.5,2.089,9.023,4.613,11.113,11.115,2.089-6.5,4.61-9.026,11.115-11.115-6.5-2.089-9.026-4.613-11.115-11.113C191.761,75.421,189.238,77.944,182.738,80.034Zm-7.379,77.78,28.387-16.886a13.647,13.647,0,0,0,6.648-11.662V94.642a1.136,1.136,0,1,0-2.271,0v34.621a11.369,11.369,0,0,1-5.537,9.711L174.2,155.861a11.7,11.7,0,0,1-11.637,0l-28.387-16.886a11.427,11.427,0,0,1-5.544-9.7V94.785a11.376,11.376,0,0,1,5.535-9.711l28.385-16.886a11.48,11.48,0,0,1,11.644,0,1.137,1.137,0,0,0,1.154-1.96,13.765,13.765,0,0,0-13.954.007L133.006,83.12a13.662,13.662,0,0,0-6.645,11.662v34.506a13.7,13.7,0,0,0,6.645,11.64l28.4,16.891a13.764,13.764,0,0,0,13.952,0Z" transform="translate(-126.361 -63.715)"></path>
</svg>`;
});

const $$Astro$g = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/icons/EvolvingIcon.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$EvolvingIcon = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$g, $$props, $$slots);
  Astro2.self = $$EvolvingIcon;
  return renderTemplate`${maybeRenderHead($$result)}<svg xmlns="http://www.w3.org/2000/svg" width="84.295" height="96" viewBox="0 0 84.295 96"${spreadAttributes(Astro2.props)}>
  <path d="M270.924,82.057,241.657,64.646a13.022,13.022,0,0,0-13.194,0L199.194,82.062a12.909,12.909,0,0,0-6.28,11.017v35.561a12.953,12.953,0,0,0,6.28,11.005l29.276,17.414a13.018,13.018,0,0,0,13.192,0l29.269-17.412a12.9,12.9,0,0,0,6.278-11.017v-35.7A12.639,12.639,0,0,0,270.924,82.057Zm-7.678,59.435-8.954,5.327V128.857a6.593,6.593,0,0,0-3.266-5.664l-12.546-7.46a6.745,6.745,0,0,0-6.844,0L219.095,123.2a6.714,6.714,0,0,0-3.262,5.727v17.9l-8.954-5.327V113.047a7.809,7.809,0,0,1,3.8-6.671L231.06,94.252a7.9,7.9,0,0,1,8,0l20.395,12.131a7.63,7.63,0,0,1,3.8,6.561Zm-22.778,13.55a10.665,10.665,0,0,1-10.806,0l-11.49-6.835,0-.014V128.925a4.366,4.366,0,0,1,2.117-3.718l12.539-7.455a4.409,4.409,0,0,1,4.458,0l12.553,7.465a4.251,4.251,0,0,1,2.11,3.648v19.332l0,.019Zm34.4-26.417a10.546,10.546,0,0,1-5.135,9.008l-4.144,2.466V112.939a9.966,9.966,0,0,0-4.95-8.577L240.25,92.233a10.248,10.248,0,0,0-10.385,0L209.48,104.365a10.159,10.159,0,0,0-4.943,8.68V140.1l-4.135-2.461a10.613,10.613,0,0,1-5.147-9.01V93.081a10.558,10.558,0,0,1,5.137-9.008l29.262-17.412a10.681,10.681,0,0,1,10.808,0l29.269,17.412.014.007a10.289,10.289,0,0,1,5.121,8.853Z" transform="translate(-192.914 -62.852)"></path>
</svg>`;
});

const $$Astro$f = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/icons/ConsistentIcon.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$ConsistentIcon = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$f, $$props, $$slots);
  Astro2.self = $$ConsistentIcon;
  return renderTemplate`${maybeRenderHead($$result)}<svg xmlns="http://www.w3.org/2000/svg" width="84.297" height="96" viewBox="0 0 84.297 96"${spreadAttributes(Astro2.props)}>
  <path d="M85.126,51.029A1.17,1.17,0,0,0,83.955,52.2V65.159a10.554,10.554,0,0,1-5.135,9.008L49.557,91.576a10.685,10.685,0,0,1-10.811,0L9.486,74.171a10.614,10.614,0,0,1-5.144-9.01V29.611a10.548,10.548,0,0,1,5.135-9.006L38.742,3.2a10.675,10.675,0,0,1,10.809,0L78.289,20.287,62.623,24.01a1.17,1.17,0,0,0,.269,2.309,1.06,1.06,0,0,0,.269-.033l18.21-4.325a1.171,1.171,0,0,0,.883-1.346L78.991,2.372a1.186,1.186,0,0,0-1.358-.946,1.169,1.169,0,0,0-.946,1.358l2.77,15.475L50.74,1.18a13.014,13.014,0,0,0-13.19,0L8.28,18.592A12.9,12.9,0,0,0,2,29.609V65.173A12.95,12.95,0,0,0,8.28,76.178L37.555,93.592a13.026,13.026,0,0,0,13.192,0l29.27-17.414A12.894,12.894,0,0,0,86.3,65.161V52.2A1.17,1.17,0,0,0,85.126,51.029Z" transform="translate(-2 0.614)"></path>
</svg>`;
});

const $$Astro$e = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/NorthernLights.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$NorthernLights = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$e, $$props, $$slots);
  Astro2.self = $$NorthernLights;
  const randomInRange = (min, max) => {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  };
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<div class="lights astro-BD7Z5P2F">
  <div class="light-object astro-BD7Z5P2F"${addAttribute(`background-color: var(--color-highlight-${randomInRange(1, 3)});--duration:
    ${randomInRange(18, 20)}; --delay: ${randomInRange(2, 16)};  --y: ${randomInRange(150, 500)}px;`, "style")}>
  </div>
  <div class="light-object astro-BD7Z5P2F"${addAttribute(`background-color: var(--color-highlight-${randomInRange(1, 3)});--duration:
    ${randomInRange(18, 20)}; --delay: ${randomInRange(2, 16)};  --y: ${randomInRange(150, 500)}px; `, "style")}>
  </div>
  <div class="light-object astro-BD7Z5P2F"${addAttribute(`background-color: var(--color-highlight-${randomInRange(1, 3)});--duration:
    ${randomInRange(18, 20)}; --delay: ${randomInRange(2, 16)};  --y: ${randomInRange(150, 500)}px; `, "style")}>
  </div>
  <div class="light-object astro-BD7Z5P2F"${addAttribute(`background-color: var(--color-highlight-${randomInRange(1, 3)});--duration:
    ${randomInRange(18, 20)}; --delay: ${randomInRange(2, 16)};  --y: ${randomInRange(150, 500)}px; `, "style")}>
  </div>
  <div class="astro-BD7Z5P2F"></div>
  <div class="astro-BD7Z5P2F"></div>
  <div class="astro-BD7Z5P2F"></div>
  <div class="astro-BD7Z5P2F"></div>
  <div class="light-object astro-BD7Z5P2F"${addAttribute(`background-color: var(--color-highlight-${randomInRange(1, 3)});--duration:
    ${randomInRange(18, 20)}; --delay: ${randomInRange(2, 16)};  --y: ${randomInRange(150, 500)}px; `, "style")}>
  </div>
  <div class="light-object astro-BD7Z5P2F"${addAttribute(`background-color: var(--color-highlight-${randomInRange(1, 3)});--duration:
    ${randomInRange(18, 20)}; --delay: ${randomInRange(2, 16)};  --y: ${randomInRange(150, 500)}pxpx; `, "style")}>
  </div>
  <div class="light-object astro-BD7Z5P2F"${addAttribute(`background-color: var(--color-highlight-${randomInRange(1, 3)});--duration:
    ${randomInRange(18, 20)}; --delay: ${randomInRange(2, 16)};  --y: ${randomInRange(150, 500)}px; `, "style")}>
  </div>
  <div class="light-object astro-BD7Z5P2F"${addAttribute(`background-color: var(--color-highlight-${randomInRange(1, 3)});--duration:
    ${randomInRange(18, 20)}; --delay: ${randomInRange(2, 16)};  --y: ${randomInRange(150, 500)}px; `, "style")}>
  </div>
</div>

`;
});

const $$Astro$d = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/icons/CopyIcon.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$CopyIcon = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$d, $$props, $$slots);
  Astro2.self = $$CopyIcon;
  return renderTemplate`${maybeRenderHead($$result)}<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"${spreadAttributes(Astro2.props)}><path d="m5 10h-2a1 1 0 0 1 -1-1v-7a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v2h1v-2a2 2 0 0 0 -2-2h-5a2 2 0 0 0 -2 2v7a2 2 0 0 0 2 2h2zm8-4a1 1 0 0 1 1 1v7a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1-1v-7a1 1 0 0 1 1-1zm0-1h-5a2 2 0 0 0 -2 2v7a2 2 0 0 0 2 2h5a2 2 0 0 0 2-2v-7a2 2 0 0 0 -2-2z"></path>
</svg>`;
});

const $$Astro$c = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/icons/StatusSuccessIcon.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$StatusSuccessIcon = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$c, $$props, $$slots);
  Astro2.self = $$StatusSuccessIcon;
  return renderTemplate`${maybeRenderHead($$result)}<svg width="32" height="32" viewBox="0 0 20 20" fill="currentColor"${spreadAttributes(Astro2.props)}><path d="m0 11l2-2l5 5L18 3l2 2L7 18z"></path>
</svg>`;
});

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro$b = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/CopyCommandButton.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$CopyCommandButton = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$b, $$props, $$slots);
  Astro2.self = $$CopyCommandButton;
  const { command } = Astro2.props;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate(_a || (_a = __template(["", "\n\n<script>(function(){", "\n  customElements.define(\n    'copy-command-button',\n    class extends HTMLElement {\n      constructor() {\n        super();\n        const button = this.querySelector('button');\n        const output = this.querySelector('output');\n\n        button.addEventListener('click', async () => {\n          try {\n            await navigator.clipboard.writeText(command);\n\n            this.dataset.copied = 'true';\n            output.textContent = 'Copied!';\n\n            setTimeout(() => {\n              this.dataset.copied = 'false';\n              output.textContent = '';\n            }, 5000);\n          } catch {\n            console.error('Failed to copy to clipboard');\n          }\n        });\n      }\n    }\n  );\n})();<\/script>\n\n"])), renderComponent($$result, "copy-command-button", "copy-command-button", { "class": "astro-CNMHM3CN" }, { "default": () => renderTemplate`
  ${maybeRenderHead($$result)}<code class="astro-CNMHM3CN">${command}</code>

  <button aria-label="Copy to clipboard" class="astro-CNMHM3CN">
    ${renderComponent($$result, "CopyIcon", $$CopyIcon, { "aria-hidden": "true", "data-icon-name": "copy", "class": "astro-CNMHM3CN" })}
    ${renderComponent($$result, "StatusSuccessIcon", $$StatusSuccessIcon, { "aria-hidden": "true", "data-icon-name": "success", "class": "astro-CNMHM3CN" })}
  </button>

  <output class="visually-hidden astro-CNMHM3CN"></output>
` }), defineScriptVars({ command }));
});

const $$Astro$a = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/index.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$a, $$props, $$slots);
  Astro2.self = $$Index;
  const currentPage = new URL(Astro2.request.url).pathname;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "Global", $$Global, { "currentPage": currentPage, "class": "astro-GS74L464" }, { "default": () => renderTemplate`${renderComponent($$result, "NorthernLights", $$NorthernLights, { "aria-hidden": "true", "class": "astro-GS74L464" })}${renderComponent($$result, "Header", $$Header, { "class": "header astro-GS74L464" })}${maybeRenderHead($$result)}<main class="astro-GS74L464">
    <div class="title-box astro-GS74L464">
      <div class="hero-box astro-GS74L464">
        <div class="hero-text astro-GS74L464">
          <h1 class="astro-GS74L464">For a <span class="highlight-text astro-GS74L464">unified</span> experience</h1>
          <h2 class="subheading astro-GS74L464">
            iTwinUI delivers common UI components and UI layouts bundled with accessibility best
            practices, theming, and responsive design.
          </h2>
          <div class="button-area astro-GS74L464">
            <a class="main-button astro-GS74L464" href="/docs">Documentation</a>
            ${renderComponent($$result, "CopyCommandButton", $$CopyCommandButton, { "command": "npm i @itwin/itwinui-react", "class": "astro-GS74L464" })}
          </div>
        </div>
        <div class="animated-logo-wrapper astro-GS74L464">
          ${renderComponent($$result, "ITwinUILogo", _arrow_function$Y, { "client:idle": true, "client:component-hydration": "idle", "client:component-path": "~/components/iTwinUILogo", "client:component-export": "default", "class": "astro-GS74L464" })}
        </div>
      </div>

      <div class="demo-carousel-list astro-GS74L464">
        <div class="demo-wrapper astro-GS74L464">
          <div class="demo-box astro-GS74L464">${renderComponent($$result, "AlertDemo", null, { "client:only": "react", "client:component-hydration": "only", "class": "astro-GS74L464", "client:component-path": "~/demos/Alert.demo", "client:component-export": "default" })}</div>
          <h3 class="astro-GS74L464">Alert</h3>
          <p class="astro-GS74L464">A small box to quickly grab user attention and communicate a brief message</p>
        </div>

        <div class="demo-wrapper astro-GS74L464">
          <div class="demo-box astro-GS74L464">${renderComponent($$result, "DialogDemo", null, { "client:only": "react", "client:component-hydration": "only", "class": "astro-GS74L464", "client:component-path": "~/demos/Dialog.demo", "client:component-export": "default" })}</div>
          <h3 class="astro-GS74L464">Dialog</h3>
          <p class="astro-GS74L464">Provides the foundation for building modals and modeless dialogs</p>
        </div>

        <div class="demo-wrapper astro-GS74L464">
          <div class="demo-box astro-GS74L464">${renderComponent($$result, "FieldsetDemo", null, { "client:only": "react", "client:component-hydration": "only", "class": "astro-GS74L464", "client:component-path": "~/demos/Fieldset.demo", "client:component-export": "default" })}</div>
          <h3 class="astro-GS74L464">Fieldset</h3>
          <p class="astro-GS74L464">A fieldset is a container grouping interactive components together.</p>
        </div>

        <div class="demo-wrapper astro-GS74L464">
          <div class="demo-box astro-GS74L464">${renderComponent($$result, "SliderDemo", null, { "client:only": "react", "client:component-hydration": "only", "class": "astro-GS74L464", "client:component-path": "~/demos/Slider.demo", "client:component-export": "default" })}</div>
          <h3 class="astro-GS74L464">Slider</h3>
          <p class="astro-GS74L464">Sliders let users make selections from a range of values.</p>
        </div>

        <div class="demo-wrapper astro-GS74L464">
          <div class="demo-box astro-GS74L464">${renderComponent($$result, "ComboBoxDemo", null, { "client:only": "react", "client:component-hydration": "only", "class": "astro-GS74L464", "client:component-path": "~/demos/ComboBox.demo", "client:component-export": "default" })}</div>
          <h3 class="astro-GS74L464">ComboBox</h3>
          <p class="astro-GS74L464">Allows typing a value to filter and choose from the options in dropdown list.</p>
        </div>
      </div>
    </div>

    <div class="centered-content astro-GS74L464">
      <h2 class="highlight-text astro-GS74L464">Why iTwinUI?</h2>
      <div class="column-content astro-GS74L464">
        <div class="text-with-icon astro-GS74L464">
          ${renderComponent($$result, "ConsistentIcon", $$ConsistentIcon, { "class": "icon astro-GS74L464" })}
          <div class="astro-GS74L464">
            <h3 class="colored-text astro-GS74L464">Consistent</h3>
            <p class="astro-GS74L464">
              Our components and layouts library was designed specifically for apps within the iTwin
              space. It allows creating seamless front-end environments consistent with the iTwin
              experience.
            </p>
          </div>
        </div>
        <div class="text-with-icon astro-GS74L464">
          ${renderComponent($$result, "AccessibleIcon", $$AccessibleIcon, { "class": "icon astro-GS74L464" })}
          <div class="astro-GS74L464">
            <h3 class="colored-text astro-GS74L464">Accessible</h3>
            <p class="astro-GS74L464">
              The web is for everyone. All our components were designed with accessibility in mind
              for an inclusive, comfortable experience that leaves no one behind.
            </p>
          </div>
        </div>
        <div class="text-with-icon astro-GS74L464">
          ${renderComponent($$result, "NoFussIcon", $$NoFussIcon, { "class": "icon astro-GS74L464" })}
          <div class="astro-GS74L464">
            <h3 class="colored-text astro-GS74L464">No fuss</h3>
            <p class="astro-GS74L464">
              Skip the brainstorming sessions. Our components and layouts are entirely ready-to-use,
              so you can focus on getting things done.
            </p>
          </div>
        </div>
        <div class="text-with-icon astro-GS74L464">
          ${renderComponent($$result, "EvolvingIcon", $$EvolvingIcon, { "class": "icon astro-GS74L464" })}
          <div class="astro-GS74L464">
            <h3 class="colored-text astro-GS74L464">Evolving</h3>
            <p class="astro-GS74L464">
              iTwinUI is maintained daily and frequently updated by its supporting team, so you
              always have access to the latest version of our assets.
            </p>
          </div>
        </div>
      </div>
    </div>
    <div class="centered-content astro-GS74L464">
      <h2 class="highlight-text astro-GS74L464">Our library</h2>
      <div class="library-list astro-GS74L464">
        <a class="library-item astro-GS74L464" href="/docs">
          <div class="astro-GS74L464">
            <h3 class="astro-GS74L464">Components</h3>
            <p class="astro-GS74L464">
              See our extensive library of pre-coded components. You can view live demos of how they
              behave in their environment to determine if they are the right fit.
            </p>
          </div>
        </a>
        <a class="library-item astro-GS74L464" href="https://itwin.github.io/iTwinUI-layouts/" target="_blank">
          <div class="astro-GS74L464">
            <h3 class="astro-GS74L464">Layouts</h3>
            <p class="astro-GS74L464">Full-page layouts built for maximizing your efficiency when you need it the most.</p>
          </div>
        </a>
        <a class="library-item astro-GS74L464" href="https://itwin.github.io/iTwinUI-icons/" target="_blank">
          <div class="astro-GS74L464">
            <h3 class="astro-GS74L464">Icons</h3>
            <p class="astro-GS74L464">
              Hundreds of flexible, flat-styled icons in SVG format, allowing for infinite
              scalability with zero quality loss.
            </p>
          </div>
        </a>
      </div>
    </div>
  </main><footer class="astro-GS74L464">© 2022 Bentley Systems, Inc</footer>` })}`;
});

const $$file = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/index.astro";
const $$url = "";

const _page0 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index,
	file: $$file,
	url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$T = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$T;
  content.file = file$T;
  content.url = url$T;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$T,
    url: url$T,
    content,
    frontmatter: content,
    headings: getHeadings$T(),
    "server:root": true,
    children
  });
};
const frontmatter$T = {
  "title": "Getting started",
  "description": "Get started with iTwinUI",
  "layout": "./_layout.astro",
  "toc": false
};
function getHeadings$T() {
  return [{
    "depth": 2,
    "slug": "installation",
    "text": "Installation"
  }, {
    "depth": 2,
    "slug": "usage",
    "text": "Usage"
  }, {
    "depth": 2,
    "slug": "theming",
    "text": "Theming"
  }];
}

function _createMdxContent$T(props) {
  const _components = Object.assign({
    main: "main",
    h2: "h2",
    a: "a",
    pre: "pre",
    code: "code",
    span: "span",
    p: "p",
    ul: "ul",
    li: "li",
    em: "em"
  }, props.components);

  return createVNode(_components.main, {
    children: [createVNode(_components.h2, {
      id: "installation",
      children: createVNode(_components.a, {
        href: "#installation",
        children: "Installation"
      })
    }), "\n", createVNode(_components.pre, {
      className: "language-shell",
      children: createVNode(_components.code, {
        className: "language-shell",
        children: [createVNode(_components.span, {
          className: "token function",
          children: "npm"
        }), " ", createVNode(_components.span, {
          className: "token function",
          children: "install"
        }), " @itwin/itwinui-react"]
      })
    }), "\n", createVNode(_components.pre, {
      className: "language-shell",
      children: createVNode(_components.code, {
        className: "language-shell",
        children: [createVNode(_components.span, {
          className: "token function",
          children: "yarn"
        }), " ", createVNode(_components.span, {
          className: "token function",
          children: "add"
        }), " @itwin/itwinui-react"]
      })
    }), "\n", createVNode(_components.h2, {
      id: "usage",
      children: createVNode(_components.a, {
        href: "#usage",
        children: "Usage"
      })
    }), "\n", createVNode(_components.p, {
      children: "Import the component you want and start using it!"
    }), "\n", createVNode(_components.pre, {
      className: "language-jsx",
      children: createVNode(_components.code, {
        className: "language-jsx",
        children: [createVNode(_components.span, {
          className: "token keyword",
          children: "import"
        }), " ", createVNode(_components.span, {
          className: "token punctuation",
          children: "{"
        }), " Button ", createVNode(_components.span, {
          className: "token punctuation",
          children: "}"
        }), " ", createVNode(_components.span, {
          className: "token keyword",
          children: "from"
        }), " ", createVNode(_components.span, {
          className: "token string",
          children: "'@itwin/itwinui-react'"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        }), "\n\n", createVNode(_components.span, {
          className: "token keyword",
          children: "const"
        }), " ", createVNode(_components.span, {
          className: "token function-variable function",
          children: "App"
        }), " ", createVNode(_components.span, {
          className: "token operator",
          children: "="
        }), " ", createVNode(_components.span, {
          className: "token punctuation",
          children: "("
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ")"
        }), " ", createVNode(_components.span, {
          className: "token operator",
          children: "=>"
        }), " ", createVNode(_components.span, {
          className: "token tag",
          children: [createVNode(_components.span, {
            className: "token tag",
            children: [createVNode(_components.span, {
              className: "token punctuation",
              children: "<"
            }), createVNode(_components.span, {
              className: "token class-name",
              children: "Button"
            })]
          }), createVNode(_components.span, {
            className: "token punctuation",
            children: ">"
          })]
        }), createVNode(_components.span, {
          className: "token plain-text",
          children: "Hello!"
        }), createVNode(_components.span, {
          className: "token tag",
          children: [createVNode(_components.span, {
            className: "token tag",
            children: [createVNode(_components.span, {
              className: "token punctuation",
              children: "</"
            }), createVNode(_components.span, {
              className: "token class-name",
              children: "Button"
            })]
          }), createVNode(_components.span, {
            className: "token punctuation",
            children: ">"
          })]
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        })]
      })
    }), "\n", createVNode(_components.h2, {
      id: "theming",
      children: createVNode(_components.a, {
        href: "#theming",
        children: "Theming"
      })
    }), "\n", createVNode(_components.p, {
      children: "By default, all components use the light theme but we also provide support for switching to dark theme in two different ways:"
    }), "\n", createVNode(_components.ul, {
      children: ["\n", createVNode(_components.li, {
        children: ["\n", createVNode(_components.p, {
          children: "Use ThemeProvider in your root component where you can pass one of the following values:"
        }), "\n", createVNode(_components.ul, {
          children: ["\n", createVNode(_components.li, {
            children: "light (default)"
          }), "\n", createVNode(_components.li, {
            children: "dark"
          }), "\n", createVNode(_components.li, {
            children: "os (which respects the color scheme of the operating system)"
          }), "\n"]
        }), "\n"]
      }), "\n"]
    }), "\n", createVNode(_components.pre, {
      className: "language-jsx",
      children: createVNode(_components.code, {
        className: "language-jsx",
        children: [createVNode(_components.span, {
          className: "token keyword",
          children: "import"
        }), " ", createVNode(_components.span, {
          className: "token punctuation",
          children: "{"
        }), " ThemeProvider ", createVNode(_components.span, {
          className: "token punctuation",
          children: "}"
        }), " ", createVNode(_components.span, {
          className: "token keyword",
          children: "from"
        }), " ", createVNode(_components.span, {
          className: "token string",
          children: "'@itwin/itwinui-react'"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        }), "\n\n", createVNode(_components.span, {
          className: "token keyword",
          children: "const"
        }), " ", createVNode(_components.span, {
          className: "token function-variable function",
          children: "App"
        }), " ", createVNode(_components.span, {
          className: "token operator",
          children: "="
        }), " ", createVNode(_components.span, {
          className: "token punctuation",
          children: "("
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ")"
        }), " ", createVNode(_components.span, {
          className: "token operator",
          children: "=>"
        }), " ", createVNode(_components.span, {
          className: "token punctuation",
          children: "("
        }), "\n  ", createVNode(_components.span, {
          className: "token tag",
          children: [createVNode(_components.span, {
            className: "token tag",
            children: createVNode(_components.span, {
              className: "token punctuation",
              children: "<"
            })
          }), createVNode(_components.span, {
            className: "token punctuation",
            children: ">"
          })]
        }), createVNode(_components.span, {
          className: "token plain-text",
          children: "\n    "
        }), createVNode(_components.span, {
          className: "token tag",
          children: [createVNode(_components.span, {
            className: "token tag",
            children: [createVNode(_components.span, {
              className: "token punctuation",
              children: "<"
            }), createVNode(_components.span, {
              className: "token class-name",
              children: "ThemeProvider"
            })]
          }), " ", createVNode(_components.span, {
            className: "token attr-name",
            children: "theme"
          }), createVNode(_components.span, {
            className: "token attr-value",
            children: [createVNode(_components.span, {
              className: "token punctuation attr-equals",
              children: "="
            }), createVNode(_components.span, {
              className: "token punctuation",
              children: "'"
            }), "dark", createVNode(_components.span, {
              className: "token punctuation",
              children: "'"
            })]
          }), " ", createVNode(_components.span, {
            className: "token punctuation",
            children: "/>"
          })]
        }), createVNode(_components.span, {
          className: "token plain-text",
          children: "\n    // Your code goes here.\n  "
        }), createVNode(_components.span, {
          className: "token tag",
          children: [createVNode(_components.span, {
            className: "token tag",
            children: createVNode(_components.span, {
              className: "token punctuation",
              children: "</"
            })
          }), createVNode(_components.span, {
            className: "token punctuation",
            children: ">"
          })]
        }), "\n", createVNode(_components.span, {
          className: "token punctuation",
          children: ")"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        })]
      })
    }), "\n", createVNode(_components.ul, {
      children: ["\n", createVNode(_components.li, {
        children: "The useTheme hook also provides the same functionality as ThemeProvider."
      }), "\n"]
    }), "\n", createVNode(_components.pre, {
      className: "language-jsx",
      children: createVNode(_components.code, {
        className: "language-jsx",
        children: [createVNode(_components.span, {
          className: "token keyword",
          children: "import"
        }), " ", createVNode(_components.span, {
          className: "token punctuation",
          children: "{"
        }), " useTheme ", createVNode(_components.span, {
          className: "token punctuation",
          children: "}"
        }), " ", createVNode(_components.span, {
          className: "token keyword",
          children: "from"
        }), " ", createVNode(_components.span, {
          className: "token string",
          children: "'@itwin/itwinui-react'"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        }), "\n\n", createVNode(_components.span, {
          className: "token keyword",
          children: "const"
        }), " ", createVNode(_components.span, {
          className: "token function-variable function",
          children: "App"
        }), " ", createVNode(_components.span, {
          className: "token operator",
          children: "="
        }), " ", createVNode(_components.span, {
          className: "token punctuation",
          children: "("
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ")"
        }), " ", createVNode(_components.span, {
          className: "token operator",
          children: "=>"
        }), " ", createVNode(_components.span, {
          className: "token punctuation",
          children: "{"
        }), "\n  ", createVNode(_components.span, {
          className: "token function",
          children: "useTheme"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: "("
        }), createVNode(_components.span, {
          className: "token string",
          children: "'dark'"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ")"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        }), "\n  ", createVNode(_components.span, {
          className: "token keyword",
          children: "return"
        }), " ", createVNode(_components.span, {
          className: "token tag",
          children: [createVNode(_components.span, {
            className: "token tag",
            children: createVNode(_components.span, {
              className: "token punctuation",
              children: "<"
            })
          }), createVNode(_components.span, {
            className: "token punctuation",
            children: ">"
          })]
        }), createVNode(_components.span, {
          className: "token plain-text",
          children: "/* Your code goes here.*/"
        }), createVNode(_components.span, {
          className: "token tag",
          children: [createVNode(_components.span, {
            className: "token tag",
            children: createVNode(_components.span, {
              className: "token punctuation",
              children: "</"
            })
          }), createVNode(_components.span, {
            className: "token punctuation",
            children: ">"
          })]
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        }), "\n", createVNode(_components.span, {
          className: "token punctuation",
          children: "}"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        })]
      })
    }), "\n", createVNode(_components.p, {
      children: createVNode(_components.em, {
        children: "Note: You only need to use one of these methods, and it only needs to be done once."
      })
    })]
  });
}

function MDXContent$T(props = {}) {
  return createVNode(MDXLayout$T, { ...props,
    children: createVNode(_createMdxContent$T, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$T, "astro:jsx");

__astro_tag_component__(MDXContent$T, "astro:jsx");
MDXContent$T[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$T.layout);
const url$T = "/docs";
const file$T = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/index.mdx";
function rawContent$T() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$T() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$T = MDXContent$T;

const _page1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$T,
	getHeadings: getHeadings$T,
	default: MDXContent$T,
	url: url$T,
	file: file$T,
	rawContent: rawContent$T,
	compiledContent: compiledContent$T,
	Content: Content$T
}, Symbol.toStringTag, { value: 'Module' }));

let __dirname = dirname(fileURLToPath(import.meta.url));
{
  __dirname = join(__dirname, "..");
}
const __dirname$1 = __dirname;

const $$Astro$9 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/PropsTable.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$PropsTable = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$9, $$props, $$slots);
  Astro2.self = $$PropsTable;
  const defaultHandlers = Object.values(handlers).map((handler) => handler);
  const defaultResolver = resolver.findAllExportedComponentDefinitions;
  const defaultImporter = importers.makeFsImporter();
  const relativePath = Astro2.props.path.replace("@itwin/itwinui-react", "../../packages/iTwinUI-react");
  const componentPath = path.join(__dirname$1, relativePath);
  const componentName = [...componentPath.split("/")].pop().split(".")[0];
  const src = fs.readFileSync(componentPath, "utf8");
  const docgenResults = componentPath.endsWith(".tsx") ? parse(src, defaultResolver, defaultHandlers, {
    importer: defaultImporter
  }) : parse$1(componentPath);
  const { props } = [...docgenResults].find((docs) => docs["displayName"] === componentName);
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<div class="wrapper astro-MNTKDB5P">
  <table class="astro-MNTKDB5P">
    <thead class="astro-MNTKDB5P">
      <tr class="astro-MNTKDB5P">
        <th class="astro-MNTKDB5P">Prop</th>
        <th class="astro-MNTKDB5P">Description</th>
        <th class="astro-MNTKDB5P">Default</th>
      </tr>
    </thead>
    <tbody class="astro-MNTKDB5P">
      ${Object.entries(props).map(([key, value]) => renderTemplate`<tr class="astro-MNTKDB5P">
            <td class="mono astro-MNTKDB5P">${value.name || key}</td>
            <td class="astro-MNTKDB5P">
              <div class="md astro-MNTKDB5P">${unescapeHTML(snarkdown(value.description.split("@example")[0] ?? value.description))}</div>
              <div class="types astro-MNTKDB5P">${value.type?.name || value.flowType.raw}</div>
            </td>
            <td class="mono astro-MNTKDB5P">${value.defaultValue?.value ?? value.defaultValue ?? ""}</td>
          </tr>`)}
    </tbody>
  </table>
</div>

`;
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Get the container as a child of body, or create one if it doesn't exist.
 * Mostly used for dynamic components like Modal or Toast.
 *
 * @param containerId id of the container to find or create
 * @param ownerDocument Can be changed if the container should be in a different document (e.g. in popup).
 */
const getContainer = (containerId, ownerDocument = getDocument()) => {
    var _a, _b;
    let container = (_a = ownerDocument === null || ownerDocument === void 0 ? void 0 : ownerDocument.getElementById(containerId)) !== null && _a !== void 0 ? _a : undefined;
    if (container == null && !!ownerDocument) {
        container = ownerDocument.createElement('div');
        container.setAttribute('id', containerId);
        const root = (_b = ownerDocument.querySelector('.iui-root')) !== null && _b !== void 0 ? _b : ownerDocument.body;
        root.appendChild(container);
    }
    return container;
};
/**
 * Get document if it is defined.
 * Used to support SSR/SSG applications.
 */
const getDocument = () => {
    return typeof document === 'undefined' ? undefined : document;
};
/**
 * Get window if it is defined.
 * Used to support SSR/SSG applications.
 */
const getWindow = () => {
    return typeof window === 'undefined' ? undefined : window;
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SoftBackgrounds = {
    skyblue: 'var(--iui-color-background-skyblue)',
    celery: 'var(--iui-color-background-celery)',
    froly: 'var(--iui-color-background-froly)',
    steelblue: 'var(--iui-color-background-steelblue)',
    sunglow: 'var(--iui-color-background-sunglow)',
    seabuckthorn: 'var(--iui-color-background-seabuckthorn)',
    montecarlo: 'var(--iui-color-background-montecarlo)',
    poloblue: 'var(--iui-color-background-poloblue)',
    bouquet: 'var(--iui-color-background-bouquet)',
    ash: 'var(--iui-color-background-ash)',
    oak: 'var(--iui-color-background-oak)',
};
/** Returns true if a string value is one of the SoftBackgrounds keys */
const isSoftBackground = (value) => {
    return Object.keys(SoftBackgrounds).includes(value);
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Return input value bounded by specified range.
 */
const getBoundedValue = (val, min, max) => {
    return Math.min(max, Math.max(min, val));
};
/**
 * Returns a random value of a given length containing `A-Za-z0-9_-` symbols.
 */
const getRandomValue = (length = 21) => {
    const alphabet = `_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`;
    let id = '';
    for (let i = 0; i < length; i++) {
        id += alphabet[(Math.random() * 64) | 0];
    }
    return id;
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const tabbableElementsSelector = 'a[href], button, input, textarea, select, details, audio[controls], video[controls], [contenteditable]:not([contenteditable="false"]), [tabindex]:not([tabindex="-1"])';
/**
 * Return array of tabbable elements in the container.
 */
const getTabbableElements = (container) => {
    if (!container) {
        return [];
    }
    const elements = container.querySelectorAll(tabbableElementsSelector);
    return Array.from(elements).filter((el) => !el.hasAttribute('disabled') &&
        !el.classList.contains('iui-disabled') &&
        el.getAttribute('aria-disabled') !== 'true');
};
/**
 * Return array of focusable elements in the container.
 */
const getFocusableElements = (container) => {
    if (!container) {
        return [];
    }
    const elements = container.querySelectorAll(`${tabbableElementsSelector}, [tabindex="-1"]`);
    return Array.from(elements).filter((el) => !el.hasAttribute('disabled') &&
        !el.classList.contains('iui-disabled') &&
        el.getAttribute('aria-disabled') !== 'true');
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Returns translate values as an array of a given element.
 * @param element HTML element you want to get translate value of
 * @returns Translate values in pixels in an array `[translateX, translateY]`
 */
const getTranslateValues = (element) => {
    if (!element) {
        return [];
    }
    const transformValue = getComputedStyle(element).getPropertyValue('transform');
    const matrix = new DOMMatrix(transformValue);
    return [matrix.m41, matrix.m42];
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Hook that adds and removes Event listeners.
 * @example
 *  useEventListener(
 *     'pointerup',
 *     handlePointerUp,
 *     containerRef.current?.ownerDocument,
 *  );
 */
const useEventListener = (eventName, handler, element) => {
    // Based on published hook https://usehooks.com/useEventListener/.
    const savedHandler = React__default.useRef();
    // Update reference if handler changes. This allows our effect below to
    // always use latest handler without us needing to pass it in effect deps array
    // and potentially cause effect to re-run every render.
    React__default.useEffect(() => {
        savedHandler.current = handler;
    }, [handler]);
    React__default.useEffect(() => {
        if (!element) {
            return;
        }
        const eventListener = (event) => { var _a; return (_a = savedHandler.current) === null || _a === void 0 ? void 0 : _a.call(savedHandler, event); };
        element.addEventListener(eventName, eventListener);
        return () => {
            element.removeEventListener(eventName, eventListener);
        };
    }, [eventName, element]);
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Function that merges the provided refs into one.
 */
const mergeRefs = (...refs) => {
    return (instance) => {
        refs.forEach((ref) => {
            if (typeof ref === 'function') {
                ref(instance);
            }
            else if (ref) {
                ref.current = instance;
            }
        });
    };
};
/**
 * Returns a ref callback that merges the provided refs using `mergeRefs`.
 */
const useMergedRefs = (...refs) => {
    // eslint-disable-next-line react-hooks/exhaustive-deps
    return React__default.useCallback(mergeRefs(...refs), [...refs]);
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Hook that uses `ResizeObserver` to access an element's size every time it updates.
 * @private
 * @param onResize callback fired with the element's new dimensions on every resize.
 * @returns a callback ref that needs to be set on the element, and a ResizeObserver instance.
 *
 * @example
 * const onResize = React.useCallback((size) => console.log(size), []);
 * const [ref] = useResizeObserver(onResize);
 * ...
 * return <div ref={ref}>...</div>;
 */
const useResizeObserver = (onResize) => {
    const resizeObserver = React__default.useRef();
    const elementRef = React__default.useCallback((element) => {
        var _a, _b, _c;
        if (!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.ResizeObserver)) {
            return;
        }
        (_b = resizeObserver.current) === null || _b === void 0 ? void 0 : _b.disconnect();
        if (element) {
            resizeObserver.current = new ResizeObserver(([{ contentRect }]) => onResize(contentRect));
            (_c = resizeObserver.current) === null || _c === void 0 ? void 0 : _c.observe(element);
        }
    }, [onResize]);
    return [elementRef, resizeObserver.current];
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const STARTING_MAX_ITEMS_COUNT = 20;
/**
 * Hook that observes the size of an element and returns the number of items
 * that should be visible based on the size of the container element.
 *
 * The returned number should be used to render the element with fewer items.
 *
 * @private
 * @param items Items that this element contains.
 * @param disabled Set to true to disconnect the observer.
 * @param dimension 'horizontal' (default) or 'vertical'
 * @returns [callback ref to set on container, stateful count of visible items]
 *
 * @example
 * const items = Array(10).fill().map((_, i) => <span>Item {i}</span>);
 * const [ref, visibleCount] = useOverflow(items);
 * ...
 * return (
 *   <div ref={ref}>
 *     {items.slice(0, visibleCount)}
 *   </div>
 * );
 */
const useOverflow = (items, disabled = false, orientation = 'horizontal') => {
    const containerRef = React__default.useRef(null);
    const [visibleCount, setVisibleCount] = React__default.useState(() => disabled ? items.length : Math.min(items.length, STARTING_MAX_ITEMS_COUNT));
    const needsFullRerender = React__default.useRef(true);
    const [containerSize, setContainerSize] = React__default.useState(0);
    const previousContainerSize = React__default.useRef(0);
    const updateContainerSize = React__default.useCallback(({ width, height }) => setContainerSize(orientation === 'horizontal' ? width : height), [orientation]);
    const [resizeRef, observer] = useResizeObserver(updateContainerSize);
    const resizeObserverRef = React__default.useRef(observer);
    React__default.useLayoutEffect(() => {
        if (disabled) {
            setVisibleCount(items.length);
        }
        else {
            setVisibleCount(Math.min(items.length, STARTING_MAX_ITEMS_COUNT));
            needsFullRerender.current = true;
        }
    }, [containerSize, disabled, items]);
    const mergedRefs = useMergedRefs(containerRef, resizeRef);
    React__default.useLayoutEffect(() => {
        var _a;
        if (!containerRef.current || disabled) {
            (_a = resizeObserverRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();
            return;
        }
        const dimension = orientation === 'horizontal' ? 'Width' : 'Height';
        const availableSize = containerRef.current[`offset${dimension}`];
        const requiredSize = containerRef.current[`scroll${dimension}`];
        if (availableSize < requiredSize) {
            const avgItemSize = requiredSize / visibleCount;
            const visibleItems = Math.floor(availableSize / avgItemSize);
            setVisibleCount(visibleItems);
        }
        else if (needsFullRerender.current) {
            const childrenSize = Array.from(containerRef.current.children).reduce((sum, child) => sum + child[`offset${dimension}`], 0);
            // Previous `useEffect` might have updated visible count, but we still have old one
            // If it is 0, lets try to update it with items length.
            const currentVisibleCount = visibleCount || Math.min(items.length, STARTING_MAX_ITEMS_COUNT);
            const avgItemSize = childrenSize / currentVisibleCount;
            const visibleItems = Math.floor(availableSize / avgItemSize);
            if (!isNaN(visibleItems)) {
                // Doubling the visible items to overflow the container. Just to be safe.
                setVisibleCount(Math.min(items.length, visibleItems * 2));
            }
        }
        needsFullRerender.current = false;
    }, [containerSize, visibleCount, disabled, items.length, orientation]);
    React__default.useLayoutEffect(() => {
        previousContainerSize.current = containerSize;
    }, [containerSize]);
    return [mergedRefs, visibleCount];
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Hook that returns the width of an element in three stages:
 *  - initialized with 0
 *  - immediately set to element's initial width as soon as it's mounted
 *  - update to new width every time it changes (using `useResizeObserver` hook)
 *
 * @private
 * @param watchResizes If false, ResizeObserver will not be connected and only the initial width will be returned
 * @returns [ref to attach to the element, stateful width of the element]
 *
 * @example
 * const [ref, width] = useContainerWidth();
 * ... // do something with width
 * return <div ref={ref}>...</div>;
 */
const useContainerWidth = (watchResizes = true) => {
    const [contentWidth, setContentWidth] = React__default.useState(0);
    const ref = React__default.useCallback((element) => {
        if (!element) {
            return;
        }
        setContentWidth(element.getBoundingClientRect().width);
    }, []);
    const updateWidth = React__default.useCallback(({ width }) => setContentWidth(width), []);
    const [resizeRef, resizeObserver] = useResizeObserver(updateWidth);
    if (!watchResizes) {
        resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();
    }
    const refs = useMergedRefs(ref, watchResizes ? resizeRef : undefined);
    return [refs, contentWidth];
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * This component provides global styles and applies theme to the entire tree
 * that it is wrapping around. The `theme` prop is optional and defaults to the
 * light theme.
 *
 * If you want to theme the entire app, you should use this component at the root.
 * The `as` prop can be used to render a `<body>` element instead of a `<div>`.
 *
 * You can also use this component to apply a different theme to only a part of the tree.
 *
 * @example
 * <ThemeProvider theme='os'>
 *  <App />
 * </ThemeProvider>
 *
 * @example
 * <ThemeProvider as='body'>
 *   <App />
 * </ThemeProvider>
 */
React__default.forwardRef((props, ref) => {
    var _a;
    const { theme, children, themeOptions, as: Element = 'div', className, ...rest } = props;
    const rootRef = React__default.useRef(null);
    const mergedRefs = useMergedRefs(rootRef, ref);
    const hasChildren = React__default.Children.count(children) > 0;
    const parentContext = React__default.useContext(ThemeContext);
    const prefersDark = useMediaQuery('(prefers-color-scheme: dark)');
    const prefersHighContrast = useMediaQuery('(prefers-contrast: more)');
    const shouldApplyDark = theme === 'dark' || (theme === 'os' && prefersDark);
    const shouldApplyHC = (_a = themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.highContrast) !== null && _a !== void 0 ? _a : prefersHighContrast;
    // only provide context if wrapped around children
    return hasChildren ? (React__default.createElement(ThemeContext.Provider, { value: { theme, themeOptions, rootRef } },
        React__default.createElement(Element, { className: cx('iui-root', className), "data-iui-theme": shouldApplyDark ? 'dark' : 'light', "data-iui-contrast": shouldApplyHC ? 'high' : 'default', ref: mergedRefs, ...rest }, children))) : (
    // otherwise just apply theme on the root using this wrapper component
    React__default.createElement(ThemeLogicWrapper, { theme: theme !== null && theme !== void 0 ? theme : parentContext === null || parentContext === void 0 ? void 0 : parentContext.theme, themeOptions: themeOptions !== null && themeOptions !== void 0 ? themeOptions : parentContext === null || parentContext === void 0 ? void 0 : parentContext.themeOptions }));
});
const ThemeContext = React__default.createContext(undefined);
const ThemeLogicWrapper = ({ theme, themeOptions }) => {
    useTheme(theme, themeOptions);
    return React__default.createElement(React__default.Fragment, null);
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * SSR-safe version of `useLayoutEffect` that replaces it with `useEffect` on the server.
 *
 * @see https://fb.me/react-uselayouteffect-ssr
 */
const useIsomorphicLayoutEffect$1 = typeof window !== 'undefined' ? React__default.useLayoutEffect : React__default.useEffect;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Hook that conditionally applies styling and theme to all components.
 * Defaults to light theme if none provided.
 *
 * If ThemeProvider is used as an ancestor, this hook will not do anything.
 *
 * @param theme Light, dark, or based on OS setting.
 * @param themeOptions Options that override default theming behavior.
 */
const useTheme = (theme, themeOptions) => {
    var _a;
    const themeContext = React__default.useContext(ThemeContext);
    const ownerDocument = (_a = themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.ownerDocument) !== null && _a !== void 0 ? _a : getDocument();
    useIsomorphicLayoutEffect$1(() => {
        // exit early if theme was already set by provider
        if (themeContext || !ownerDocument) {
            return;
        }
        ownerDocument.body.classList.toggle('iui-root', true);
        switch (theme) {
            case 'light':
            case 'dark':
            case 'os': {
                return handleTheme(theme, ownerDocument, themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.highContrast);
            }
            default: {
                // set light theme by default
                if (ownerDocument.documentElement.dataset.iuiTheme == null) {
                    return handleTheme('light', ownerDocument, themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.highContrast);
                }
                return;
            }
        }
    }, [theme, themeContext, themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.highContrast, ownerDocument]);
};
/**
 * Helper function to apply the specified theme, or detect the OS theme.
 * Returns a cleanup function to remove the change handlers.
 */
const handleTheme = (theme, ownerDocument, highContrast) => {
    var _a, _b, _c, _d, _e;
    const root = ownerDocument.documentElement;
    const _window = (_a = ownerDocument.defaultView) !== null && _a !== void 0 ? _a : getWindow();
    const applyThemeAttributes = (isDark = false, isHC = false) => {
        root.dataset.iuiTheme = isDark ? 'dark' : 'light';
        root.dataset.iuiContrast = isHC ? 'high' : 'default';
    };
    const prefersDarkQuery = (_b = _window === null || _window === void 0 ? void 0 : _window.matchMedia) === null || _b === void 0 ? void 0 : _b.call(_window, '(prefers-color-scheme: dark)');
    const prefersHCQuery = (_c = _window === null || _window === void 0 ? void 0 : _window.matchMedia) === null || _c === void 0 ? void 0 : _c.call(_window, '(prefers-contrast: more)');
    const changeHandler = () => {
        const isDark = theme === 'dark' || (theme === 'os' && (prefersDarkQuery === null || prefersDarkQuery === void 0 ? void 0 : prefersDarkQuery.matches));
        const isHC = highContrast !== null && highContrast !== void 0 ? highContrast : prefersHCQuery === null || prefersHCQuery === void 0 ? void 0 : prefersHCQuery.matches;
        applyThemeAttributes(isDark, isHC);
    };
    // call handler once to set initial theme
    changeHandler();
    // add listeners in supported browsers
    (_d = prefersDarkQuery === null || prefersDarkQuery === void 0 ? void 0 : prefersDarkQuery.addEventListener) === null || _d === void 0 ? void 0 : _d.call(prefersDarkQuery, 'change', changeHandler);
    (_e = prefersHCQuery === null || prefersHCQuery === void 0 ? void 0 : prefersHCQuery.addEventListener) === null || _e === void 0 ? void 0 : _e.call(prefersHCQuery, 'change', changeHandler);
    // return cleanup function to remove event listeners (should be returned from useEffect)
    return () => {
        var _a, _b;
        (_a = prefersDarkQuery === null || prefersDarkQuery === void 0 ? void 0 : prefersDarkQuery.removeEventListener) === null || _a === void 0 ? void 0 : _a.call(prefersDarkQuery, 'change', changeHandler);
        (_b = prefersHCQuery === null || prefersHCQuery === void 0 ? void 0 : prefersHCQuery.removeEventListener) === null || _b === void 0 ? void 0 : _b.call(prefersHCQuery, 'change', changeHandler);
    };
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Hook that uses `IntersectionObserver` to trigger `onIntersect` callback when element is in viewport.
 * Callback is called only once by default (can be changed using the `once` parameter).
 * @returns a callback ref that needs to be set on the element you want to observe.
 * @private
 * @example
 * const onIntersection = React.useCallback(() => {
 *   console.log('Element is in viewport!');
 * }, []);
 * const ref = useIntersection(onIntersection);
 * return (<div ref={ref}>One of many elements</div>);
 */
const useIntersection = (onIntersect, options = {}, once = true) => {
    const { root, rootMargin, threshold } = options;
    const observer = React__default.useRef();
    const setRef = React__default.useCallback((node) => {
        var _a;
        if (!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.IntersectionObserver)) {
            return;
        }
        if (observer.current) {
            observer.current.disconnect();
        }
        if (!node) {
            return;
        }
        observer.current = new IntersectionObserver(([entry], obs) => {
            if (entry.isIntersecting) {
                if (once) {
                    obs.disconnect();
                }
                onIntersect();
            }
        }, { root, rootMargin, threshold });
        observer.current.observe(node);
    }, [onIntersect, once, root, rootMargin, threshold]);
    React__default.useEffect(() => () => { var _a; return (_a = observer.current) === null || _a === void 0 ? void 0 : _a.disconnect(); }, []);
    return setRef;
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const useMediaQuery = (queryString) => {
    const [matches, setMatches] = React__default.useState();
    useIsomorphicLayoutEffect$1(() => {
        var _a, _b, _c;
        const mediaQueryList = (_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.matchMedia) === null || _b === void 0 ? void 0 : _b.call(_a, queryString);
        const handleChange = ({ matches }) => setMatches(matches);
        if (mediaQueryList != undefined) {
            setMatches(mediaQueryList.matches);
            try {
                mediaQueryList.addEventListener('change', handleChange);
            }
            catch (_d) {
                // Safari 13 fallback
                (_c = mediaQueryList.addListener) === null || _c === void 0 ? void 0 : _c.call(mediaQueryList, handleChange);
            }
        }
        return () => {
            var _a;
            try {
                mediaQueryList === null || mediaQueryList === void 0 ? void 0 : mediaQueryList.removeEventListener('change', handleChange);
            }
            catch (_b) {
                // Safari 13 fallback
                (_a = mediaQueryList === null || mediaQueryList === void 0 ? void 0 : mediaQueryList.removeListener) === null || _a === void 0 ? void 0 : _a.call(mediaQueryList, handleChange);
            }
        };
    }, [queryString]);
    return !!matches;
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Wrapper hook around `useContext` that throws an error if the context is not provided.
 * @param context Context to use. Must have a `displayName` for useful errors.
 */
const useSafeContext = (context) => {
    const value = React__default.useContext(context);
    if (!value) {
        throw new Error(`${context.displayName} is undefined`);
    }
    return value; // eslint-disable-line @typescript-eslint/no-non-null-assertion -- we already checked for undefined
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Hook that keeps track of the latest value in a ref.
 * @private
 * @example
 * const { value } = props;
 * const valueRef = useLatestRef(value);
 */
const useLatestRef = (value) => {
    const valueRef = React__default.useRef(value);
    React__default.useEffect(() => {
        valueRef.current = value;
    }, [value]);
    return valueRef;
};

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';
function preserveRef(ref, node) {
  if (ref) {
    if (typeof ref === 'function') {
      ref(node);
    }

    if ({}.hasOwnProperty.call(ref, 'current')) {
      ref.current = node;
    }
  }
}
function ssrSafeCreateDiv() {
  return isBrowser && document.createElement('div');
}
function toDataAttributes(attrs) {
  var dataAttrs = {
    'data-placement': attrs.placement
  };

  if (attrs.referenceHidden) {
    dataAttrs['data-reference-hidden'] = '';
  }

  if (attrs.escaped) {
    dataAttrs['data-escaped'] = '';
  }

  return dataAttrs;
}

function deepEqual(x, y) {
  if (x === y) {
    return true;
  } else if (typeof x === 'object' && x != null && typeof y === 'object' && y != null) {
    if (Object.keys(x).length !== Object.keys(y).length) {
      return false;
    }

    for (var prop in x) {
      if (y.hasOwnProperty(prop)) {
        if (!deepEqual(x[prop], y[prop])) {
          return false;
        }
      } else {
        return false;
      }
    }

    return true;
  } else {
    return false;
  }
}

function uniqueByShape(arr) {
  var output = [];
  arr.forEach(function (item) {
    if (!output.find(function (outputItem) {
      return deepEqual(item, outputItem);
    })) {
      output.push(item);
    }
  });
  return output;
}
function deepPreserveProps(instanceProps, componentProps) {
  var _instanceProps$popper, _componentProps$poppe;

  return Object.assign({}, componentProps, {
    popperOptions: Object.assign({}, instanceProps.popperOptions, componentProps.popperOptions, {
      modifiers: uniqueByShape([].concat(((_instanceProps$popper = instanceProps.popperOptions) == null ? void 0 : _instanceProps$popper.modifiers) || [], ((_componentProps$poppe = componentProps.popperOptions) == null ? void 0 : _componentProps$poppe.modifiers) || []))
    })
  });
}

var useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;
function useMutableBox(initialValue) {
  // Using refs instead of state as it's recommended to not store imperative
  // values in state due to memory problems in React(?)
  var ref = useRef();

  if (!ref.current) {
    ref.current = typeof initialValue === 'function' ? initialValue() : initialValue;
  }

  return ref.current;
}

function updateClassName(box, action, classNames) {
  classNames.split(/\s+/).forEach(function (name) {
    if (name) {
      box.classList[action](name);
    }
  });
}

var classNamePlugin = {
  name: 'className',
  defaultValue: '',
  fn: function fn(instance) {
    var box = instance.popper.firstElementChild;

    var isDefaultRenderFn = function isDefaultRenderFn() {
      var _instance$props$rende;

      return !!((_instance$props$rende = instance.props.render) == null ? void 0 : _instance$props$rende.$$tippy);
    };

    function add() {
      if (instance.props.className && !isDefaultRenderFn()) {
        if (process.env.NODE_ENV !== 'production') {
          console.warn(['@tippyjs/react: Cannot use `className` prop in conjunction with', '`render` prop. Place the className on the element you are', 'rendering.'].join(' '));
        }

        return;
      }

      updateClassName(box, 'add', instance.props.className);
    }

    function remove() {
      if (isDefaultRenderFn()) {
        updateClassName(box, 'remove', instance.props.className);
      }
    }

    return {
      onCreate: add,
      onBeforeUpdate: remove,
      onAfterUpdate: add
    };
  }
};

function TippyGenerator(tippy) {
  function Tippy(_ref) {
    var children = _ref.children,
        content = _ref.content,
        visible = _ref.visible,
        singleton = _ref.singleton,
        render = _ref.render,
        reference = _ref.reference,
        _ref$disabled = _ref.disabled,
        disabled = _ref$disabled === void 0 ? false : _ref$disabled,
        _ref$ignoreAttributes = _ref.ignoreAttributes,
        ignoreAttributes = _ref$ignoreAttributes === void 0 ? true : _ref$ignoreAttributes;
        _ref.__source;
        _ref.__self;
        var restOfNativeProps = _objectWithoutPropertiesLoose(_ref, ["children", "content", "visible", "singleton", "render", "reference", "disabled", "ignoreAttributes", "__source", "__self"]);

    var isControlledMode = visible !== undefined;
    var isSingletonMode = singleton !== undefined;

    var _useState = useState(false),
        mounted = _useState[0],
        setMounted = _useState[1];

    var _useState2 = useState({}),
        attrs = _useState2[0],
        setAttrs = _useState2[1];

    var _useState3 = useState(),
        singletonContent = _useState3[0],
        setSingletonContent = _useState3[1];

    var mutableBox = useMutableBox(function () {
      return {
        container: ssrSafeCreateDiv(),
        renders: 1
      };
    });
    var props = Object.assign({
      ignoreAttributes: ignoreAttributes
    }, restOfNativeProps, {
      content: mutableBox.container
    });

    if (isControlledMode) {
      if (process.env.NODE_ENV !== 'production') {
        ['trigger', 'hideOnClick', 'showOnCreate'].forEach(function (nativeStateProp) {
          if (props[nativeStateProp] !== undefined) {
            console.warn(["@tippyjs/react: Cannot specify `" + nativeStateProp + "` prop in", "controlled mode (`visible` prop)"].join(' '));
          }
        });
      }

      props.trigger = 'manual';
      props.hideOnClick = false;
    }

    if (isSingletonMode) {
      disabled = true;
    }

    var computedProps = props;
    var plugins = props.plugins || [];

    if (render) {
      computedProps = Object.assign({}, props, {
        plugins: isSingletonMode && singleton.data != null ? [].concat(plugins, [{
          fn: function fn() {
            return {
              onTrigger: function onTrigger(instance, event) {
                var node = singleton.data.children.find(function (_ref2) {
                  var instance = _ref2.instance;
                  return instance.reference === event.currentTarget;
                });
                instance.state.$$activeSingletonInstance = node.instance;
                setSingletonContent(node.content);
              }
            };
          }
        }]) : plugins,
        render: function render() {
          return {
            popper: mutableBox.container
          };
        }
      });
    }

    var deps = [reference].concat(children ? [children.type] : []); // CREATE

    useIsomorphicLayoutEffect(function () {
      var element = reference;

      if (reference && reference.hasOwnProperty('current')) {
        element = reference.current;
      }

      var instance = tippy(element || mutableBox.ref || ssrSafeCreateDiv(), Object.assign({}, computedProps, {
        plugins: [classNamePlugin].concat(props.plugins || [])
      }));
      mutableBox.instance = instance;

      if (disabled) {
        instance.disable();
      }

      if (visible) {
        instance.show();
      }

      if (isSingletonMode) {
        singleton.hook({
          instance: instance,
          content: content,
          props: computedProps,
          setSingletonContent: setSingletonContent
        });
      }

      setMounted(true);
      return function () {
        instance.destroy();
        singleton == null ? void 0 : singleton.cleanup(instance);
      };
    }, deps); // UPDATE

    useIsomorphicLayoutEffect(function () {
      var _instance$popperInsta;

      // Prevent this effect from running on 1st render
      if (mutableBox.renders === 1) {
        mutableBox.renders++;
        return;
      }

      var instance = mutableBox.instance;
      instance.setProps(deepPreserveProps(instance.props, computedProps)); // Fixes #264

      (_instance$popperInsta = instance.popperInstance) == null ? void 0 : _instance$popperInsta.forceUpdate();

      if (disabled) {
        instance.disable();
      } else {
        instance.enable();
      }

      if (isControlledMode) {
        if (visible) {
          instance.show();
        } else {
          instance.hide();
        }
      }

      if (isSingletonMode) {
        singleton.hook({
          instance: instance,
          content: content,
          props: computedProps,
          setSingletonContent: setSingletonContent
        });
      }
    });
    useIsomorphicLayoutEffect(function () {
      var _instance$props$poppe;

      if (!render) {
        return;
      }

      var instance = mutableBox.instance;
      instance.setProps({
        popperOptions: Object.assign({}, instance.props.popperOptions, {
          modifiers: [].concat((((_instance$props$poppe = instance.props.popperOptions) == null ? void 0 : _instance$props$poppe.modifiers) || []).filter(function (_ref3) {
            var name = _ref3.name;
            return name !== '$$tippyReact';
          }), [{
            name: '$$tippyReact',
            enabled: true,
            phase: 'beforeWrite',
            requires: ['computeStyles'],
            fn: function fn(_ref4) {
              var _state$modifiersData;

              var state = _ref4.state;
              var hideData = (_state$modifiersData = state.modifiersData) == null ? void 0 : _state$modifiersData.hide; // WARNING: this is a high-risk path that can cause an infinite
              // loop. This expression _must_ evaluate to false when required

              if (attrs.placement !== state.placement || attrs.referenceHidden !== (hideData == null ? void 0 : hideData.isReferenceHidden) || attrs.escaped !== (hideData == null ? void 0 : hideData.hasPopperEscaped)) {
                setAttrs({
                  placement: state.placement,
                  referenceHidden: hideData == null ? void 0 : hideData.isReferenceHidden,
                  escaped: hideData == null ? void 0 : hideData.hasPopperEscaped
                });
              }

              state.attributes.popper = {};
            }
          }])
        })
      });
    }, [attrs.placement, attrs.referenceHidden, attrs.escaped].concat(deps));
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, children ? /*#__PURE__*/cloneElement(children, {
      ref: function ref(node) {
        mutableBox.ref = node;
        preserveRef(children.ref, node);
      }
    }) : null, mounted && /*#__PURE__*/createPortal(render ? render(toDataAttributes(attrs), singletonContent, mutableBox.instance) : content, mutableBox.container));
  }

  return Tippy;
}

var forwardRef = (function (Tippy, defaultProps) {
  return /*#__PURE__*/forwardRef$1(function TippyWrapper(_ref, _ref2) {
    var children = _ref.children,
        props = _objectWithoutPropertiesLoose(_ref, ["children"]);

    return (
      /*#__PURE__*/
      // If I spread them separately here, Babel adds the _extends ponyfill for
      // some reason
      React__default.createElement(Tippy, Object.assign({}, defaultProps, props), children ? /*#__PURE__*/cloneElement(children, {
        ref: function ref(node) {
          preserveRef(_ref2, node);
          preserveRef(children.ref, node);
        }
      }) : null)
    );
  });
});
var index = /*#__PURE__*/forwardRef( /*#__PURE__*/TippyGenerator(tippy));

const Tippy = index;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Wrapper around [tippy.js](https://atomiks.github.io/tippyjs)
 * with pre-configured props and plugins (e.g. lazy mounting, focus, etc).
 * @private
 */
const Popover = React__default.forwardRef((props, ref) => {
    var _a;
    const [mounted, setMounted] = React__default.useState(false);
    const themeInfo = React__default.useContext(ThemeContext);
    const tippyRef = React__default.useRef(null);
    const refs = useMergedRefs(tippyRef, ref);
    // Plugin to allow lazy mounting. See https://github.com/atomiks/tippyjs-react#lazy-mounting
    const lazyLoad = {
        fn: () => ({
            onShow: () => setMounted(true),
            onHidden: () => setMounted(false),
        }),
    };
    // Plugin to remove tabindex from tippy, to prevent focus ring from unintentionally showing.
    const removeTabIndex = {
        fn: () => ({
            onCreate: (instance) => {
                var _a;
                (_a = instance.popper.firstElementChild) === null || _a === void 0 ? void 0 : _a.removeAttribute('tabindex');
            },
        }),
    };
    const computedProps = {
        allowHTML: true,
        animation: false,
        appendTo: (el) => (themeInfo === null || themeInfo === void 0 ? void 0 : themeInfo.rootRef.current) || el.ownerDocument.body,
        arrow: false,
        duration: 0,
        interactive: true,
        role: undefined,
        offset: [0, 0],
        maxWidth: '',
        zIndex: 99999,
        ...props,
        className: cx('iui-popover', props.className),
        plugins: [
            lazyLoad,
            removeTabIndex,
            hideOnEscOrTab,
            ...(props.plugins || []),
        ],
        popperOptions: {
            strategy: 'fixed',
            ...props.popperOptions,
            modifiers: [
                { name: 'flip' },
                { name: 'preventOverflow', options: { padding: 0 } },
                ...(((_a = props.popperOptions) === null || _a === void 0 ? void 0 : _a.modifiers) || []),
            ],
        },
    };
    if (props.render) {
        const render = props.render;
        computedProps.render = (...args) => (mounted ? render(...args) : '');
    }
    else {
        // Fixing issue where elements below Popover gets click events.
        // Tippy uses react Portal, which propagates events by react tree, not dom tree.
        // Read more: https://reactjs.org/docs/portals.html#event-bubbling-through-portals
        const clonedContent = React__default.isValidElement(props.content)
            ? React__default.cloneElement(props.content, {
                onClick: (e) => {
                    var _a, _b;
                    e.stopPropagation();
                    (_b = (_a = props.content.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);
                },
            })
            : props.content;
        computedProps.content = mounted ? clonedContent : '';
    }
    return React__default.createElement(Tippy, { ...computedProps, ref: refs });
});
/**
 * Plugin to hide Popover when either Esc key is pressed,
 * or when the content inside is not tabbable and Tab key is pressed.
 */
const hideOnEscOrTab = {
    fn(instance) {
        /** @returns true if none of the children are tabbable */
        const shouldHideOnTab = () => {
            const descendents = Array.from(instance.popper.querySelectorAll('*'));
            return !descendents.some((el) => (el === null || el === void 0 ? void 0 : el.tabIndex) >= 0);
        };
        const onKeyDown = (event) => {
            switch (event.key) {
                case 'Escape':
                    instance.hide();
                    break;
                case 'Tab':
                    if (shouldHideOnTab()) {
                        event.shiftKey && event.preventDefault(); // focus popover target on Shift+Tab
                        instance.hide();
                    }
                    break;
            }
        };
        return {
            onShow() {
                instance.popper.addEventListener('keydown', onKeyDown);
            },
            onHide() {
                instance.popper.removeEventListener('keydown', onKeyDown);
            },
        };
    },
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Component that allows to resize parent element.
 * Parent must have `position: relative`.
 * @private
 * @example
 * const ref = React.useRef<HTMLDivElement>(null);
 * return (
 *   <div ref={ref} style={{ position: 'relative' }}>
 *     <Resizer elementRef={ref} />
 *   </div>
 * );
 */
const Resizer = (props) => {
    const { elementRef, containerRef, onResizeStart, onResizeEnd } = props;
    const isResizing = React__default.useRef(false);
    const onResizePointerDown = (event) => {
        if (!elementRef.current || event.button !== 0) {
            return;
        }
        const initialPointerX = event.clientX;
        const initialPointerY = event.clientY;
        const [initialTranslateX, initialTranslateY] = getTranslateValues(elementRef.current);
        const { width: initialWidth, height: initialHeight, } = elementRef.current.getBoundingClientRect();
        let width = `${initialWidth}px`;
        let height = `${initialHeight}px`;
        let translateX = initialTranslateX;
        let translateY = initialTranslateY;
        const minWidth = parseFloat(getComputedStyle(elementRef.current).minWidth);
        const minHeight = parseFloat(getComputedStyle(elementRef.current).minHeight);
        const resizer = event.currentTarget.dataset.iuiResizer;
        const originalUserSelect = elementRef.current.ownerDocument.body.style.userSelect;
        elementRef.current.ownerDocument.body.style.userSelect = 'none';
        const onResizePointerMove = (event) => {
            var _a, _b, _c, _d, _e, _f, _g;
            if (!elementRef.current) {
                return;
            }
            if (!isResizing.current) {
                isResizing.current = true;
                onResizeStart === null || onResizeStart === void 0 ? void 0 : onResizeStart();
            }
            const containerRect = (_a = containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();
            const clientX = getBoundedValue(event.clientX, (_b = containerRect === null || containerRect === void 0 ? void 0 : containerRect.left) !== null && _b !== void 0 ? _b : 0, (_d = (_c = containerRect === null || containerRect === void 0 ? void 0 : containerRect.right) !== null && _c !== void 0 ? _c : elementRef.current.ownerDocument.documentElement.clientWidth) !== null && _d !== void 0 ? _d : 0);
            const clientY = getBoundedValue(event.clientY, (_e = containerRect === null || containerRect === void 0 ? void 0 : containerRect.top) !== null && _e !== void 0 ? _e : 0, (_g = (_f = containerRect === null || containerRect === void 0 ? void 0 : containerRect.bottom) !== null && _f !== void 0 ? _f : elementRef.current.ownerDocument.documentElement.clientHeight) !== null && _g !== void 0 ? _g : 0);
            const diffX = initialPointerX - clientX;
            const diffY = initialPointerY - clientY;
            switch (resizer) {
                case 'top-left': {
                    const newHeight = initialHeight + diffY;
                    if (newHeight >= minHeight) {
                        height = elementRef.current.style.height = `${newHeight}px`;
                        translateY = initialTranslateY - diffY;
                    }
                    const newWidth = initialWidth + diffX;
                    if (newWidth >= minWidth) {
                        width = elementRef.current.style.width = `${newWidth}px`;
                        translateX = initialTranslateX - diffX;
                    }
                    elementRef.current.style.transform = `translate(${translateX}px, ${translateY}px)`;
                    break;
                }
                case 'top': {
                    const newHeight = initialHeight + diffY;
                    if (newHeight < minHeight) {
                        break;
                    }
                    height = elementRef.current.style.height = `${newHeight}px`;
                    translateY = initialTranslateY - diffY;
                    elementRef.current.style.transform = `translate(${translateX}px, ${translateY}px)`;
                    break;
                }
                case 'top-right': {
                    const newHeight = initialHeight + diffY;
                    if (newHeight >= minHeight) {
                        height = elementRef.current.style.height = `${newHeight}px`;
                        translateY = initialTranslateY - diffY;
                    }
                    width = elementRef.current.style.width = `${initialWidth - diffX}px`;
                    elementRef.current.style.transform = `translate(${translateX}px, ${translateY}px)`;
                    break;
                }
                case 'right': {
                    width = elementRef.current.style.width = `${initialWidth - diffX}px`;
                    break;
                }
                case 'bottom-right': {
                    width = elementRef.current.style.width = `${initialWidth - diffX}px`;
                    height = elementRef.current.style.height = `${initialHeight - diffY}px`;
                    break;
                }
                case 'bottom': {
                    height = elementRef.current.style.height = `${initialHeight - diffY}px`;
                    break;
                }
                case 'bottom-left': {
                    const newWidth = initialWidth + diffX;
                    if (newWidth >= minWidth) {
                        width = elementRef.current.style.width = `${newWidth}px`;
                        translateX = initialTranslateX - diffX;
                    }
                    height = elementRef.current.style.height = `${initialHeight - diffY}px`;
                    elementRef.current.style.transform = `translate(${translateX}px, ${translateY}px)`;
                    break;
                }
                case 'left': {
                    const newWidth = initialWidth + diffX;
                    if (newWidth < minWidth) {
                        break;
                    }
                    width = elementRef.current.style.width = `${newWidth}px`;
                    translateX = initialTranslateX - diffX;
                    elementRef.current.style.transform = `translate(${translateX}px, ${translateY}px)`;
                    break;
                }
            }
        };
        elementRef.current.ownerDocument.addEventListener('pointermove', onResizePointerMove);
        elementRef.current.ownerDocument.addEventListener('pointerup', () => {
            document.removeEventListener('pointermove', onResizePointerMove);
            if (elementRef.current) {
                elementRef.current.ownerDocument.body.style.userSelect = originalUserSelect;
                isResizing.current = false;
                onResizeEnd === null || onResizeEnd === void 0 ? void 0 : onResizeEnd({
                    width,
                    height,
                    transform: `translate(${translateX}px, ${translateY}px)`,
                });
            }
        }, { once: true });
    };
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement("div", { "data-iui-resizer": 'top-left', onPointerDown: onResizePointerDown, style: {
                position: 'absolute',
                top: -4,
                left: -4,
                width: 12,
                height: 12,
                cursor: 'nw-resize',
            } }),
        React__default.createElement("div", { "data-iui-resizer": 'top', onPointerDown: onResizePointerDown, style: {
                position: 'absolute',
                top: -4,
                left: 8,
                right: 8,
                height: 8,
                cursor: 'n-resize',
            } }),
        React__default.createElement("div", { "data-iui-resizer": 'top-right', onPointerDown: onResizePointerDown, style: {
                position: 'absolute',
                top: -4,
                right: -4,
                width: 12,
                height: 12,
                cursor: 'ne-resize',
            } }),
        React__default.createElement("div", { "data-iui-resizer": 'right', onPointerDown: onResizePointerDown, style: {
                position: 'absolute',
                top: 8,
                right: -4,
                bottom: 8,
                width: 8,
                cursor: 'e-resize',
            } }),
        React__default.createElement("div", { "data-iui-resizer": 'bottom-right', onPointerDown: onResizePointerDown, style: {
                position: 'absolute',
                bottom: -4,
                right: -4,
                width: 12,
                height: 12,
                cursor: 'se-resize',
            } }),
        React__default.createElement("div", { "data-iui-resizer": 'bottom', onPointerDown: onResizePointerDown, style: {
                position: 'absolute',
                bottom: -4,
                left: 8,
                right: 8,
                height: 8,
                cursor: 's-resize',
            } }),
        React__default.createElement("div", { "data-iui-resizer": 'bottom-left', onPointerDown: onResizePointerDown, style: {
                position: 'absolute',
                bottom: -4,
                left: -4,
                width: 12,
                height: 12,
                cursor: 'sw-resize',
            } }),
        React__default.createElement("div", { "data-iui-resizer": 'left', onPointerDown: onResizePointerDown, style: {
                position: 'absolute',
                top: 8,
                left: -4,
                bottom: 8,
                width: 8,
                cursor: 'w-resize',
            } })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Trap focus within child container.
 * Used for modals and dialogs.
 */
const FocusTrap = (props) => {
    const { children } = props;
    const childRef = React__default.useRef();
    const getFirstLastFocusables = () => {
        const elements = getTabbableElements(childRef.current);
        const firstElement = elements[0];
        const lastElement = elements[(elements.length || 1) - 1];
        return [firstElement, lastElement];
    };
    const onFirstFocus = (event) => {
        const [firstElement, lastElement] = getFirstLastFocusables();
        if (event.relatedTarget === firstElement) {
            lastElement === null || lastElement === void 0 ? void 0 : lastElement.focus();
        }
        else {
            firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus();
        }
    };
    const onLastFocus = (event) => {
        const [firstElement, lastElement] = getFirstLastFocusables();
        if (event.relatedTarget === lastElement) {
            firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus();
        }
        else {
            lastElement === null || lastElement === void 0 ? void 0 : lastElement.focus();
        }
    };
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement("div", { tabIndex: 0, onFocus: onFirstFocus, "aria-hidden": true }),
        React__default.cloneElement(children, {
            ref: mergeRefs(children.ref, childRef),
        }),
        React__default.createElement("div", { tabIndex: 0, onFocus: onLastFocus, "aria-hidden": true })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Input container to wrap inputs with label, and add optional message and icon.
 * @private
 */
const InputContainer = (props) => {
    var _a;
    const { as: Element = 'div', label, disabled, required, status, message, icon, isLabelInline, isIconInline, children, className, style, statusMessage, ...rest } = props;
    return (React__default.createElement(Element, { className: cx('iui-input-container', {
            'iui-disabled': disabled,
            [`iui-${status}`]: !!status,
            'iui-inline-label': isLabelInline,
            'iui-inline-icon': isIconInline,
            'iui-with-message': (!!message || !!icon || !!statusMessage) && !isLabelInline,
        }, className), style: style, ...rest },
        label && (React__default.createElement("div", { className: cx('iui-label', {
                'iui-required': required,
            }) }, label)),
        children,
        statusMessage ? (statusMessage) : (React__default.createElement(React__default.Fragment, null,
            icon &&
                React__default.cloneElement(icon, {
                    className: cx('iui-input-icon', (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className),
                }),
            message && !isLabelInline && (React__default.createElement("div", { className: 'iui-message' }, message))))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const WithCSSTransition = (props) => {
    const { in: visible, dimension = 'height', children, ...rest } = props;
    const expandedSize = React__default.useRef(0);
    const dimensionCamelCase = dimension === 'height' ? 'Height' : 'Width';
    return (React__default.createElement(CSSTransition, { in: visible, timeout: 200, unmountOnExit: true, onEnter: (node) => {
            node.style[`min${dimensionCamelCase}`] = 'initial';
            node.style[dimension] = '0px';
        }, onEntering: (node) => {
            node.style[dimension] = `${expandedSize.current}px`;
        }, onEntered: (node) => {
            node.style[`min${dimensionCamelCase}`] = '';
            node.style[dimension] = '';
        }, onExit: (node) => {
            node.style[dimension] = `${expandedSize.current}px`;
        }, onExiting: (node) => {
            node.style[`min${dimensionCamelCase}`] = 'initial';
            node.style[dimension] = '0px';
        }, classNames: 'iui', ...rest }, React__default.cloneElement(children, {
        ref: (el) => {
            if (el) {
                expandedSize.current = el.getBoundingClientRect()[dimension];
            }
        },
    })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const getScrollableParent = (element, ownerDocument = document) => {
    if (!element || element === ownerDocument.body) {
        return ownerDocument.body;
    }
    return isElementScrollable(element)
        ? element
        : getScrollableParent(element.parentElement, ownerDocument);
};
const isElementScrollable = (element) => {
    return /(auto|scroll|overlay)/.test(getElementStyle(element, 'overflow') +
        getElementStyle(element, 'overflow-y'));
};
const getElementStyle = (element, prop) => {
    return getComputedStyle(element, null).getPropertyValue(prop);
};
const getElementHeight = (element) => {
    var _a;
    return (_a = element === null || element === void 0 ? void 0 : element.getBoundingClientRect().height) !== null && _a !== void 0 ? _a : 0;
};
const getElementHeightWithMargins = (element) => {
    if (!element) {
        return undefined;
    }
    const margin = parseFloat(getElementStyle(element, 'margin-top')) +
        parseFloat(getElementStyle(element, 'margin-bottom'));
    return getElementHeight(element) + (isNaN(margin) ? 0 : margin);
};
const getNumberOfNodesInHeight = (childHeight, totalHeight) => {
    if (!childHeight) {
        return 0;
    }
    return Math.floor(totalHeight / childHeight);
};
const getTranslateValue = (childHeight, startIndex) => {
    if (startIndex > 0) {
        return childHeight * startIndex;
    }
    return 0;
};
const getVisibleNodeCount = (childHeight, startIndex, childrenLength, scrollContainer) => {
    return Math.min(childrenLength - startIndex, getNumberOfNodesInHeight(childHeight, getElementHeight(scrollContainer)));
};
/**
 * `VirtualScroll` component is used to render a huge amount of items in the DOM. It renders only the ones which are visible
 * and the amount provided through `bufferSize` prop at the start and the end. Can be used inside other components like `Table`.
 *
 * It has two wrapper elements, so DOM will be changed. One is used for setting full expected height in the scrollable container
 * and other is for transformation (translateY) to show the correct part of the list.
 *
 * Currently it works only with the direct vertically scrollable parent element. It does not work with body scroll.
 * It supports only static (same) height rows virtualization. Expect some issues, if list consists of different height elements.
 * @example
 * const itemRenderer = React.useCallback(() => (
 *  <div key={index}>
 *    This is my item #{index}
 *  </div>
 * ), [])
 * <VirtualScroll
 *  itemsLength={1000}
 *  itemRenderer={itemRenderer}
 * />
 * @private
 */
const VirtualScroll = React__default.forwardRef((props, ref) => {
    const { innerProps, outerProps, visibleChildren } = useVirtualization(props);
    return (React__default.createElement("div", { ...outerProps, ref: ref },
        React__default.createElement("div", { ...innerProps }, visibleChildren)));
});
/**
 * `useVirtualization` is used for efficiently rendering only the visible rows from a large list.
 * It returns `outerProps` and `innerProps`, which need to be applied on 2 container elements and `visibleChildren` which is a list of virtualized items.
 * @example
 * const itemRenderer = React.useCallback((index: number) => (
 *  <li key={index}>
 *    This is my item #{index}
 *  </li>
 * ), [])
 *
 * const { outerProps, innerProps, visibleChildren } = useVirtualization({itemsLength: 1000, itemRenderer: itemRenderer});
 * return (
 *  <div {...outerProps}>
 *   <ul {...innerProps}>
 *    {visibleChildren}
 *   </ul>
 *  </div>
 * );
 * @private
 */
const useVirtualization = (props) => {
    const { itemsLength, itemRenderer, bufferSize = 10, scrollToIndex, style, ...rest } = props;
    const [startNode, setStartNode] = React__default.useState(0);
    const [visibleNodeCount, setVisibleNodeCount] = React__default.useState(0);
    const scrollContainer = React__default.useRef();
    const parentRef = React__default.useRef(null);
    const childHeight = React__default.useRef({ first: 0, middle: 0, last: 0 });
    const onScrollRef = React__default.useRef();
    // Used only to recalculate on resize
    const [scrollContainerHeight, setScrollContainerHeight] = React__default.useState(0);
    const visibleIndex = React__default.useRef({ start: 0, end: 0 });
    // Used to mark when scroll container has height (updated by resize observer)
    // because before that calculations are not right
    const [isMounted, setIsMounted] = React__default.useState(false);
    const getScrollableContainer = () => {
        var _a, _b;
        return (_a = scrollContainer.current) !== null && _a !== void 0 ? _a : (_b = parentRef.current) === null || _b === void 0 ? void 0 : _b.ownerDocument.scrollingElement;
    };
    const visibleChildren = React__default.useMemo(() => {
        const arr = [];
        const endIndex = Math.min(itemsLength, startNode + visibleNodeCount + bufferSize * 2);
        for (let i = startNode; i < endIndex; i++) {
            arr.push(itemRenderer(i));
        }
        return arr;
    }, [itemsLength, itemRenderer, bufferSize, startNode, visibleNodeCount]);
    const updateChildHeight = React__default.useCallback(() => {
        var _a, _b, _c, _d, _e, _f;
        if (!parentRef.current || !visibleChildren.length) {
            return;
        }
        const firstChild = parentRef.current.children.item(0);
        const secondChild = parentRef.current.children.item(1);
        const lastChild = parentRef.current.children.item(parentRef.current.children.length - 1);
        const firstChildHeight = Number((_b = (_a = getElementHeightWithMargins(firstChild)) === null || _a === void 0 ? void 0 : _a.toFixed(2)) !== null && _b !== void 0 ? _b : 0);
        childHeight.current = {
            first: firstChildHeight,
            middle: Number((_d = (_c = getElementHeightWithMargins(secondChild)) === null || _c === void 0 ? void 0 : _c.toFixed(2)) !== null && _d !== void 0 ? _d : firstChildHeight),
            last: Number((_f = (_e = getElementHeightWithMargins(lastChild)) === null || _e === void 0 ? void 0 : _e.toFixed(2)) !== null && _f !== void 0 ? _f : firstChildHeight),
        };
    }, [visibleChildren.length]);
    const onResize = React__default.useCallback(({ height }) => {
        // Initial value returned by resize observer is 0
        // So wait for the next one
        if (height > 0) {
            setIsMounted(true);
        }
        setScrollContainerHeight(height);
        updateChildHeight();
    }, [updateChildHeight]);
    const [resizeRef, resizeObserver] = useResizeObserver(onResize);
    // Find scrollable parent
    // Needed only on init
    React__default.useLayoutEffect(() => {
        var _a;
        const scrollableParent = getScrollableParent(parentRef.current, (_a = parentRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument);
        scrollContainer.current = scrollableParent;
        resizeRef(scrollableParent);
    }, [resizeRef]);
    // Stop watching resize, when virtual scroll is unmounted
    React__default.useLayoutEffect(() => {
        return () => resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();
    }, [resizeObserver]);
    // Get child height when children available
    React__default.useLayoutEffect(() => updateChildHeight(), [updateChildHeight]);
    const updateVirtualScroll = React__default.useCallback(() => {
        const scrollableContainer = getScrollableContainer();
        if (!scrollableContainer) {
            return;
        }
        const start = getNumberOfNodesInHeight(childHeight.current.middle, Math.round(scrollableContainer.scrollTop));
        const visibleNodes = getVisibleNodeCount(childHeight.current.middle, start, itemsLength, scrollableContainer);
        // If there are less items at the end than buffer size
        // show more items at the start.
        // Have boundaries for edge cases, e.g. 1 item length
        const startIndex = Math.min(Math.max(0, start - bufferSize), Math.max(0, itemsLength - bufferSize * 2 - visibleNodes));
        visibleIndex.current = { start: start, end: start + visibleNodes };
        setStartNode(startIndex);
        setVisibleNodeCount(visibleNodes);
        if (!parentRef.current) {
            return;
        }
        parentRef.current.style.transform = `translateY(${getTranslateValue(childHeight.current.middle, startIndex)}px)`;
    }, [bufferSize, itemsLength]);
    const onScroll = React__default.useCallback(() => {
        updateVirtualScroll();
    }, [updateVirtualScroll]);
    const removeScrollListener = React__default.useCallback(() => {
        var _a, _b;
        if (!onScrollRef.current) {
            return;
        }
        !scrollContainer.current ||
            scrollContainer.current === ((_a = parentRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.body)
            ? (_b = parentRef.current) === null || _b === void 0 ? void 0 : _b.ownerDocument.removeEventListener('scroll', onScrollRef.current)
            : scrollContainer.current.removeEventListener('scroll', onScrollRef.current);
    }, []);
    // Add event listener to the scrollable container.
    React__default.useLayoutEffect(() => {
        var _a, _b;
        removeScrollListener();
        onScrollRef.current = onScroll;
        if (!scrollContainer.current ||
            scrollContainer.current === ((_a = parentRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.body)) {
            (_b = parentRef.current) === null || _b === void 0 ? void 0 : _b.ownerDocument.addEventListener('scroll', onScroll);
        }
        else {
            scrollContainer.current.addEventListener('scroll', onScroll);
        }
        return removeScrollListener;
    }, [onScroll, removeScrollListener]);
    React__default.useLayoutEffect(() => {
        if (!isMounted) {
            return;
        }
        const scrollableContainer = getScrollableContainer();
        if (!scrollableContainer || scrollToIndex == null) {
            return;
        }
        // if `scrollToIndex` is not visible, scroll to it
        if (scrollToIndex > visibleIndex.current.end ||
            scrollToIndex < visibleIndex.current.start) {
            const indexDiff = scrollToIndex > visibleIndex.current.end
                ? scrollToIndex - visibleIndex.current.end
                : scrollToIndex - visibleIndex.current.start;
            if (scrollToIndex === 0) {
                scrollableContainer.scrollTo({ top: 0 });
                return;
            }
            // If go down: add to the existing scrollTop needed height
            // If go up: calculate the exact scroll top
            scrollableContainer.scrollTo({
                top: indexDiff > 0
                    ? Math.ceil(scrollableContainer.scrollTop) +
                        indexDiff * childHeight.current.middle
                    : scrollToIndex * childHeight.current.middle,
            });
        }
        // if `scrollToIndex` is the first visible node
        // ensure it is fully visible
        if (scrollToIndex === visibleIndex.current.start) {
            const roundedScrollTop = Math.round(scrollableContainer.scrollTop);
            const diff = roundedScrollTop % childHeight.current.middle;
            diff > 0 &&
                scrollableContainer.scrollTo({
                    top: roundedScrollTop - diff,
                });
            return;
        }
        // if `scrollToIndex` is the last visible node
        // ensure it is fully visible
        if (scrollToIndex === visibleIndex.current.end) {
            const diff = (scrollableContainer.offsetHeight - childHeight.current.first) %
                childHeight.current.middle;
            const roundedScrollTop = Math.ceil(scrollableContainer.scrollTop);
            const scrollTopMod = roundedScrollTop % childHeight.current.middle;
            if (diff > 0 && scrollTopMod === 0) {
                scrollableContainer.scrollTo({
                    top: roundedScrollTop + childHeight.current.middle - diff,
                });
            }
        }
    }, [scrollToIndex, isMounted]);
    React__default.useLayoutEffect(() => {
        if (!scrollContainerHeight) {
            return;
        }
        updateVirtualScroll();
    }, [scrollContainerHeight, updateVirtualScroll]);
    return {
        outerProps: {
            style: {
                minHeight: itemsLength > 1
                    ? Math.max(itemsLength - 2, 0) * childHeight.current.middle +
                        childHeight.current.first +
                        childHeight.current.last
                    : childHeight.current.middle,
                minWidth: '100%',
                ...style,
            },
            ...rest,
        },
        innerProps: {
            style: { willChange: 'transform' },
            ref: mergeRefs(parentRef), // convert object ref to callback ref for better types
        },
        visibleChildren,
    };
};
const VirtualScroll$1 = VirtualScroll;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
// portions adapted from Three.js Copyright © 2010-2017 three.js authors
const scratchBytes = new Uint8Array(4);
const scratchUInt32 = new Uint32Array(scratchBytes.buffer);
/**
 * isRgbValue type guard.
 */
const isRgbColor = (value) => {
    return (typeof value !== 'string' && 'r' in value && 'g' in value && 'b' in value);
};
/**
 * isHslValue type guard.
 */
const isHslColor = (value) => {
    return (typeof value !== 'string' && 'h' in value && 's' in value && 'l' in value);
};
/**
 * isHsvValue type guard.
 */
const isHsvColor = (value) => {
    return (typeof value !== 'string' && 'h' in value && 's' in value && 'v' in value);
};
/**
 * An immutable integer representation of a color.
 *
 * Colors are stored as 4 components: Red, Blue, Green, and Transparency (0=fully opaque). Each is an 8-bit integer between 0-255.
 * ColorValue uses `0xTTBBGGRR` (red in the low byte. 0==fully opaque in high byte) internally, but it also provides methods
 * to return colors in popular web formats.
 *
 * The `create` method accepts any ColorType format.
 *
 * @public
 */
class ColorValue {
    constructor(tbgr, hue) {
        scratchUInt32[0] = tbgr; // Force to be a 32-bit unsigned integer
        this._tbgr = scratchUInt32[0];
        this._hue = hue;
    }
    /**
     * Create a new ColorValue.
     * @param val value to use.
     *
     * If a string, must be in one of the following forms:
     * *"rgb(255,0,0)"*
     * *"rgba(255,0,0,.2)"*
     * *"rgb(100%,0%,0%)"*
     * *"hsl(120,50%,50%)"*
     * *"#rrggbb"*
     */
    static create(val) {
        if (!val) {
            return ColorValue.fromTbgr(0);
        }
        if (isRgbColor(val)) {
            return ColorValue.fromRGB(val);
        }
        if (isHslColor(val)) {
            return ColorValue.fromHSL(val);
        }
        if (isHsvColor(val)) {
            return ColorValue.fromHSV(val);
        }
        if (typeof val === 'string') {
            return ColorValue.fromString(val, ColorValue.fromTbgr(0));
        }
        return ColorValue.fromTbgr(0);
    }
    /**
     * Convert this ColorValue to an unsigned 32 bit integer representing the 0xTTBBGGRR value
     */
    toTbgr() {
        return this._tbgr;
    }
    /**
     * Create a ColorValue from its 0xTTBBGGRR representation.
     */
    static fromTbgr(tbgr) {
        return new ColorValue(tbgr);
    }
    /**
     * Create a ColorValue from Red, Green, Blue, Transparency values. All inputs should be integers between 0-255.
     */
    static fromRgbt(red, green, blue, transparency) {
        return this.fromTbgr(this.computeTbgrFromComponents(red, green, blue, transparency));
    }
    /**
     * Compute the 0xTTBBGGRR value corresponding to the specified Red, Green, Blue, Transparency components.
     *  All inputs should be integers between 0-255.
     */
    static computeTbgrFromComponents(red, green, blue, transparency) {
        scratchBytes[0] = red;
        scratchBytes[1] = green;
        scratchBytes[2] = blue;
        scratchBytes[3] = transparency || 0;
        return scratchUInt32[0];
    }
    /**
     * Create a ColorValue from a string representation. The following representations are supported:
     * *"rgb(255,0,0)"*
     * *"rgba(255,0,0,.2)"*
     * *"rgb(100%,0%,0%)"*
     * *"hsl(120,50%,50%)"*
     * *"#rrggbb"*
     * NOTE: If defaultColorIfNotParsed is not defined and string is invalid then error is thrown.
     * This allows component builders to know if they received bad input from user.
     */
    static fromString(val, defaultColorIfNotParsed) {
        const [tbgr, hue] = this.computeTbgrFromString(val, defaultColorIfNotParsed === null || defaultColorIfNotParsed === void 0 ? void 0 : defaultColorIfNotParsed.toTbgr());
        return new ColorValue(tbgr, hue);
    }
    /** Create a ColorValue from hue, saturation, lightness values.  */
    static fromHSL(hsl) {
        var _a;
        const alpha = (_a = hsl.a) !== null && _a !== void 0 ? _a : 1;
        return new ColorValue(this.computeTbgrFromHSL(hsl.h / 360, hsl.s / 100, hsl.l / 100, Math.round((1 - alpha) * 255)), hsl.h);
    }
    /** Create a ColorValue from an RgbColor */
    static fromRGB(rgb) {
        var _a;
        const alpha = (_a = rgb.a) !== null && _a !== void 0 ? _a : 1;
        return ColorValue.fromRgbt(rgb.r, rgb.g, rgb.b, Math.round((1 - alpha) * 255));
    }
    /**
     * Create a ColorValue from an HsvColor
     */
    static fromHSV(hsv) {
        var _a;
        const alpha = (_a = hsv.a) !== null && _a !== void 0 ? _a : 1;
        const transparency = Math.round((1 - alpha) * 255);
        // Check for simple case first.
        if (!hsv.s || hsv.h === -1) {
            // hue must be undefined, have no color only white
            const white = 0xff & Math.floor((255.0 * hsv.v) / 100.0 + 0.5 + 3.0e-14);
            return ColorValue.fromRgbt(white, white, white, 0);
        }
        let dhue = hsv.h, dsaturation = hsv.s, dvalue = hsv.v;
        if (dhue === 360) {
            dhue = 0.0;
        }
        dhue /= 60; // hue is now [0..6]
        const hueIntpart = Math.floor(dhue); // convert double -> int
        const hueFractpart = dhue - hueIntpart;
        dvalue /= 100;
        dsaturation /= 100;
        const p = 0xff & Math.floor(dvalue * (1.0 - dsaturation) * 255.0 + 0.5);
        const q = 0xff &
            Math.floor(dvalue * (1.0 - dsaturation * hueFractpart) * 255.0 + 0.5);
        const t = 0xff &
            Math.floor(dvalue * (1.0 - dsaturation * (1.0 - hueFractpart)) * 255.0 + 0.5);
        const v = 0xff & Math.floor(dvalue * 255 + 0.5);
        let r = 0, b = 0, g = 0;
        switch (hueIntpart) {
            case 0:
                r = v;
                g = t;
                b = p;
                break; // reddish
            case 1:
                (r = q), (g = v);
                b = p;
                break; // yellowish
            case 2:
                (r = p), (g = v);
                b = t;
                break; // greenish
            case 3:
                (r = p), (g = q);
                b = v;
                break; // cyanish
            case 4:
                (r = t), (g = p);
                b = v;
                break; // bluish
            case 5:
                (r = v), (g = p);
                b = q;
                break; // magenta-ish
        }
        return new ColorValue(ColorValue.computeTbgrFromComponents(r, g, b, transparency), hsv.h);
    }
    /**
     * Compute the 0xTTBBGGRR value corresponding to a string representation of a color. The following representations are supported:
     * *"rgb(255,0,0)"*
     * *"rgba(255,0,0,.2)"*
     * *"rgb(100%,0%,0%)"*
     * *"hsl(120,50%,50%)"*
     * *"#rrggbb"*
     */
    static computeTbgrFromString(val, defaultColorIfNotParsed) {
        val = val.toLowerCase();
        let m = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(val);
        if (m) {
            // rgb / hsl
            let color;
            const name = m[1];
            const components = m[2];
            const hasPercent = (str) => str[str.length - 1] === '%';
            const floatOrPercent = (str) => {
                const v = parseFloat(str);
                return 255 * getBoundedValue(hasPercent(str) ? v / 100 : v, 0, 1);
            };
            const intOrPercent = (str) => {
                const v = hasPercent(str)
                    ? (parseFloat(str) / 100) * 255
                    : parseInt(str, 10);
                return getBoundedValue(v, 0, 255);
            };
            switch (name) {
                case 'rgb':
                case 'rgba':
                    color = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components);
                    if (color) {
                        // rgb(255,0,0) rgba(255,0,0,0.5)
                        return [
                            this.computeTbgrFromComponents(intOrPercent(color[1]), intOrPercent(color[2]), intOrPercent(color[3]), typeof color[4] === 'string'
                                ? 255 - floatOrPercent(color[4])
                                : 0),
                            undefined,
                        ];
                    }
                    break;
                case 'hsl':
                case 'hsla':
                    color = /^(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components);
                    if (color) {
                        // hsl(120,50%,50%) hsla(120,50%,50%,0.5)
                        const h = parseFloat(color[1]);
                        const s = parseInt(color[2], 10) / 100;
                        const l = parseInt(color[3], 10) / 100;
                        const t = typeof color[4] === 'string' ? 255 - floatOrPercent(color[4]) : 0;
                        return [this.computeTbgrFromHSL(h / 360, s, l, t), h];
                    }
                    break;
            }
            // eslint-disable-next-line no-cond-assign
        }
        else if ((m = /^\#([A-Fa-f\d]+)$/.exec(val))) {
            // hex color
            const hex = m[1];
            const size = hex.length;
            if (size === 3) {
                // #ff0
                return [
                    this.computeTbgrFromComponents(parseInt(hex.charAt(0) + hex.charAt(0), 16), parseInt(hex.charAt(1) + hex.charAt(1), 16), parseInt(hex.charAt(2) + hex.charAt(2), 16), 0),
                    undefined,
                ];
            }
            if (size === 6) {
                // #ff0000
                return [
                    this.computeTbgrFromComponents(parseInt(hex.charAt(0) + hex.charAt(1), 16), parseInt(hex.charAt(2) + hex.charAt(3), 16), parseInt(hex.charAt(4) + hex.charAt(5), 16), 0),
                    undefined,
                ];
            }
            if (size === 8) {
                // #ff0000ff
                return [
                    this.computeTbgrFromComponents(parseInt(hex.charAt(0) + hex.charAt(1), 16), parseInt(hex.charAt(2) + hex.charAt(3), 16), parseInt(hex.charAt(4) + hex.charAt(5), 16), 255 - parseInt(hex.charAt(6) + hex.charAt(7), 16)),
                    undefined,
                ];
            }
        }
        if (defaultColorIfNotParsed) {
            return [defaultColorIfNotParsed, undefined];
        }
        throw new Error('unable to parse string into ColorValue');
    }
    /**
     * Get the r,g,b,t values encoded in an 0xTTBBGGRR value. Values will be integers between 0-255.
     */
    static getColors(tbgr) {
        scratchUInt32[0] = tbgr;
        return {
            b: scratchBytes[2],
            g: scratchBytes[1],
            r: scratchBytes[0],
            t: scratchBytes[3],
        };
    }
    /**
     * Get the RGB value of the 0xTTBBGGRR color as a number in 0xRRGGBB or 0xRRGGBBAA format
     */
    getRgb(includeAlpha) {
        scratchUInt32[0] = this._tbgr;
        if (includeAlpha) {
            return ((scratchBytes[0] << 24) +
                (scratchBytes[1] << 16) +
                (scratchBytes[2] << 8) +
                (255 - scratchBytes[3]));
        }
        return (scratchBytes[0] << 16) + (scratchBytes[1] << 8) + scratchBytes[2];
    }
    /**
     * Get the alpha value for this ColorDef. Will be between 0-255
     */
    getAlpha() {
        return ColorValue.getAlpha(this._tbgr);
    }
    /**
     * Extract the alpha value from a 0xTTBBGGRR color.
     */
    static getAlpha(tbgr) {
        scratchUInt32[0] = tbgr;
        return 255 - scratchBytes[3];
    }
    /**
     * Convert this ColorValue to a string in the form "#rrggbb" or "#rrggbbaa" where values are hex digits of the respective colors
     */
    toHexString(includeAlpha) {
        if (includeAlpha) {
            let value = this.getRgb(includeAlpha);
            if (value < 0) {
                value = 0xffffffff + value + 1;
            }
            return `#${`00000000${value.toString(16)}`.slice(-8)}`;
        }
        return `#${`000000${this.getRgb().toString(16)}`.slice(-6)}`;
    }
    /**
     * Compute the 0xTTBBGGRR color corresponding to the specified hue, saturation, lightness values.
     */
    static computeTbgrFromHSL(
    /** 0-1 */
    h, 
    /** 0-1 */
    s, 
    /** 0-1 */
    l, transparency = 0) {
        const torgb = (p1, q1, t) => {
            if (t < 0) {
                t += 1;
            }
            if (t > 1) {
                t -= 1;
            }
            if (t < 1 / 6) {
                return p1 + (q1 - p1) * 6 * t;
            }
            if (t < 1 / 2) {
                return q1;
            }
            if (t < 2 / 3) {
                return p1 + (q1 - p1) * 6 * (2 / 3 - t);
            }
            return p1;
        };
        const hue2rgb = (p1, q1, t) => Math.round(torgb(p1, q1, t) * 255);
        const modulo = (n, m) => ((n % m) + m) % m;
        // h,s,l ranges are in 0.0 - 1.0
        h = modulo(h, 1);
        s = getBoundedValue(s, 0, 1);
        l = getBoundedValue(l, 0, 1);
        if (s === 0) {
            l *= 255;
            return this.computeTbgrFromComponents(l, l, l, transparency);
        }
        const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;
        const q = 2 * l - p;
        return this.computeTbgrFromComponents(hue2rgb(q, p, h + 1 / 3), hue2rgb(q, p, h), hue2rgb(q, p, h - 1 / 3), transparency);
    }
    /**
     * Return HslColor from this ColorValue
     */
    toHslColor() {
        return {
            ...ColorValue.toHsl(this._tbgr),
            ...(this._hue != undefined && { h: this._hue }),
        };
    }
    /** Create an HslColor from this ColorValue */
    static toHsl(tbgr) {
        const { r, g, b } = ColorValue.getColors(tbgr);
        const red = r / 255;
        const green = g / 255;
        const blue = b / 255;
        const cMin = Math.min(red, green, blue);
        const cMax = Math.max(red, green, blue);
        const delta = cMax - cMin;
        let hue = 0;
        let saturation = 0;
        if (0 === delta) {
            hue = 0;
        }
        else if (red === cMax) {
            hue = ((green - blue) / delta) % 6;
        }
        else if (green === cMax) {
            hue = (blue - red) / delta + 2;
        }
        else {
            hue = (red - green) / delta + 4;
        }
        hue = Math.round(hue * 60);
        if (hue < 0) {
            hue += 360;
        }
        let lightness = (cMax + cMin) / 2;
        saturation = 0 === delta ? 0 : delta / (1 - Math.abs(2 * lightness - 1));
        // round values to 1 decimal place
        saturation = Number((saturation * 100).toFixed(1));
        lightness = Number((lightness * 100).toFixed(1));
        return {
            h: hue,
            s: saturation,
            l: lightness,
            a: this.getAlpha(tbgr) / 255,
        };
    }
    /**
     * Create an RgbColor from this ColorValue
     */
    toRgbColor() {
        const { r, g, b } = ColorValue.getColors(this._tbgr);
        return { r, g, b, a: this.getAlpha() / 255 };
    }
    /**
     * Return HsvColor from this ColorValue
     */
    toHsvColor() {
        return {
            ...ColorValue.toHsv(this._tbgr),
            ...(this._hue != undefined && { h: this._hue }),
        };
    }
    /**
     * Create an HsvColor from this ColorValue
     */
    static toHsv(tbgr) {
        const { r, g, b } = ColorValue.getColors(tbgr);
        const red = r / 255;
        const green = g / 255;
        const blue = b / 255;
        const cMin = Math.min(red, green, blue);
        const cMax = Math.max(red, green, blue);
        const delta = cMax - cMin;
        let hue = 0;
        if (0 === delta) {
            hue = 0;
        }
        else if (red === cMax) {
            hue = ((green - blue) / delta) % 6;
        }
        else if (green === cMax) {
            hue = (blue - red) / delta + 2;
        }
        else {
            hue = (red - green) / delta + 4;
        }
        hue = Math.round(hue * 60);
        if (hue < 0) {
            hue += 360;
        }
        let brightness = cMax;
        let saturation = cMax === 0 ? 0 : delta / cMax;
        // round values to 1 decimal place
        saturation = Number((saturation * 100).toFixed(1));
        brightness = Number((brightness * 100).toFixed(1));
        return {
            h: hue,
            s: saturation,
            v: brightness,
            a: this.getAlpha(tbgr) / 255,
        };
    }
    /** True if the value of this ColorValue is the same as another ColorValue. */
    equals(other) {
        return this._tbgr === other._tbgr;
    }
    static getFormattedColorNumber(value, precision = 1) {
        if (0 === precision) {
            Math.round(value).toString();
        }
        return Number(value.toFixed(precision)).toString();
    }
    /** Convert the 0xTTBBGGRR color to a string of the form "rgba(r,g,b,a)" where the color components are specified in decimal and the alpha component is a fraction. */
    toRgbString(includeAlpha) {
        var _a;
        const rgb = this.toRgbColor();
        const rgbString = `${rgb.r}, ${rgb.g}, ${rgb.b}`;
        if (includeAlpha) {
            const alpha = (_a = rgb.a) !== null && _a !== void 0 ? _a : 1;
            return `rgba(${rgbString}, ${ColorValue.getFormattedColorNumber(alpha, 2)})`;
        }
        return `rgb(${rgbString})`;
    }
    /** Convert this ColorValue to a string in the form "hsl(h,s,l) or hsla(h,s,l,a)" - i.e hsl(120,50%,50%). */
    toHslString(includeAlpha) {
        var _a, _b;
        const hsl = this.toHslColor();
        const hslString = `${ColorValue.getFormattedColorNumber((_a = this._hue) !== null && _a !== void 0 ? _a : hsl.h)}, ${ColorValue.getFormattedColorNumber(hsl.s)}%, ${ColorValue.getFormattedColorNumber(hsl.l)}%`;
        if (includeAlpha) {
            const alpha = (_b = hsl.a) !== null && _b !== void 0 ? _b : 1;
            return `hsla(${hslString}, ${ColorValue.getFormattedColorNumber(alpha, 2)})`;
        }
        return `hsl(${hslString})`;
    }
    /** Convert this ColorValue to a string in the form "hsv(h,s,v) or hsva(h,s,v,a)" - i.e hsv(120,50%,50%). */
    toHsvString(includeAlpha) {
        var _a, _b;
        const hsv = this.toHsvColor();
        const hsvString = `${(_a = this._hue) !== null && _a !== void 0 ? _a : hsv.h}, ${hsv.s}%, ${hsv.v}%`;
        if (includeAlpha) {
            const alpha = (_b = hsv.a) !== null && _b !== void 0 ? _b : 1;
            return `hsva(${hsvString}, ${ColorValue.getFormattedColorNumber(alpha, 2)})`;
        }
        return `hsv(${hsvString})`;
    }
}

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgInfoCircular = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm1.2 3.2a.923.923 0 0 1 .997.843l.003.057a1.31 1.31 0 0 1-1.3 1.2.945.945 0 0 1-1-1 1.228 1.228 0 0 1 1.3-1.1zm-2 9.6c-.5 0-.9-.3-.5-1.7l.6-2.4c.1-.4.1-.5 0-.5-.2-.1-.9.2-1.3.5l-.2-.5a6.497 6.497 0 0 1 3.3-1.6c.5 0 .6.6.3 1.6l-.7 2.6c-.1.5-.1.6.1.6a2.003 2.003 0 0 0 1.1-.6l.3.4a5.769 5.769 0 0 1-3 1.6z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgStatusError = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm8 0a8 8 0 1 0 8 8 8 8 0 0 0 -8-8zm1 12h-2v-2h2zm0-3h-2v-5h2z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgStatusSuccess = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm8 0a8 8 0 1 0 8 8 8 8 0 0 0 -8-8zm-1.35 12-3.65-3.41 1.4-1.3 2.36 2.2 4.83-4.49 1.41 1.29z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgStatusWarning = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm15.86807 13.26721-6.77-11.62a1.15 1.15 0 0 0 -1.1-.67 1.17 1.17 0 0 0 -1.1.69l-6.77 11.59a1.2 1.2 0 0 0 1.1 1.72h13.45a1.19 1.19 0 0 0 1.19-1.71zm-6.87-.29h-2v-2h2zm0-3h-2v-5h2z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const StatusIconMap = {
    negative: (args) => React.createElement(SvgStatusError, { "aria-hidden": true, ...args }),
    positive: (args) => React.createElement(SvgStatusSuccess, { "aria-hidden": true, ...args }),
    warning: (args) => React.createElement(SvgStatusWarning, { "aria-hidden": true, ...args }),
    informational: (args) => (React.createElement(SvgInfoCircular, { "aria-hidden": true, ...args })),
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgClose = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm14 0-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6 6-6' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgCloseSmall = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm12.5 2-4.5 4.5-4.5-4.5-1.5 1.5 4.5 4.5-4.5 4.5 1.5 1.5 4.5-4.5 4.5 4.5 1.5-1.5-4.5-4.5 4.5-4.5z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgChevronLeft = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm11.3 0 1.4 1.4-6.6 6.6 6.6 6.6-1.4 1.4-8-8z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgChevronRight = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm4.7 0-1.4 1.4 6.6 6.6-6.6 6.6 1.4 1.4 8-8z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgChevronLeftDouble = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm14.6 0 1.4 1.4-6.6 6.6 6.6 6.6-1.4 1.4-8-8zm-6.6 0 1.4 1.4-6.6 6.6 6.6 6.6-1.4 1.4-8-8z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgChevronRightDouble = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm1.4 0-1.4 1.4 6.6 6.6-6.6 6.6 1.4 1.4 8-8zm6.6 0-1.4 1.4 6.6 6.6-6.6 6.6 1.4 1.4 8-8z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgCaretUpSmall = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M4.807 9.997h6.395a.28.28 0 0 0 .24-.443L8.27 6.097a.34.34 0 0 0-.48 0h-.001L4.566 9.554a.27.27 0 0 0 .24.443z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgCaretDownSmall = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M4.807 6h6.395a.28.28 0 0 1 .24.443L8.27 9.9a.34.34 0 0 1-.481 0L4.566 6.443A.27.27 0 0 1 4.806 6z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgCaretRightSmall = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M6.003 4.807v6.4a.28.28 0 0 0 .443.24L9.9 8.27a.34.34 0 0 0 0-.48L6.446 4.566a.269.269 0 0 0-.443.24z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgSmileyHappy = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M8 12.5a5.19 5.19 0 0 1-3.872-1.666.5.5 0 1 1 .744-.668A4.191 4.191 0 0 0 8 11.5a4.191 4.191 0 0 0 3.128-1.334.5.5 0 1 1 .744.668A5.19 5.19 0 0 1 8 12.5zM11 5a1.146 1.146 0 0 1 1 1.25 1.146 1.146 0 0 1-1 1.25 1.146 1.146 0 0 1-1-1.25A1.146 1.146 0 0 1 11 5zM5 5a1.146 1.146 0 0 1 1 1.25A1.146 1.146 0 0 1 5 7.5a1.146 1.146 0 0 1-1-1.25A1.146 1.146 0 0 1 5 5zm3-5a8 8 0 1 0 8 8 8 8 0 0 0-8-8z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgSwap = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm5 15-3.78125-3.5 3.78125-3.5v2h8v3h-8zm6-7 3.78125-3.5-3.78125-3.5v2h-8v3h8z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgUpload = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm2 5h4v7h4v-7h4l-6-5zm12 6v3h-12v-3h-2v5h16v-5z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgMoreVertical = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm8 4a2 2 0 1 1 2-2 2 2 0 0 1 -2 2zm2 4a2 2 0 1 0 -2 2 2 2 0 0 0 2-2zm0 6a2 2 0 1 0 -2 2 2 2 0 0 0 2-2z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgCheckmark$1 = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M6,14L0,8l2-2l4,4l8-8l2,2L6,14z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgCheckmarkSmall = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm6 13.4-4.7-4.7 1.4-1.4 3.3 3.3 7.3-7.3 1.4 1.4z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgImportantSmall = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M6.25 1h3.5v3.19l-.676 6.408H6.91L6.25 4.19zm.12 10.572h3.268V15H6.37z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgSortUp = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm9 16v-12.7l3.8 3.7 1.2-1.2-6-5.8-1.2 1.2-4.8 4.6 1.2 1.2 3.8-3.7v12.7z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgSortDown = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm7 0v12.7l-3.8-3.7-1.2 1.2 6 5.8 1.2-1.2 4.8-4.6-1.2-1.2-3.8 3.7v-12.7z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgMore$1 = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm4 8a2 2 0 1 1 -2-2 2 2 0 0 1 2 2zm4-2a2 2 0 1 0 2 2 2 2 0 0 0 -2-2zm6 0a2 2 0 1 0 2 2 2 2 0 0 0 -2-2z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgNew = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M8 5a1 1 0 0 1-1-1V1a1 1 0 0 1 2 0v3a1 1 0 0 1-1 1zM4.535 7a.997.997 0 0 1-.499-.134l-2.598-1.5a1 1 0 1 1 1-1.732l2.598 1.5A1 1 0 0 1 4.536 7zM1.94 12.5a1 1 0 0 1-.501-1.866l2.598-1.5a1 1 0 1 1 1 1.732l-2.598 1.5a.997.997 0 0 1-.499.134zM8 16a1 1 0 0 1-1-1v-3a1 1 0 0 1 2 0v3a1 1 0 0 1-1 1zm6.061-3.5a.995.995 0 0 1-.499-.134l-2.598-1.5a1 1 0 1 1 1-1.732l2.598 1.5a1 1 0 0 1-.5 1.866zM11.465 7a1 1 0 0 1-.501-1.866l2.598-1.5a1 1 0 1 1 1 1.732l-2.598 1.5a.995.995 0 0 1-.5.134z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgFilter = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'm0 0v2l6 5v9l4-3v-6l6-5v-2z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SvgFilterHollow = (props) => {
    return (React.createElement("svg", { viewBox: '0 0 16 16', ...props },
        React.createElement("path", { d: 'M15 1v.5L9.4 6.2l-.4.3v6L7 14V6.5l-.4-.3L1 1.5V1zm1-1H0v2l6 5v9l4-3V7l6-5z' })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * A small box to quickly grab user attention and communicate a brief message
 * @example
 * <Alert>This is a basic alert.</Alert>
 * <Alert type='positive'>This is a positive alert.</Alert>
 * <Alert type='warning'>This is a warning alert.</Alert>
 * <Alert type='negative'>This is a negative alert.</Alert>
 * <Alert
 *  type='positive'
 *  clickableText="I am a clickable text"
 *  clickableTextProps={{ href: 'https://www.example.com' }}
 * >
 *   This is a positive alert with a clickable text
 * </Alert>
 */
const Alert = (props) => {
    const { children, className, type = 'informational', clickableText, clickableTextProps, onClose, style, isSticky = false, ...rest } = props;
    useTheme();
    const StatusIcon = StatusIconMap[type];
    return (React__default.createElement("div", { className: cx('iui-alert', className), "data-iui-status": type, "data-iui-variant": isSticky ? 'sticky' : undefined, style: style, ...rest },
        React__default.createElement(StatusIcon, { className: 'iui-alert-icon' }),
        React__default.createElement("span", { className: 'iui-alert-message' },
            children,
            clickableText && (React__default.createElement("a", { ...clickableTextProps, className: cx('iui-alert-link', clickableTextProps === null || clickableTextProps === void 0 ? void 0 : clickableTextProps.className) }, clickableText))),
        onClose && (React__default.createElement("button", { onClick: onClose, "aria-label": 'Close', type: 'button', className: 'iui-alert-button' },
            React__default.createElement("span", { className: 'iui-alert-button-icon', "aria-hidden": true },
                React__default.createElement(SvgCloseSmall, null))))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const defaultStatusTitles = {
    away: 'Away',
    busy: 'Busy',
    offline: 'Offline',
    online: 'Online',
};
/**
 * Basic avatar component
 * @example
 * <caption>Small icon with abbreviation</caption>
 * <Avatar size='small' title='Terry Rivers' abbreviation='TR' backgroundColor='green'/>
 * @example
 * <caption>Medium icon with image</caption>
 * <Avatar size='medium' title='Terry Rivers' abbreviation='TR' backgroundColor='green' image={<img src="https://cdn.example.com/user/profile/pic.png" />}/>
 * @example
 * <caption>Large icon with status</caption>
 * <Avatar size='large' title='Terry Rivers' abbreviation='TR' backgroundColor='green' status='online' />
 * @example
 * <caption>X-large icon with image</caption>
 * <Avatar size='x-large' title='Terry Rivers' abbreviation='TR' backgroundColor='green' image={<img src="https://cdn.example.com/user/profile/pic.png" />}/>
 */
const Avatar = (props) => {
    const { size = 'small', status, abbreviation, image, backgroundColor = 'white', title, translatedStatusTitles, className, style, ...rest } = props;
    useTheme();
    const statusTitles = { ...defaultStatusTitles, ...translatedStatusTitles };
    return (React__default.createElement("span", { className: cx('iui-avatar', { [`iui-${size}`]: size !== 'medium' }, className), title: title, style: style, ...rest }, image !== null && image !== void 0 ? image : (React__default.createElement("abbr", { className: 'iui-initials', style: { backgroundColor } }, abbreviation === null || abbreviation === void 0 ? void 0 : abbreviation.substring(0, 2))),
        React__default.createElement("span", { className: 'iui-stroke' }),
        status && (React__default.createElement("span", { title: statusTitles[status], className: cx('iui-status', {
                [`iui-${status}`]: !!status,
            }), "aria-label": statusTitles[status] }))));
};
/**
 * @deprecated Since v2, this has been renamed to `Avatar`
 */
const UserIcon = Avatar;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Group Avatars together.
 *
 * Avatars stacking is based on `maxAvatars` count. If you provide 8 Avatars and keep default 5 `maxAvatars` count,
 * this component will show 5 Avatars and Count Avatar with "3" in it.
 *
 * You can add custom Count Avatar behavior by using `countAvatarProps`.
 *
 * @example
 * <AvatarGroup iconSize='medium'>
 *  <Avatar
 *    abbreviation="TR"
 *    backgroundColor={getUserColor("Terry Rivers")}
 *    title="Terry Rivers"
 *  />
 *  <Avatar
 *    abbreviation="RM"
 *    backgroundColor={getUserColor("Robin Mercer")}
 *    title="Robin Mercer"
 *  />
 *  <Avatar
 *    abbreviation="JM"
 *    backgroundColor={getUserColor("Jean Mullins")}
 *    title="Jean Mullins"
 *  />
 * </AvatarGroup>
 */
const AvatarGroup = (props) => {
    const maxLength = 99;
    const { children, animated = false, stacked = true, maxIcons = 5, iconSize = 'small', countIconProps, className, ...rest } = props;
    const childrenArray = React__default.Children.toArray(children);
    const childrenLength = childrenArray.length;
    useTheme();
    const getAvatarList = (count) => {
        return childrenArray.slice(0, count).map((child) => React__default.cloneElement(child, {
            status: undefined,
            size: iconSize,
        }));
    };
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement("div", { className: cx('iui-avatar-list', {
                'iui-animated': animated,
                'iui-stacked': stacked,
            }, className), ...rest },
            childrenArray.length <= maxIcons + 1 && getAvatarList(maxIcons + 1),
            childrenArray.length > maxIcons + 1 && (React__default.createElement(React__default.Fragment, null,
                getAvatarList(maxIcons),
                React__default.createElement("div", { ...countIconProps, className: cx('iui-avatar', { [`iui-${iconSize}`]: iconSize !== 'medium' }, 'iui-avatar-count', countIconProps === null || countIconProps === void 0 ? void 0 : countIconProps.className) },
                    React__default.createElement("abbr", { className: 'iui-initials' }, childrenLength <= maxLength
                        ? `${childrenLength - maxIcons}`
                        : `${maxLength}+`),
                    React__default.createElement("span", { className: 'iui-stroke' })))))));
};
/**
 * @deprecated Since v2, this has been renamed to `AvatarGroup`
 */
const UserIconGroup = AvatarGroup;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const Backdrop = React__default.forwardRef((props, ref) => {
    const { isVisible = true, className, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-backdrop', { 'iui-backdrop-visible': isVisible }, className), ref: ref, ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Helper function that returns one of the preset badge color values.
 */
const getBadgeColorValue = (color) => {
    if (!color) {
        return '';
    }
    switch (color) {
        case 'primary':
            return '#A5D7F5';
        case 'positive':
            return '#C3E1AF';
        case 'negative':
            return '#EFA9A9';
        case 'warning':
            return '#F9D7AB';
        default:
            return isSoftBackground(color) ? SoftBackgrounds[color] : color;
    }
};
/**
 * A colorful visual indicator for categorizing items.
 * @example
 * <Badge>Label</Badge>
 * <Badge backgroundColor="sunglow">Label</Badge>
 * <Badge backgroundColor="positive">Label</Badge>
 */
const Badge = (props) => {
    const { backgroundColor, style, className, children, ...rest } = props;
    useTheme();
    const _style = backgroundColor
        ? {
            '--iui-badge-background-color': getBadgeColorValue(backgroundColor),
            ...style,
        }
        : { ...style };
    return (React__default.createElement("span", { className: cx('iui-badge', className), style: _style, ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * A breadcrumb trail is used as a navigational aid to help users keep track
 * of their place in the application. It is often placed before a page's main content.
 *
 * Breadcrumb items can use `Button` or `a` or any custom component (passed as `children`).
 *
 * For accessibility, make sure to provide an aria-label describing the type of navigation.
 *
 * @example
 * <Breadcrumbs aria-label='Primary'>
 *   <Button onClick={() => {}}>Root</Button>
 *   <Button onClick={() => {}}>Item 1</Button>
 *   <Button onClick={() => {}}>Item 2</Button>
 * </Breadcrumbs>
 *
 * @example
 * <Breadcrumbs aria-label='Secondary'>
 *   <a href='/'>Root</a>
 *   <a href='/level1/'>Level 1</a>
 *   <span>Current level</span>
 * </Breadcrumbs>
 */
const Breadcrumbs = React__default.forwardRef((props, ref) => {
    const { children: items, currentIndex = items.length - 1, separator, overflowButton, className, ...rest } = props;
    useTheme();
    const [overflowRef, visibleCount] = useOverflow(items);
    const refs = useMergedRefs(overflowRef, ref);
    return (React__default.createElement("nav", { className: cx('iui-breadcrumbs', className), ref: refs, "aria-label": 'Breadcrumb', ...rest },
        React__default.createElement("ol", { className: 'iui-breadcrumbs-list' },
            visibleCount > 1 && (React__default.createElement(React__default.Fragment, null,
                React__default.createElement(ListItem, { item: items[0], isActive: currentIndex === 0 }),
                React__default.createElement(Separator, { separator: separator }))),
            items.length - visibleCount > 0 && (React__default.createElement(React__default.Fragment, null,
                React__default.createElement("li", { className: 'iui-breadcrumbs-item iui-breadcrumbs-item-overrides' }, overflowButton ? (overflowButton(visibleCount)) : (React__default.createElement("span", { className: 'iui-breadcrumbs-text' }, "\u2026"))),
                React__default.createElement(Separator, { separator: separator }))),
            items
                .slice(visibleCount > 1
                ? items.length - visibleCount + 1
                : items.length - 1)
                .map((_, _index) => {
                const index = visibleCount > 1
                    ? 1 + (items.length - visibleCount) + _index
                    : items.length - 1;
                return (React__default.createElement(React__default.Fragment, { key: index },
                    React__default.createElement(ListItem, { item: items[index], isActive: currentIndex === index }),
                    index < items.length - 1 && (React__default.createElement(Separator, { separator: separator }))));
            }))));
});
const ListItem = ({ item, isActive, }) => {
    var _a;
    return (React__default.createElement("li", { className: 'iui-breadcrumbs-item iui-breadcrumbs-item-overrides' }, React__default.isValidElement(item)
        ? React__default.cloneElement(item, {
            'aria-current': ((_a = item.props['aria-current']) !== null && _a !== void 0 ? _a : isActive) ? 'location' : undefined,
        })
        : item));
};
const Separator = ({ separator }) => (React__default.createElement("li", { className: 'iui-breadcrumbs-separator', "aria-hidden": true }, separator !== null && separator !== void 0 ? separator : React__default.createElement(SvgChevronRight, null)));

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Generic button component
 * @example
 * <Button>This is a default button</Button>
 * <Button disabled={true}>This is a disabled button</Button>
 * <Button size='large' styleType='high-visibility'>This is a large high visibility button</Button>
 * <Button size='small' styleType='cta'>This is a small call to action button</Button>
 * <Button startIcon={<SvgAdd />}>New</Button>
 */
const Button = React__default.forwardRef((props, ref) => {
    const { children, className, size, style, styleType = 'default', type = 'button', startIcon, endIcon, as: Element = 'button', ...rest } = props;
    useTheme();
    return (React__default.createElement(Element, { ref: ref, className: cx('iui-button', className), "data-iui-variant": styleType !== 'default' ? styleType : undefined, "data-iui-size": size, style: style, type: type, ...rest },
        startIcon && (React__default.createElement("span", { className: 'iui-button-icon', "aria-hidden": true }, startIcon)),
        children && React__default.createElement("span", null, children),
        endIcon && (React__default.createElement("span", { className: 'iui-button-icon', "aria-hidden": true }, endIcon))));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Basic menu component. Can be used for select or dropdown components.
 */
const Menu = React__default.forwardRef((props, ref) => {
    const { children, role = 'menu', setFocus = true, className, style, ...rest } = props;
    useTheme();
    const [focusedIndex, setFocusedIndex] = React__default.useState();
    const menuRef = React__default.useRef(null);
    const refs = useMergedRefs(menuRef, ref);
    const getFocusableNodes = React__default.useCallback(() => {
        const focusableItems = getFocusableElements(menuRef.current);
        // Filter out focusable elements that are inside each menu item, e.g. checkbox, anchor
        return focusableItems.filter((i) => !focusableItems.some((p) => p.contains(i.parentElement)));
    }, []);
    React__default.useEffect(() => {
        var _a;
        const items = getFocusableNodes();
        if (focusedIndex != null) {
            (_a = items === null || items === void 0 ? void 0 : items[focusedIndex]) === null || _a === void 0 ? void 0 : _a.focus();
            return;
        }
        const selectedIndex = items.findIndex((el) => el.getAttribute('aria-selected') === 'true');
        if (setFocus) {
            setFocusedIndex(selectedIndex > -1 ? selectedIndex : 0);
        }
    }, [setFocus, focusedIndex, getFocusableNodes]);
    const onKeyDown = (event) => {
        const items = getFocusableNodes();
        if (!(items === null || items === void 0 ? void 0 : items.length)) {
            return;
        }
        const currentIndex = focusedIndex !== null && focusedIndex !== void 0 ? focusedIndex : 0;
        switch (event.key) {
            case 'ArrowDown': {
                setFocusedIndex(Math.min(currentIndex + 1, items.length - 1));
                event.preventDefault();
                event.stopPropagation();
                break;
            }
            case 'ArrowUp': {
                setFocusedIndex(Math.max(currentIndex - 1, 0));
                event.preventDefault();
                event.stopPropagation();
                break;
            }
        }
    };
    return (React__default.createElement("ul", { className: cx('iui-menu', className), style: style, role: role, onKeyDown: onKeyDown, ref: refs, ...rest }, children));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Context used to provide menu item ref to sub-menu items.
 */
const MenuItemContext = React__default.createContext({ ref: undefined });
/**
 * Basic menu item component. Should be used inside `Menu` component for each item.
 */
const MenuItem = React__default.forwardRef((props, ref) => {
    const { children, isSelected, disabled, value, onClick, sublabel, size = !!sublabel ? 'large' : 'default', icon, badge, className, style, role = 'menuitem', subMenuItems = [], ...rest } = props;
    useTheme();
    const menuItemRef = React__default.useRef(null);
    const refs = useMergedRefs(menuItemRef, ref);
    const { ref: parentMenuItemRef } = React__default.useContext(MenuItemContext);
    const subMenuRef = React__default.useRef(null);
    const [isSubmenuVisible, setIsSubmenuVisible] = React__default.useState(false);
    const onKeyDown = (event) => {
        var _a;
        if (event.altKey) {
            return;
        }
        switch (event.key) {
            case 'Enter':
            case ' ':
            case 'Spacebar': {
                !disabled && (onClick === null || onClick === void 0 ? void 0 : onClick(value));
                event.preventDefault();
                break;
            }
            case 'ArrowRight': {
                if (subMenuItems.length > 0) {
                    setIsSubmenuVisible(true);
                    event.preventDefault();
                    event.stopPropagation();
                }
                break;
            }
            case 'ArrowLeft': {
                (_a = parentMenuItemRef === null || parentMenuItemRef === void 0 ? void 0 : parentMenuItemRef.current) === null || _a === void 0 ? void 0 : _a.focus();
                event.stopPropagation();
                event.preventDefault();
                break;
            }
        }
    };
    const listItem = (React__default.createElement("li", { className: cx('iui-menu-item', {
            'iui-large': size === 'large',
            'iui-active': isSelected,
            'iui-disabled': disabled,
        }, className), onClick: () => !disabled && (onClick === null || onClick === void 0 ? void 0 : onClick(value)), ref: refs, style: style, role: role, tabIndex: disabled || role === 'presentation' ? undefined : -1, "aria-selected": isSelected, "aria-haspopup": subMenuItems.length > 0, "aria-disabled": disabled, onKeyDown: onKeyDown, onMouseEnter: () => setIsSubmenuVisible(true), onMouseLeave: (e) => {
            var _a;
            if (!(e.relatedTarget instanceof Node) ||
                !((_a = subMenuRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget))) {
                setIsSubmenuVisible(false);
            }
        }, ...rest },
        icon &&
            React__default.cloneElement(icon, {
                className: cx(icon.props.className, 'iui-icon'),
            }),
        React__default.createElement("span", { className: 'iui-content' },
            React__default.createElement("div", { className: 'iui-menu-label' }, children),
            sublabel && React__default.createElement("div", { className: 'iui-menu-description' }, sublabel)),
        !badge && subMenuItems.length > 0 && (React__default.createElement(SvgCaretRightSmall, { className: 'iui-icon' })),
        badge &&
            React__default.cloneElement(badge, {
                className: cx(badge.props.className, 'iui-icon'),
            })));
    return subMenuItems.length === 0 ? (listItem) : (React__default.createElement(MenuItemContext.Provider, { value: { ref: menuItemRef } },
        React__default.createElement(Popover, { placement: 'right-start', visible: isSubmenuVisible, appendTo: 'parent', content: React__default.createElement("div", { onMouseLeave: () => setIsSubmenuVisible(false), onBlur: (e) => {
                    var _a, _b;
                    !!(e.relatedTarget instanceof Node) &&
                        !((_a = subMenuRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) &&
                        !((_b = subMenuRef.current) === null || _b === void 0 ? void 0 : _b.isEqualNode(e.relatedTarget)) &&
                        setIsSubmenuVisible(false);
                } },
                React__default.createElement(Menu, { ref: subMenuRef }, subMenuItems)) }, listItem)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Divider between menu items. Should be used inside `Menu`.
 * @example
 * <Menu>
 *   {(close) => [
 *     <MenuItem key={0} onClick={() => {}}>
 *       Item #1
 *     </MenuItem>,
 *     <MenuDivider key={1} />,
 *     <MenuItem key={2} onClick={() => {}}>
 *       Item #2
 *     </MenuItem>,
 *   ]}
 * </Menu>
 */
const MenuDivider = (props) => {
    const { className, ...rest } = props;
    useTheme();
    return (React__default.createElement("li", { role: 'separator', className: cx('iui-menu-divider', className), ...rest }));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Component that allows to have any additional content inside `Menu`.
 * @example
 * <Menu>
 *   {(close) => [
 *     <MenuExtraContent key={0}>
 *       <>
 *         <Text variant='leading'>Terry Rivers</Text>
 *           terry.rivers@email.com
 *         </Text>
 *         <Select options={someOptions} />
 *       </>
 *     </MenuExtraContent>,
 *     <MenuDivider key={1} />,
 *     <MenuItem key={2} onClick={() => {}}>
 *       Sign out
 *     </MenuItem>,
 *   ]}
 * </Menu>
 */
const MenuExtraContent = (props) => {
    const { children, className, ...rest } = props;
    useTheme();
    return (React__default.createElement("li", { className: cx('iui-menu-content', className), role: 'presentation', ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Dropdown menu component.
 * Uses the {@link Popover} component, which is a wrapper around [tippy.js](https://atomiks.github.io/tippyjs).
 * @example
 * const menuItems = (close: () => void) => [
 *   <MenuItem key={1} onClick={onClick(1, close)}>
 *     Item #1
 *   </MenuItem>,
 *   <MenuItem key={2} onClick={onClick(2, close)}>
 *     Item #2
 *   </MenuItem>,
 *   <MenuItem key={3} onClick={onClick(3, close)}>
 *     Item #3
 *   </MenuItem>,
 * ];
 * <DropdownMenu menuItems={menuItems}>
 *   <Button>Menu</Button>
 * </DropdownMenu>
 */
const DropdownMenu = (props) => {
    const { menuItems, children, className, style, role = 'menu', visible, placement = 'bottom-start', onShow, onHide, trigger, id, ...rest } = props;
    const [isVisible, setIsVisible] = React__default.useState(visible !== null && visible !== void 0 ? visible : false);
    React__default.useEffect(() => {
        setIsVisible(visible !== null && visible !== void 0 ? visible : false);
    }, [visible]);
    const open = React__default.useCallback(() => setIsVisible(true), []);
    const close = React__default.useCallback(() => setIsVisible(false), []);
    const targetRef = React__default.useRef(null);
    const onShowHandler = React__default.useCallback((instance) => {
        setIsVisible(true);
        onShow === null || onShow === void 0 ? void 0 : onShow(instance);
    }, [onShow]);
    const onHideHandler = React__default.useCallback((instance) => {
        var _a;
        setIsVisible(false);
        (_a = targetRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        onHide === null || onHide === void 0 ? void 0 : onHide(instance);
    }, [onHide]);
    useTheme();
    return (React__default.createElement(Popover, { content: React__default.createElement(Menu, { className: className, style: style, role: role, id: id }, React__default.useMemo(() => menuItems(close), [menuItems, close])), visible: trigger === undefined ? isVisible : undefined, onClickOutside: close, placement: placement, onShow: onShowHandler, onHide: onHideHandler, trigger: visible === undefined ? trigger : undefined, ...rest }, React__default.cloneElement(children, {
        ref: mergeRefs(targetRef, props.children.ref),
        onClick: (args) => {
            var _a, _b;
            trigger === undefined && (isVisible ? close() : open());
            (_b = (_a = children.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, args);
        },
    })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Button that opens a DropdownMenu.
 * @example
 * const menuItems = (close: () => void) => [
 *   <MenuItem key={1} onClick={onClick(1, close)}>Item #1</MenuItem>,
 *   <MenuItem key={2} onClick={onClick(2, close)}>Item #2</MenuItem>,
 * ];
 * <DropdownButton menuItems={menuItems}>Default</DropdownButton>
 */
const DropdownButton = React__default.forwardRef((props, ref) => {
    const { menuItems, className, size, styleType, children, ...rest } = props;
    useTheme();
    const [isMenuOpen, setIsMenuOpen] = React__default.useState(false);
    const [menuWidth, setMenuWidth] = React__default.useState(0);
    const buttonRef = React__default.useRef(null);
    const refs = useMergedRefs(ref, buttonRef);
    React__default.useEffect(() => {
        if (buttonRef.current) {
            setMenuWidth(buttonRef.current.offsetWidth);
        }
    }, [children, size, styleType]);
    return (React__default.createElement(DropdownMenu, { menuItems: menuItems, style: { minWidth: menuWidth }, onShow: () => setIsMenuOpen(true), onHide: () => setIsMenuOpen(false) },
        React__default.createElement(Button, { className: cx('iui-button-dropdown', className), size: size, styleType: styleType, endIcon: isMenuOpen ? (React__default.createElement(SvgCaretUpSmall, { "aria-hidden": true })) : (React__default.createElement(SvgCaretDownSmall, { "aria-hidden": true })), ref: refs, "aria-label": 'Dropdown', ...rest }, children)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Ideas button
 * @example
 * <IdeasButton />
 */
const IdeasButton = React__default.forwardRef((props, ref) => {
    const { feedbackLabel = 'Feedback', onClick, ...rest } = props;
    useTheme();
    return (React__default.createElement(Button, { ref: ref, "data-iui-variant": 'idea', onClick: onClick, startIcon: React__default.createElement(SvgSmileyHappy, { "aria-hidden": true }), ...rest }, feedbackLabel));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Icon button
 * @example
 * <IconButton><SvgAdd /></IconButton>
 * <IconButton styleType='borderless'><SvgAdd /></IconButton>
 */
const IconButton = React__default.forwardRef((props, ref) => {
    const { isActive, children, styleType = 'default', size, type = 'button', className, as: Element = 'button', ...rest } = props;
    useTheme();
    return (React__default.createElement(Element, { ref: ref, className: cx('iui-button', className), "data-iui-variant": styleType !== 'default' ? styleType : undefined, "data-iui-size": size, "data-iui-active": isActive, type: type, ...rest },
        React__default.createElement("span", { className: 'iui-button-icon', "aria-hidden": true }, children)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Split button component with a DropdownMenu.
 *
 * The delegated props and forwarded ref are passed onto the primary button.
 * It also supports using the `as` prop to change which element is rendered.
 *
 * @example
 * const menuItems = (close: () => void) => [
 *   <MenuItem key={1} onClick={onClick(1, close)}>Item #1</MenuItem>,
 *   <MenuItem key={2} onClick={onClick(2, close)}>Item #2</MenuItem>,
 * ];
 * <SplitButton onClick={onClick} menuItems={menuItems}>Default</SplitButton>
 * <SplitButton onClick={onClick} menuItems={menuItems} styleType='high-visibility'>High visibility</SplitButton>
 */
const SplitButton = React__default.forwardRef((props, forwardedRef) => {
    const { onClick, menuItems, className, menuPlacement = 'bottom-end', styleType = 'default', size, children, style, title, ...rest } = props;
    useTheme();
    const [isMenuOpen, setIsMenuOpen] = React__default.useState(false);
    const [menuWidth, setMenuWidth] = React__default.useState(0);
    const ref = React__default.useRef(null);
    React__default.useEffect(() => {
        if (ref.current) {
            setMenuWidth(ref.current.offsetWidth);
        }
    }, [children, size]);
    return (React__default.createElement("span", { className: cx(className, 'iui-button-split', {
            'iui-disabled': props.disabled,
        }), style: style, title: title, ref: ref },
        React__default.createElement(Button, { styleType: styleType, size: size, onClick: onClick, ref: forwardedRef, ...rest }, children),
        React__default.createElement(DropdownMenu, { placement: menuPlacement, menuItems: menuItems, style: { minWidth: menuWidth }, onShow: React__default.useCallback(() => setIsMenuOpen(true), []), onHide: React__default.useCallback(() => setIsMenuOpen(false), []) },
            React__default.createElement(IconButton, { styleType: styleType, size: size, disabled: props.disabled }, isMenuOpen ? React__default.createElement(SvgCaretUpSmall, null) : React__default.createElement(SvgCaretDownSmall, null)))));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Group buttons together for common actions.
 * Handles responsive overflow when the `overflowButton` prop is specified.
 *
 * @example
 * <ButtonGroup>
 *   <IconButton>
 *     <SvgAdd />
 *   </IconButton>
 *   <IconButton>
 *     <SvgEdit />
 *   </IconButton>
 * </ButtonGroup>
 *
 * @example
 * const buttons = [...Array(10)].map((_, index) => <IconButton><SvgPlaceholder /></IconButton>);
 * <ButtonGroup
 *   overflowButton={(overflowStart) => <DropdownMenu menuItems={(close) =>
 *     [...Array(buttons.length - overflowStart + 1)].map((_, index) => (
 *       <MenuItem icon={<SvgPlaceholder />} onClick={close}>Button #{overflowStart + index}</MenuItem>
 *     ))
 *   }>
 *     <IconButton><SvgMore /></IconButton>
 *   </DropdownMenu>}
 * >
 *   {buttons}
 * </ButtonGroup>
 */
const ButtonGroup = React__default.forwardRef((props, ref) => {
    const { children, className, overflowButton, overflowPlacement = 'end', orientation = 'horizontal', ...rest } = props;
    const items = React__default.useMemo(() => { var _a; return (_a = React__default.Children.map(children, (child) => React__default.createElement("div", null, child))) !== null && _a !== void 0 ? _a : []; }, [children]);
    useTheme();
    const [overflowRef, visibleCount] = useOverflow(items, !overflowButton, orientation);
    const refs = useMergedRefs(overflowRef, ref);
    return (React__default.createElement("div", { className: cx({
            'iui-button-group': orientation === 'horizontal',
            'iui-button-group-vertical': orientation === 'vertical',
            'iui-button-group-overflow-x': !!overflowButton && orientation === 'horizontal',
        }, className), "aria-orientation": orientation, ref: refs, ...rest },
        React__default.createElement(React__default.Fragment, null,
            visibleCount < items.length &&
                overflowButton &&
                overflowPlacement === 'start' && (React__default.createElement("div", null, overflowButton(visibleCount))),
            visibleCount < items.length
                ? items.slice(0, Math.max(0, visibleCount - 1))
                : items,
            visibleCount < items.length &&
                overflowButton &&
                overflowPlacement === 'end' && (React__default.createElement("div", null, overflowButton(visibleCount))))));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const CarouselContext = React__default.createContext(undefined);

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * `CarouselSlider` is the scrollable list that should consist of `CarouselSlide` components.
 */
const CarouselSlider = React__default.forwardRef((props, ref) => {
    const { children, className, ...rest } = props;
    const context = React__default.useContext(CarouselContext);
    if (!context) {
        throw new Error('CarouselSlider must be used within Carousel');
    }
    const { setSlideCount, idPrefix, scrollToSlide, isManuallyUpdating, } = context;
    const items = React__default.useMemo(() => {
        var _a;
        return (_a = React__default.Children.map(children, (child, index) => React__default.isValidElement(child)
            ? React__default.cloneElement(child, {
                id: `${idPrefix}--slide-${index}`,
                index,
            })
            : child)) !== null && _a !== void 0 ? _a : [];
    }, [children, idPrefix]);
    React__default.useLayoutEffect(() => {
        setSlideCount(items.length);
    }, [items.length, setSlideCount]);
    const sliderRef = React__default.useRef(null);
    const refs = useMergedRefs(sliderRef, ref);
    scrollToSlide.current = (slideIndex, { instant } = {}) => {
        var _a, _b, _c;
        isManuallyUpdating.current = true; // start manual update
        const slideToShow = (_a = sliderRef.current) === null || _a === void 0 ? void 0 : _a.children.item(slideIndex);
        if (!sliderRef.current || !slideToShow) {
            return;
        }
        const motionOk = (_c = (_b = getWindow()) === null || _b === void 0 ? void 0 : _b.matchMedia('(prefers-reduced-motion: no-preference)')) === null || _c === void 0 ? void 0 : _c.matches;
        sliderRef.current.scrollTo({
            left: slideToShow.offsetLeft - sliderRef.current.offsetLeft,
            behavior: (instant || !motionOk ? 'instant' : 'smooth'), // scrollTo accepts 'instant' but ScrollBehavior type is wrong
        });
    };
    const scrollTimeout = React__default.useRef();
    // reset isManuallyUpdating.current to false after the last scroll event
    const handleOnScroll = React__default.useCallback(() => {
        var _a, _b;
        if (scrollTimeout.current) {
            (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.clearTimeout(scrollTimeout.current);
        }
        scrollTimeout.current = (_b = getWindow()) === null || _b === void 0 ? void 0 : _b.setTimeout(() => {
            isManuallyUpdating.current = false;
        }, 100);
    }, [isManuallyUpdating]);
    return (React__default.createElement("ol", { "aria-live": 'polite', className: cx('iui-carousel-slider', className), ref: refs, onScroll: handleOnScroll, ...rest }, items));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * `CarouselSlide` is used for the actual slide content. The content can be specified through `children`.
 *
 * It is recommended that the slide content bring its own dimensions (esp. height) and that
 * the dimensions should be the same for all slides.
 */
const CarouselSlide = React__default.forwardRef((props, ref) => {
    const { index, className, children, ...rest } = props;
    const context = React__default.useContext(CarouselContext);
    if (!context || index == null) {
        throw new Error('CarouselSlide must be used within Carousel');
    }
    const { isManuallyUpdating, setCurrentIndex } = context;
    const updateActiveIndexOnScroll = React__default.useCallback(() => {
        // only update index if scroll was triggered by browser
        if (!isManuallyUpdating.current) {
            setCurrentIndex(index);
        }
    }, [index, isManuallyUpdating, setCurrentIndex]);
    const intersectionRef = useIntersection(updateActiveIndexOnScroll, { threshold: 0.5 }, false);
    const refs = useMergedRefs(intersectionRef, ref);
    return (React__default.createElement("li", { className: cx('iui-carousel-slider-item', className), role: 'tabpanel', "aria-roledescription": 'slide', ref: refs, ...rest }, children));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * `CarouselDot` is the actual "dot" component used to activate a slide on clicking.
 * It should be used as a child of `CarouselDotsList`.
 */
const CarouselDot = React__default.forwardRef((props, ref) => {
    const { isActive, isSmaller, isSmall, className, ...rest } = props;
    return (React__default.createElement("button", { type: 'button', role: 'tab', tabIndex: -1, className: cx('iui-carousel-navigation-dot', {
            'iui-active': isActive,
            'iui-first': isSmaller,
            'iui-second': isSmall,
        }, className), "aria-selected": isActive, ref: ref, ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * The `CarouselDots` component shows a list of `CarouselDot` components which can be used to
 * choose a specific slide. If used as a descendant of `Carousel`, then this component does not need
 * any props or `children`.
 *
 * The props can be specified if this component is being used outside `Carousel`. `children` can be specified
 * to override the individual dots that are shown.
 *
 * @example
 * <Carousel>
 *   // ...
 *   <Carousel.Dots />
 * </Carousel>
 *
 * @example
 * <Carousel.Dots
 *   length={10}
 *   maxCount={3}
 *   currentIndex={current}
 *   onSlideChange={(i) => setCurrent(i)}
 * />
 */
const CarouselDotsList = React__default.forwardRef((props, ref) => {
    var _a, _b, _c;
    const { currentIndex: userCurrentIndex, length, className, onSlideChange, children, ...rest } = props;
    useTheme();
    const context = React__default.useContext(CarouselContext);
    const slideCount = (_a = length !== null && length !== void 0 ? length : context === null || context === void 0 ? void 0 : context.slideCount) !== null && _a !== void 0 ? _a : React__default.Children.count(children);
    const currentIndex = (_b = userCurrentIndex !== null && userCurrentIndex !== void 0 ? userCurrentIndex : context === null || context === void 0 ? void 0 : context.currentIndex) !== null && _b !== void 0 ? _b : 0;
    const idPrefix = (_c = props.id) !== null && _c !== void 0 ? _c : context === null || context === void 0 ? void 0 : context.idPrefix;
    const handleSlideChange = React__default.useCallback((index) => {
        if (context) {
            context.setCurrentIndex(index);
            context.scrollToSlide.current(index);
        }
        onSlideChange === null || onSlideChange === void 0 ? void 0 : onSlideChange(index);
    }, [context, onSlideChange]);
    const justMounted = React__default.useRef(true);
    const [visibleCount, setVisibleCount] = React__default.useState(slideCount);
    const listRef = React__default.useRef(null);
    const [width, setWidth] = React__default.useState();
    const [resizeRef, resizeObserver] = useResizeObserver(({ width }) => {
        if (!listRef.current) {
            return;
        }
        setWidth(width);
        const dotWidth = listRef.current.children[0].offsetWidth;
        setVisibleCount(Math.floor(width / dotWidth));
    });
    React__default.useEffect(() => resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect(), [resizeObserver]);
    const refs = useMergedRefs(ref, resizeRef, listRef);
    const firstVisibleDotIndex = React__default.useMemo(() => getBoundedValue(currentIndex - Math.ceil(visibleCount / 2) + 1, 0, slideCount - visibleCount), [currentIndex, slideCount, visibleCount]);
    const lastVisibleDotIndex = React__default.useMemo(() => getBoundedValue(currentIndex + Math.floor(visibleCount / 2), visibleCount - 1, slideCount - 1), [currentIndex, slideCount, visibleCount]);
    const dots = React__default.useMemo(() => {
        return Array(slideCount)
            .fill(null)
            .map((_, index) => {
            const isFirstSmallDot = (index === firstVisibleDotIndex && index !== 0) ||
                (index === lastVisibleDotIndex && index !== slideCount - 1);
            const isSecondSmallDot = (index === firstVisibleDotIndex + 1 && index !== 1) ||
                (index === lastVisibleDotIndex - 1 && index !== slideCount - 2);
            const isClipped = index < firstVisibleDotIndex || index > lastVisibleDotIndex;
            return (React__default.createElement(CarouselDot, { key: index, "aria-label": `Slide ${index}`, isActive: index === currentIndex, onClick: () => handleSlideChange(index), isSmall: isSecondSmallDot, isSmaller: isFirstSmallDot || isClipped, id: idPrefix && `${idPrefix}--dot-${index}`, "aria-controls": idPrefix && `${idPrefix}--slide-${index}` }));
        });
    }, [
        slideCount,
        firstVisibleDotIndex,
        lastVisibleDotIndex,
        currentIndex,
        idPrefix,
        handleSlideChange,
    ]);
    React__default.useEffect(() => {
        var _a, _b, _c;
        const firstDot = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.children[firstVisibleDotIndex];
        if (!listRef.current || !firstDot) {
            return;
        }
        const motionOk = (_c = (_b = getWindow()) === null || _b === void 0 ? void 0 : _b.matchMedia('(prefers-reduced-motion: no-preference)')) === null || _c === void 0 ? void 0 : _c.matches;
        listRef.current.scrollTo({
            left: firstDot.offsetLeft - listRef.current.offsetLeft,
            behavior: motionOk && !justMounted.current ? 'smooth' : 'auto',
        });
        if (justMounted.current) {
            justMounted.current = false;
        }
    }, [currentIndex, firstVisibleDotIndex, slideCount, visibleCount, width]);
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement("div", { className: cx('iui-carousel-navigation-dots', className), role: 'tablist', "aria-label": 'Slides', ref: refs, ...rest }, children !== null && children !== void 0 ? children : dots)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/** Button for switching to previous slide */
const PreviousButton = React__default.forwardRef((props, ref) => {
    const context = React__default.useContext(CarouselContext);
    if (!context) {
        throw new Error('CarouselNavigation should be used inside Carousel');
    }
    const { slideCount, currentIndex, setCurrentIndex, keysPressed, scrollToSlide, } = context;
    return (React__default.createElement(IconButton, { styleType: 'borderless', size: 'small', tabIndex: -1, "data-pressed": keysPressed['ArrowLeft'] || undefined, ref: ref, ...props, onClick: (e) => {
            var _a;
            const prevIndex = (slideCount + currentIndex - 1) % slideCount;
            setCurrentIndex(prevIndex);
            scrollToSlide.current(prevIndex, { instant: e.detail > 3 });
            (_a = props === null || props === void 0 ? void 0 : props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);
        } },
        React__default.createElement(SvgChevronLeft, null)));
});
/** Button for switching to next slide */
const NextButton = React__default.forwardRef((props, ref) => {
    const context = React__default.useContext(CarouselContext);
    if (!context) {
        throw new Error('CarouselNavigation should be used inside Carousel');
    }
    const { slideCount, currentIndex, setCurrentIndex, keysPressed, scrollToSlide, } = context;
    return (React__default.createElement(IconButton, { styleType: 'borderless', size: 'small', tabIndex: -1, "data-pressed": keysPressed['ArrowRight'] || undefined, ref: ref, ...props, onClick: (e) => {
            var _a;
            const nextIndex = (slideCount + currentIndex + 1) % slideCount;
            setCurrentIndex(nextIndex);
            scrollToSlide.current(nextIndex, { instant: e.detail > 3 });
            (_a = props === null || props === void 0 ? void 0 : props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);
        } },
        React__default.createElement(SvgChevronRight, null)));
});
/**
 * The `CarouselNavigation` component by default consists of the `PreviousButton` and `NextButton`
 * shown on the left and right, and the `CarouselDotsList` component shown in the middle.
 *
 * `children` can be specified to override what is shown in this navigation section.
 */
const CarouselNavigation = Object.assign(React__default.forwardRef((props, ref) => {
    const { className, children, ...rest } = props;
    return (React__default.createElement("nav", { className: cx('iui-carousel-navigation', className), ref: ref, ...rest }, children !== null && children !== void 0 ? children : (React__default.createElement(React__default.Fragment, null,
        React__default.createElement("div", { className: 'iui-carousel-navigation-left' },
            React__default.createElement(PreviousButton, null)),
        React__default.createElement(CarouselDotsList, null),
        React__default.createElement("div", { className: 'iui-carousel-navigation-right' },
            React__default.createElement(NextButton, null))))));
}), { PreviousButton, NextButton });

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * The Carousel component consists of a set of slides, normally displayed one at a time. A navigation section is
 * located below the slides, consisting of "dots" and "previous"/"next" buttons, used for changing slides.
 *
 * The currently shown slide can also be changed using the left/right arrow keys or by dragging on a touch device.
 *
 * This component uses a composition approach so it should be used with the provided subcomponents.
 *
 * @example
 * <Carousel>
 *   <Carousel.Slider>
 *     <Carousel.Slide>...</Carousel.Slide>
 *     <Carousel.Slide>...</Carousel.Slide>
 *     <Carousel.Slide>...</Carousel.Slide>
 *   </Carousel.Slider>
 *   <Carousel.Navigation />
 * </Carousel>
 */
const Carousel = Object.assign(React__default.forwardRef((props, ref) => {
    const { activeSlideIndex: userActiveIndex = 0, onSlideChange, className, children, ...rest } = props;
    // Generate a stateful random id if not specified
    const [id] = React__default.useState(() => { var _a; return (_a = props.id) !== null && _a !== void 0 ? _a : `iui-carousel-${getRandomValue(10)}`; });
    useTheme();
    const isManuallyUpdating = React__default.useRef(false);
    const carouselRef = React__default.useRef(null);
    const refs = useMergedRefs(carouselRef, ref);
    const [currentIndex, setCurrentIndex] = React__default.useState(userActiveIndex);
    const scrollToSlide = React__default.useRef(() => { }); // stub function populated in CarouselSlider
    const justMounted = React__default.useRef(true);
    React__default.useEffect(() => {
        var _a;
        setCurrentIndex(userActiveIndex);
        scrollToSlide.current(userActiveIndex, {
            instant: justMounted.current,
        });
        // re-focus the carousel for keyboard nav, but not on first mount
        // because it shows outline and might interfere with other components
        if (!justMounted.current) {
            (_a = carouselRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });
        }
        justMounted.current = false;
    }, [userActiveIndex]);
    const [slideCount, setSlideCount] = React__default.useState(0);
    const [keysPressed, setKeysPressed] = React__default.useState({});
    const handleKeyDown = (event) => {
        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {
            return;
        }
        if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {
            setKeysPressed((old) => ({ ...old, [event.key]: true }));
        }
    };
    const handleKeyUp = (event) => {
        switch (event.key) {
            case 'ArrowLeft': {
                setKeysPressed((old) => ({ ...old, ArrowLeft: false }));
                const prevIndex = (slideCount + currentIndex - 1) % slideCount;
                scrollToSlide.current(prevIndex);
                setCurrentIndex(prevIndex);
                break;
            }
            case 'ArrowRight': {
                setKeysPressed((old) => ({ ...old, ArrowRight: false }));
                const nextIndex = (slideCount + currentIndex + 1) % slideCount;
                scrollToSlide.current(nextIndex);
                setCurrentIndex(nextIndex);
                break;
            }
        }
    };
    const userOnSlideChange = React__default.useRef(onSlideChange);
    React__default.useEffect(() => {
        var _a;
        (_a = userOnSlideChange.current) === null || _a === void 0 ? void 0 : _a.call(userOnSlideChange, currentIndex);
    }, [currentIndex]);
    return (React__default.createElement("section", { "aria-roledescription": 'carousel', tabIndex: 0, onKeyDown: handleKeyDown, onKeyUp: handleKeyUp, ref: refs, className: cx('iui-carousel', className), ...rest, id: id },
        React__default.createElement(CarouselContext.Provider, { value: {
                currentIndex,
                setCurrentIndex,
                slideCount,
                setSlideCount,
                keysPressed,
                idPrefix: id,
                isManuallyUpdating,
                scrollToSlide,
            } }, children)));
}), {
    Slider: CarouselSlider,
    Slide: CarouselSlide,
    Navigation: CarouselNavigation,
    DotsList: CarouselDotsList,
    Dot: CarouselDot,
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Shows progress on a linear bar
 * @example
 * Determinate
 * <ProgressLinear value={25}/>
 * Indeterminate
 * <ProgressLinear indeterminate={true}/>
 * Labeled - Center
 * <ProgressLinear value={50} labels={['Centered Label']} />
 * Labeled - Left & Right
 * <ProgressLinear value={50} labels={['Loading...', '50%']} />
 * Positive / Negative.
 * <ProgressLinear status='positive' labels={['Upload done!', <SvgStatusSuccessHollow />]} />
 * <ProgressLinear status='negative' />
 */
const ProgressLinear = (props) => {
    const { value = 0, indeterminate = false, labels = [], isAnimated = false, status, className, style, ...rest } = props;
    useTheme();
    const boundedValue = Math.min(100, Math.max(0, value));
    return (React__default.createElement("div", { className: cx('iui-progress-indicator-linear', {
            [`iui-${status}`]: !!status,
        }, className), style: style, ...rest },
        React__default.createElement("div", { className: 'iui-track' },
            React__default.createElement("div", { className: cx('iui-fill', {
                    'iui-determinate': !indeterminate && isAnimated,
                    'iui-indeterminate': indeterminate,
                }), style: { width: indeterminate ? '100%' : `${boundedValue}%` } })),
        labels.length > 0 && (React__default.createElement("div", { className: 'iui-label' }, labels.map((label, index) => (React__default.createElement("span", { key: index }, label)))))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Circular Progress Indicator
 * @example
 * Basic
 * <ProgressRadial value={50} />
 * Indeterminate
 * <ProgressRadial indeterminate />
 * Positive / Negative
 * <ProgressRadial status='positive' />
 * <ProgressRadial status='negative' />
 * Centered Content
 * <ProgressRadial value={63}>63</ProgressRadial>
 * Small
 * <ProgressRadial size={'small'} indeterminate/>
 */
const ProgressRadial = (props) => {
    const { value = 0, indeterminate = false, status, children, size = '', className, style, ...rest } = props;
    useTheme();
    const statusMap = {
        negative: React__default.createElement(SvgImportantSmall, { "aria-hidden": true }),
        positive: React__default.createElement(SvgCheckmarkSmall, { "aria-hidden": true }),
    };
    const fillStyle = {
        strokeDashoffset: status === 'positive'
            ? 0
            : 88 -
                Math.min(88, Math.max(0, indeterminate ? 88 : (88 * value) / 100)),
    };
    return (React__default.createElement("div", { className: cx('iui-progress-indicator-radial', {
            'iui-determinate': !indeterminate,
            'iui-indeterminate': indeterminate,
            [`iui-${size}`]: !!size,
            [`iui-${status}`]: !!status,
        }, className), style: style, ...rest },
        React__default.createElement("svg", { className: 'iui-radial', viewBox: '0 0 32 32', "aria-hidden": 'true' },
            React__default.createElement("circle", { className: 'iui-track', cx: '16', cy: '16', r: '14' }),
            React__default.createElement("circle", { className: 'iui-fill', cx: '16', cy: '16', r: '14', style: fillStyle })),
        React__default.createElement(React__default.Fragment, null,
            status && (React__default.createElement("span", { className: 'iui-inner-content' }, statusMap[status])),
            !status && children && (React__default.createElement("span", { className: 'iui-inner-content' }, children)))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Simple input checkbox
 * @example
 * <Checkbox />
 * <Checkbox label='Basic Checkbox' />
 * <Checkbox label='Disabled Checkbox' disabled />
 * <Checkbox label='Checked' checked />
 * <Checkbox label='Positive Checkbox' status='positive' />
 * <Checkbox label='Warning Checkbox' status='warning' />
 * <Checkbox label='Negative Checkbox' status='negative' />
 * <Checkbox label='Visibility Checkbox' variant='eyeball' />
 */
const Checkbox = React__default.forwardRef((props, ref) => {
    const { className, disabled = false, indeterminate = false, label, status, variant = 'default', setFocus, isLoading = false, style, ...rest } = props;
    useTheme();
    const inputElementRef = React__default.useRef(null);
    const refs = useMergedRefs(inputElementRef, ref);
    React__default.useEffect(() => {
        if (inputElementRef.current && setFocus) {
            inputElementRef.current.focus();
        }
    }, [setFocus]);
    React__default.useEffect(() => {
        if (inputElementRef.current) {
            inputElementRef.current.indeterminate = indeterminate;
            inputElementRef.current.checked = indeterminate
                ? false
                : inputElementRef.current.checked;
        }
    });
    const checkbox = (React__default.createElement(React__default.Fragment, null,
        React__default.createElement("input", { className: cx('iui-checkbox', {
                'iui-checkbox-visibility': variant === 'eyeball',
                'iui-loading': isLoading,
            }, className && { [className]: !label }), style: !label ? style : undefined, disabled: disabled || isLoading, type: 'checkbox', ref: refs, ...rest }),
        isLoading && React__default.createElement(ProgressRadial, { size: 'x-small', indeterminate: true })));
    return !label ? (checkbox) : (React__default.createElement("label", { className: cx('iui-checkbox-wrapper', {
            'iui-disabled': disabled,
            [`iui-${status}`]: !!status,
            'iui-loading': isLoading,
        }, className), style: style },
        checkbox,
        label && React__default.createElement("span", { className: 'iui-checkbox-label' }, label)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const ColorPickerContext = React__default.createContext(undefined);
const useColorPickerContext = () => {
    const context = React__default.useContext(ColorPickerContext);
    if (context == undefined) {
        throw new Error('useColorPickerContext must be used within a ColorPickerContext.Provider');
    }
    return context;
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const getColorValue = (color) => {
    if (color instanceof ColorValue) {
        return color;
    }
    return ColorValue.create(color);
};
/**
 * ColorPicker to display color builder options, color inputs, and a palette of ColorSwatches.
 * @example
 * <ColorPicker onChangeComplete={() => {}} selectedColor={activeColor}>
 *   <ColorPalette colors={['#FFFFFF', '#5A6973']} />
 * </ColorPicker>
 * @example
 * <ColorPicker onChangeComplete={() => {}} selectedColor={activeColor}>
 *   <ColorBuilder />
 *   <ColorInputPanel defaultColorFormat='hsl' />
 *   <ColorPalette label='Saved colors' colors={['#FFFFFF', '#5A6973']} />
 * </ColorPicker>
 */
const ColorPicker = (props) => {
    const { children, className, selectedColor, onChange, onChangeComplete, setFocus = false, showAlpha = false, ...rest } = props;
    useTheme();
    const ref = React__default.useRef(null);
    // set focus on the first tabbable element
    React__default.useEffect(() => {
        if (ref.current && setFocus) {
            const tabbableElements = getTabbableElements(ref.current);
            tabbableElements[0].focus();
        }
    }, [setFocus]);
    const inColor = React__default.useMemo(() => getColorValue(selectedColor), [
        selectedColor,
    ]);
    const activeColorTbgr = React__default.useRef(inColor.toTbgr());
    const [activeColor, setActiveColor] = React__default.useState(inColor); // Color of colorDot or active ColorSwatch
    React__default.useEffect(() => {
        setActiveColor(inColor);
    }, [inColor]);
    const [hsvColor, setHsvColor] = React__default.useState(() => activeColor.toHsvColor());
    // The following code is used to preserve the Hue after initial mount. If the current HSV value produces the same rgb value
    // as the selectedColor prop then leave the HSV color unchanged. This prevents the jumping of HUE as the s/v values are changed
    // by user moving the pointer.
    React__default.useEffect(() => {
        if (inColor.toTbgr() !== activeColorTbgr.current) {
            activeColorTbgr.current = inColor.toTbgr();
            setHsvColor(inColor.toHsvColor());
        }
    }, [inColor]);
    const applyHsvColorChange = React__default.useCallback((newColor, selectionChanged, newColorValue) => {
        // save the HSV values
        setHsvColor(newColor);
        const newActiveColor = newColorValue !== null && newColorValue !== void 0 ? newColorValue : ColorValue.create(newColor);
        // Only update selected color when dragging is done
        if (selectionChanged) {
            onChangeComplete === null || onChangeComplete === void 0 ? void 0 : onChangeComplete(newActiveColor);
        }
        else {
            onChange === null || onChange === void 0 ? void 0 : onChange(newActiveColor);
        }
        activeColorTbgr.current = newActiveColor.toTbgr();
        // this converts it to store in tbgr
        setActiveColor(newActiveColor);
    }, [onChange, onChangeComplete]);
    return (React__default.createElement("div", { className: cx('iui-color-picker', className), ref: ref, ...rest },
        React__default.createElement(ColorPickerContext.Provider, { value: {
                activeColor,
                setActiveColor,
                hsvColor,
                applyHsvColorChange,
                onChangeComplete,
                showAlpha,
            } }, children)));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
function shouldDisplaySegment(segmentIndex, mode) {
    if ('odd-segments' === mode && 0 === (segmentIndex + 1) % 2) {
        return true;
    }
    else if ('even-segments' === mode && 0 === segmentIndex % 2) {
        return true;
    }
    return false;
}
function generateSegments(values, min, max) {
    const segments = [];
    const newValues = [...values];
    newValues.sort((a, b) => a - b);
    if (0 === newValues.length ||
        newValues[0] < min ||
        newValues[newValues.length - 1] > max ||
        min === max) {
        return [];
    }
    let lastValue = min;
    for (let i = 0; i < newValues.length; i++) {
        segments.push({ left: lastValue, right: newValues[i] });
        lastValue = newValues[i];
    }
    segments.push({ left: lastValue, right: max });
    return segments;
}
/**
 * Track displays color segments above Rail. Which, if any, segments that are
 * colorized is based on `trackDisplayMode`.
 */
const Track = (props) => {
    const { trackDisplayMode, sliderMin, sliderMax, values, orientation } = props;
    const [segments, setSegments] = React__default.useState(() => generateSegments(values, sliderMin, sliderMax));
    React__default.useEffect(() => {
        setSegments(generateSegments(values, sliderMin, sliderMax));
    }, [values, sliderMin, sliderMax]);
    return (React__default.createElement(React__default.Fragment, null, 'none' !== trackDisplayMode &&
        segments.map((segment, index) => {
            const lowPercent = segment.left >= sliderMin && sliderMax !== sliderMin
                ? (100.0 * (segment.left - sliderMin)) / (sliderMax - sliderMin)
                : 0;
            const highPercent = segment.right >= sliderMin && sliderMax !== sliderMin
                ? 100.0 -
                    (100.0 * (segment.right - sliderMin)) / (sliderMax - sliderMin)
                : 100;
            return (React__default.createElement(React__default.Fragment, { key: index }, shouldDisplaySegment(index, trackDisplayMode) ? (React__default.createElement("div", { className: 'iui-slider-track', style: {
                    ...(orientation === 'horizontal'
                        ? {
                            left: `${lowPercent}%`,
                            right: `${highPercent}%`,
                        }
                        : {
                            top: `${highPercent}%`,
                            bottom: `${lowPercent}%`,
                        }),
                } })) : null));
        })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Basic tooltip component to display informative content when an element is hovered or focused.
 * Uses the {@link Popover} component, which is a wrapper around [tippy.js](https://atomiks.github.io/tippyjs).
 * @example
 * <Tooltip content='tooltip text' placement='top'><div>Hover here</div></Tooltip>
 * @example
 * const buttonRef = React.useRef();
 * ...
 * <Button ref={buttonRef} />
 * <Tooltip content='tooltip text' reference={buttonRef} />
 */
const Tooltip = (props) => {
    const { content, children, className, style, visible, ref, id, ...rest } = props;
    useTheme();
    return (React__default.createElement(Popover, { visible: visible, interactive: false, content: React__default.createElement("div", { className: cx('iui-tooltip', className), style: style, role: 'tooltip', id: id }, content), offset: [0, 4], ref: ref, ...rest }, children && React__default.cloneElement(children, { title: undefined })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Thumb is a local component used to show and modify the values maintained by the Slider.
 * Only one Thumb can be active at a time. A Thumb is made active when the user selects
 * it with pointer. Whenever a Thumb is active, focused, or hovered its tooltip is shown.
 */
const Thumb = (props) => {
    const { value, index, minVal, maxVal, step, sliderMin, sliderMax, isActive, onThumbActivated, onThumbValueChanged, tooltipProps, thumbProps, disabled, orientation, } = props;
    const thumbRef = React__default.useRef(null);
    const handleOnKeyboardEvent = React__default.useCallback((event, keyboardReleased) => {
        if (disabled || event.altKey) {
            return;
        }
        switch (event.key) {
            case 'ArrowLeft':
            case 'ArrowDown':
                onThumbValueChanged(index, Math.max(value - step, minVal), keyboardReleased);
                break;
            case 'ArrowRight':
            case 'ArrowUp':
                onThumbValueChanged(index, Math.min(value + step, maxVal), keyboardReleased);
                break;
            case 'Home':
                onThumbValueChanged(index, minVal, keyboardReleased);
                break;
            case 'End':
                onThumbValueChanged(index, maxVal, keyboardReleased);
                break;
            default:
                return;
        }
        event.preventDefault();
    }, [disabled, onThumbValueChanged, index, value, step, minVal, maxVal]);
    const handlePointerDownOnThumb = React__default.useCallback(() => {
        !disabled && onThumbActivated(index);
    }, [disabled, index, onThumbActivated]);
    const [hasFocus, setHasFocus] = React__default.useState(false);
    const [isHovered, setIsHovered] = React__default.useState(false);
    const adjustedValue = React__default.useMemo(() => {
        if (value < sliderMin) {
            return sliderMin;
        }
        if (value > sliderMax) {
            return sliderMax;
        }
        return value;
    }, [sliderMax, sliderMin, value]);
    const lowPercent = React__default.useMemo(() => {
        if (sliderMax === sliderMin) {
            return 0;
        }
        return (100.0 * (adjustedValue - sliderMin)) / (sliderMax - sliderMin);
    }, [adjustedValue, sliderMax, sliderMin]);
    const { style, className, ...rest } = thumbProps || {};
    return (React__default.createElement(Tooltip, { visible: isActive || hasFocus || isHovered, placement: 'top', ...tooltipProps },
        React__default.createElement("div", { ...rest, "data-index": index, ref: thumbRef, style: {
                ...style,
                ...(orientation === 'horizontal'
                    ? { left: `${lowPercent}%` }
                    : { bottom: `${lowPercent}%` }),
            }, className: cx('iui-slider-thumb', { 'iui-active': isActive }, className), role: 'slider', tabIndex: disabled ? undefined : 0, "aria-valuemin": minVal, "aria-valuenow": value, "aria-valuemax": maxVal, "aria-disabled": disabled, onPointerDown: handlePointerDownOnThumb, onKeyDown: (event) => handleOnKeyboardEvent(event, false), onKeyUp: (event) => handleOnKeyboardEvent(event, true), onFocus: () => setHasFocus(true), onBlur: () => setHasFocus(false), onMouseEnter: () => setIsHovered(true), onMouseLeave: () => setIsHovered(false) })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const getPercentageOfRectangle = (rect, pointerX, pointerY, orientation) => {
    if (orientation === 'horizontal') {
        const position = getBoundedValue(pointerX, rect.left, rect.right);
        return (position - rect.left) / rect.width;
    }
    const position = getBoundedValue(pointerY, rect.top, rect.bottom);
    return (rect.bottom - position) / rect.height;
};
const getClosestValueIndex = (values, pointerValue) => {
    if (1 === values.length) {
        return 0;
    }
    const distances = values.map((value) => Math.abs(value - pointerValue));
    const smallest = Math.min(...distances);
    return distances.indexOf(smallest);
};
const getDefaultTrackDisplay = (trackDisplayMode, values) => {
    if ('auto' !== trackDisplayMode) {
        return trackDisplayMode;
    }
    return values.length % 2 ? 'even-segments' : 'odd-segments';
};
const roundValueToClosestStep = (value, step, min) => {
    return Math.round((value - min) / step) * step + min;
};
const formatNumberValue = (value, step, numDecimals) => {
    if (Number.isInteger(step)) {
        return value.toFixed(0);
    }
    return value.toFixed(numDecimals);
};
/**
 * Focus specified thumb on Slider control
 */
const focusThumb = (sliderContainer, activeIndex) => {
    var _a;
    const doc = sliderContainer.ownerDocument;
    if (!sliderContainer.contains(doc.activeElement) ||
        Number((_a = doc.activeElement) === null || _a === void 0 ? void 0 : _a.getAttribute('data-index')) !== activeIndex) {
        const thumbToFocus = sliderContainer.querySelector(`[data-index="${activeIndex}"]`);
        thumbToFocus && thumbToFocus.focus();
    }
};
/**
 * Slider component that display Thumbs for each value specified along a Rail.
 * @example
 * <Slider values={[10]} min={0} max={60} disabled />
 * <Slider values={[10, 20]} min={0} max={50} step={2} />
 * <Slider values={[10, 20, 30, 40]} min={0} max={60} setFocus
 *   thumbMode='allow-crossing' />
 */
const Slider = React__default.forwardRef((props, ref) => {
    var _a, _b;
    const { min = 0, max = 100, values, step = 1, setFocus = false, tooltipProps, disabled = false, tickLabels, minLabel, maxLabel, trackDisplayMode = 'auto', thumbMode = 'inhibit-crossing', onChange, onUpdate, thumbProps, className, railContainerProps, orientation = 'horizontal', ...rest } = props;
    const [currentValues, setCurrentValues] = React__default.useState(values);
    React__default.useEffect(() => {
        setCurrentValues(values);
    }, [values]);
    const [minValueLabel, setMinValueLabel] = React__default.useState(() => minLabel !== null && minLabel !== void 0 ? minLabel : min.toString());
    React__default.useEffect(() => {
        setMinValueLabel(minLabel !== null && minLabel !== void 0 ? minLabel : min.toString());
    }, [minLabel, min]);
    const [maxValueLabel, setMaxValueLabel] = React__default.useState(() => maxLabel !== null && maxLabel !== void 0 ? maxLabel : max.toString());
    React__default.useEffect(() => {
        setMaxValueLabel(maxLabel !== null && maxLabel !== void 0 ? maxLabel : max.toString());
    }, [maxLabel, max]);
    const [trackDisplay, setTrackDisplay] = React__default.useState(() => getDefaultTrackDisplay(trackDisplayMode, currentValues));
    React__default.useEffect(() => {
        setTrackDisplay(getDefaultTrackDisplay(trackDisplayMode, currentValues));
    }, [trackDisplayMode, currentValues]);
    useTheme();
    const containerRef = React__default.useRef(null);
    React__default.useEffect(() => {
        if (containerRef.current && setFocus) {
            focusThumb(containerRef.current, 0);
        }
    }, [setFocus]);
    const getNumDecimalPlaces = React__default.useMemo(() => {
        const stepString = step.toString();
        const decimalIndex = stepString.indexOf('.');
        return stepString.length - (decimalIndex + 1);
    }, [step]);
    const getAllowableThumbRange = React__default.useCallback((index) => {
        if (thumbMode === 'inhibit-crossing') {
            const minVal = index === 0 ? min : currentValues[index - 1] + step;
            const maxVal = index < currentValues.length - 1
                ? currentValues[index + 1] - step
                : max;
            return [minVal, maxVal];
        }
        return [min, max];
    }, [max, min, step, thumbMode, currentValues]);
    const [activeThumbIndex, setActiveThumbIndex] = React__default.useState(undefined);
    const updateThumbValue = React__default.useCallback((event, callbackType) => {
        if (containerRef.current && undefined !== activeThumbIndex) {
            const percent = getPercentageOfRectangle(containerRef.current.getBoundingClientRect(), event.clientX, event.clientY, orientation);
            let pointerValue = min + (max - min) * percent;
            pointerValue = roundValueToClosestStep(pointerValue, step, min);
            const [minVal, maxVal] = getAllowableThumbRange(activeThumbIndex);
            pointerValue = getBoundedValue(pointerValue, minVal, maxVal);
            if (pointerValue !== currentValues[activeThumbIndex]) {
                const newValues = [...currentValues];
                newValues[activeThumbIndex] = pointerValue;
                setCurrentValues(newValues);
                'onChange' === callbackType
                    ? onChange === null || onChange === void 0 ? void 0 : onChange(newValues)
                    : onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(newValues);
            }
            else if ('onChange' === callbackType) {
                onChange === null || onChange === void 0 ? void 0 : onChange(currentValues);
            }
        }
    }, [
        activeThumbIndex,
        min,
        max,
        step,
        getAllowableThumbRange,
        currentValues,
        onUpdate,
        onChange,
        orientation,
    ]);
    const handlePointerMove = React__default.useCallback((event) => {
        if (activeThumbIndex === undefined) {
            return;
        }
        event.preventDefault();
        event.stopPropagation();
        updateThumbValue(event, 'onUpdate');
    }, [activeThumbIndex, updateThumbValue]);
    // function called by Thumb keyboard processing
    const onThumbValueChanged = React__default.useCallback((index, value, keyboardReleased) => {
        if (currentValues[index] === value && !keyboardReleased) {
            return;
        }
        if (keyboardReleased) {
            onChange === null || onChange === void 0 ? void 0 : onChange(currentValues); // currentValues since key up should not change value but only stop continuous value selection
        }
        else {
            const newValues = [...currentValues]; // newValues since key down should change value
            newValues[index] = value;
            onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(newValues);
            setCurrentValues(newValues);
        }
    }, [currentValues, onUpdate, onChange]);
    const onThumbActivated = React__default.useCallback((index) => {
        setActiveThumbIndex(index);
    }, []);
    const handlePointerUp = React__default.useCallback((event) => {
        if (activeThumbIndex === undefined) {
            return;
        }
        updateThumbValue(event, 'onChange');
        setActiveThumbIndex(undefined);
        event.preventDefault();
        event.stopPropagation();
    }, [activeThumbIndex, updateThumbValue]);
    const handlePointerDownOnSlider = React__default.useCallback((event) => {
        if (containerRef.current) {
            const percent = getPercentageOfRectangle(containerRef.current.getBoundingClientRect(), event.clientX, event.clientY, orientation);
            let pointerValue = min + (max - min) * percent;
            pointerValue = roundValueToClosestStep(pointerValue, step, min);
            const closestValueIndex = getClosestValueIndex(currentValues, pointerValue);
            const [minVal, maxVal] = getAllowableThumbRange(closestValueIndex);
            pointerValue = getBoundedValue(pointerValue, minVal, maxVal);
            if (pointerValue === currentValues[closestValueIndex]) {
                return;
            }
            const newValues = [...currentValues];
            newValues[closestValueIndex] = pointerValue;
            setCurrentValues(newValues);
            onChange === null || onChange === void 0 ? void 0 : onChange(newValues);
            onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(newValues);
            focusThumb(containerRef.current, closestValueIndex);
            event.preventDefault();
            event.stopPropagation();
        }
    }, [
        min,
        max,
        step,
        currentValues,
        getAllowableThumbRange,
        onChange,
        onUpdate,
        orientation,
    ]);
    useEventListener('pointermove', handlePointerMove, (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument);
    useEventListener('pointerup', handlePointerUp, (_b = containerRef.current) === null || _b === void 0 ? void 0 : _b.ownerDocument);
    const tickMarkArea = React__default.useMemo(() => {
        if (!tickLabels) {
            return null;
        }
        if (Array.isArray(tickLabels)) {
            return (React__default.createElement("div", { className: 'iui-slider-ticks' }, tickLabels.map((label, index) => (React__default.createElement("span", { key: index, className: 'iui-slider-tick' }, label)))));
        }
        return tickLabels;
    }, [tickLabels]);
    const generateTooltipProps = React__default.useCallback((index, val) => {
        const outProps = tooltipProps
            ? tooltipProps(index, val, step)
            : {};
        return {
            ...outProps,
            content: outProps.content
                ? outProps.content
                : formatNumberValue(val, step, getNumDecimalPlaces),
        };
    }, [getNumDecimalPlaces, step, tooltipProps]);
    return (React__default.createElement("div", { ref: ref, className: cx('iui-slider-component-container', `iui-slider-${orientation}`, { 'iui-disabled': disabled }, className), ...rest },
        minValueLabel && (React__default.createElement("span", { className: 'iui-slider-min' }, minValueLabel)),
        React__default.createElement("div", { ref: containerRef, className: cx('iui-slider-container', {
                'iui-grabbing': undefined !== activeThumbIndex,
            }), onPointerDown: handlePointerDownOnSlider, ...railContainerProps },
            React__default.createElement("div", { className: 'iui-slider-rail' }),
            currentValues.map((thumbValue, index) => {
                var _a;
                const [minVal, maxVal] = getAllowableThumbRange(index);
                const thisThumbProps = thumbProps === null || thumbProps === void 0 ? void 0 : thumbProps(index);
                return (React__default.createElement(Thumb, { key: (_a = thisThumbProps === null || thisThumbProps === void 0 ? void 0 : thisThumbProps.id) !== null && _a !== void 0 ? _a : index, index: index, disabled: disabled, isActive: activeThumbIndex === index, onThumbActivated: onThumbActivated, onThumbValueChanged: onThumbValueChanged, minVal: minVal, maxVal: maxVal, value: thumbValue, tooltipProps: generateTooltipProps(index, thumbValue), thumbProps: thisThumbProps, step: step, sliderMin: min, sliderMax: max, orientation: orientation }));
            }),
            React__default.createElement(Track, { trackDisplayMode: trackDisplay, sliderMin: min, sliderMax: max, values: currentValues, orientation: orientation }),
            tickMarkArea),
        maxValueLabel && (React__default.createElement("span", { className: 'iui-slider-max' }, maxValueLabel))));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const getVerticalPercentageOfRectangle = (rect, pointer) => {
    const position = getBoundedValue(pointer, rect.top, rect.bottom);
    return ((position - rect.top) / rect.height) * 100;
};
const getHorizontalPercentageOfRectangle = (rect, pointer) => {
    const position = getBoundedValue(pointer, rect.left, rect.right);
    return ((position - rect.left) / rect.width) * 100;
};
/**
 * `ColorBuilder` consists of two parts:
 * a color canvas to adjust saturation and lightness values,
 * and a set of sliders to adjust hue and alpha values.
 */
const ColorBuilder = React__default.forwardRef((props, ref) => {
    var _a, _b, _c;
    const { className, ...rest } = props;
    const builderRef = React__default.useRef();
    const refs = useMergedRefs(builderRef, ref);
    useTheme();
    const { activeColor, hsvColor, onChangeComplete, applyHsvColorChange, showAlpha, } = useColorPickerContext();
    // Set values for slider
    const hueSliderColor = React__default.useMemo(() => ColorValue.create({ h: hsvColor.h, s: 100, v: 100 }), [hsvColor.h]);
    const sliderValue = React__default.useMemo(() => hsvColor.h, [hsvColor]);
    const alphaValue = React__default.useMemo(() => { var _a; return (showAlpha ? (_a = hsvColor.a) !== null && _a !== void 0 ? _a : 1 : 1); }, [
        hsvColor.a,
        showAlpha,
    ]);
    // Set values for color square and color dot
    const dotColorString = React__default.useMemo(() => activeColor.toHexString(), [
        activeColor,
    ]);
    const [colorDotActive, setColorDotActive] = React__default.useState(false);
    const hueColorString = hueSliderColor.toHexString();
    const squareTop = 100 - hsvColor.v;
    const squareLeft = hsvColor.s;
    // Update slider change
    const updateHueSlider = React__default.useCallback((huePercent, selectionChanged) => {
        const hue = Number(huePercent.toFixed(2));
        const newHsvColor = {
            h: hue,
            s: hsvColor.s,
            v: hsvColor.v,
            a: hsvColor.a,
        };
        applyHsvColorChange(newHsvColor, selectionChanged);
    }, [applyHsvColorChange, hsvColor]);
    // Update opacity slider change
    const updateOpacitySlider = React__default.useCallback((alphaPercent, selectionChanged) => {
        const alpha = Number(alphaPercent.toFixed(2));
        const newHsvColor = {
            h: hsvColor.h,
            s: hsvColor.s,
            v: hsvColor.v,
            a: alpha,
        };
        applyHsvColorChange(newHsvColor, selectionChanged);
    }, [applyHsvColorChange, hsvColor]);
    // Update Color field square change
    const squareRef = React__default.useRef(null);
    const colorDotRef = React__default.useRef(null);
    const updateColorDot = React__default.useCallback((x, y, selectionChanged) => {
        const newHsvColor = {
            h: hsvColor.h,
            s: x,
            v: 100 - y,
            a: hsvColor.a,
        };
        applyHsvColorChange(newHsvColor, selectionChanged);
    }, [applyHsvColorChange, hsvColor]);
    const updateSquareValue = React__default.useCallback((event, callbackType) => {
        if ((squareRef.current && colorDotActive) ||
            (squareRef.current && callbackType === 'onClick')) {
            const percentX = getHorizontalPercentageOfRectangle(squareRef.current.getBoundingClientRect(), event.clientX);
            const percentY = getVerticalPercentageOfRectangle(squareRef.current.getBoundingClientRect(), event.clientY);
            if (callbackType === 'onChange') {
                updateColorDot(percentX, percentY, true);
            }
            else {
                updateColorDot(percentX, percentY, false);
            }
        }
    }, [colorDotActive, updateColorDot]);
    const handleSquarePointerUp = React__default.useCallback((event) => {
        if (!colorDotActive) {
            return;
        }
        updateSquareValue(event, 'onChange');
        setColorDotActive(false);
        event.preventDefault();
        event.stopPropagation();
    }, [colorDotActive, updateSquareValue]);
    useEventListener('pointerup', handleSquarePointerUp, (_a = builderRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument);
    const handleSquarePointerMove = React__default.useCallback((event) => {
        if (!colorDotActive) {
            return;
        }
        event.preventDefault();
        event.stopPropagation();
        updateSquareValue(event, 'onUpdate');
    }, [colorDotActive, updateSquareValue]);
    useEventListener('pointermove', handleSquarePointerMove, (_b = builderRef.current) === null || _b === void 0 ? void 0 : _b.ownerDocument);
    const handleSquarePointerLeave = React__default.useCallback((event) => {
        if (!colorDotActive) {
            return;
        }
        updateSquareValue(event, 'onChange');
        setColorDotActive(false);
    }, [colorDotActive, updateSquareValue]);
    useEventListener('pointerleave', handleSquarePointerLeave, (_c = builderRef.current) === null || _c === void 0 ? void 0 : _c.ownerDocument);
    const keysPressed = React__default.useRef({}); // keep track of which keys are currently pressed
    // Arrow key navigation for color dot
    const handleColorDotKeyDown = (event) => {
        let x = squareLeft;
        let y = squareTop;
        keysPressed.current[event.key] = true;
        switch (event.key) {
            case 'ArrowDown': {
                y = Math.min(y + 1, 100);
                updateColorDot(x, y, false);
                break;
            }
            case 'ArrowUp': {
                y = Math.max(y - 1, 0);
                updateColorDot(x, y, false);
                break;
            }
            case 'ArrowLeft':
                x = Math.max(x - 1, 0);
                updateColorDot(x, y, false);
                break;
            case 'ArrowRight':
                x = Math.min(x + 1, 100);
                updateColorDot(x, y, false);
                break;
        }
    };
    const handleColorDotKeyUp = (event) => {
        keysPressed.current[event.key] = false;
        switch (event.key) {
            case 'ArrowUp':
            case 'ArrowDown':
            case 'ArrowLeft':
            case 'ArrowRight':
                if (keysPressed.current['ArrowUp'] ||
                    keysPressed.current['ArrowDown'] ||
                    keysPressed.current['ArrowLeft'] ||
                    keysPressed.current['ArrowRight']) {
                    return;
                }
                onChangeComplete === null || onChangeComplete === void 0 ? void 0 : onChangeComplete(ColorValue.create(hsvColor));
                break;
        }
    };
    return (React__default.createElement("div", { className: cx('iui-color-selection-wrapper', className), ref: refs, ...rest },
        React__default.createElement("div", { className: 'iui-color-field', style: {
                '--iui-color-field-hue': hueColorString,
                '--iui-color-picker-selected-color': dotColorString,
            }, ref: squareRef, onPointerDown: (event) => {
                var _a;
                event.preventDefault();
                updateSquareValue(event, 'onClick');
                setColorDotActive(true);
                (_a = colorDotRef.current) === null || _a === void 0 ? void 0 : _a.focus();
            } },
            React__default.createElement("div", { className: 'iui-color-dot', style: {
                    '--iui-color-dot-inset': `${squareTop.toString()}% auto auto ${squareLeft.toString()}%`,
                }, onPointerDown: () => {
                    var _a;
                    setColorDotActive(true);
                    (_a = colorDotRef.current) === null || _a === void 0 ? void 0 : _a.focus();
                }, onKeyDown: handleColorDotKeyDown, onKeyUp: handleColorDotKeyUp, tabIndex: 0, ref: colorDotRef })),
        React__default.createElement(Slider, { minLabel: '', maxLabel: '', values: [sliderValue], className: 'iui-hue-slider', trackDisplayMode: 'none', tooltipProps: () => ({ visible: false }), onChange: (values) => {
                updateHueSlider(values[0], true);
            }, onUpdate: (values) => {
                updateHueSlider(values[0], false);
            }, min: 0, max: 359 }),
        showAlpha && (React__default.createElement(Slider, { minLabel: '', maxLabel: '', values: [alphaValue], className: 'iui-opacity-slider', trackDisplayMode: 'none', tooltipProps: () => ({ visible: false }), onChange: (values) => {
                updateOpacitySlider(values[0], true);
            }, onUpdate: (values) => {
                updateOpacitySlider(values[0], false);
            }, min: 0, max: 1, step: 0.01, style: {
                '--iui-color-picker-selected-color': hueColorString,
            } }))));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Basic input component
 * @example
 * <Input setFocus />
 * <Input disabled />
 * <Input size='small' />
 */
const Input = React__default.forwardRef((props, ref) => {
    const { setFocus = false, size, className, ...rest } = props;
    useTheme();
    const inputRef = React__default.useRef(null);
    const refs = useMergedRefs(inputRef, ref);
    React__default.useEffect(() => {
        if (inputRef.current && setFocus) {
            inputRef.current.focus();
        }
    }, [setFocus]);
    return (React__default.createElement("input", { className: cx('iui-input', className), "data-iui-size": size, ref: refs, ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * `ColorInputPanel` shows input fields to enter precise color values in the specified format.
 * It also allows switching between the specified formats using a swap button.
 * @example
 * <ColorPicker>
 *   // ...
 *   <ColorInputPanel defaultColorFormat='hsl' />
 * </ColorPicker>
 */
const ColorInputPanel = React__default.forwardRef((props, ref) => {
    var _a, _b, _c, _d, _f, _g, _h, _j;
    const { defaultColorFormat, allowedColorFormats = ['hsl', 'rgb', 'hex'], className, ...rest } = props;
    useTheme();
    const inputsContainerRef = React__default.useRef(null);
    const { activeColor, applyHsvColorChange, hsvColor, showAlpha } = useColorPickerContext();
    const [currentFormat, setCurrentFormat] = React__default.useState(defaultColorFormat);
    React__default.useEffect(() => {
        setCurrentFormat(defaultColorFormat);
    }, [defaultColorFormat]);
    // need to use state since input may have parsing error
    const [input, setInput] = React__default.useState(['', '', '', '']);
    React__default.useEffect(() => {
        var _a, _b;
        if (currentFormat === 'hsl') {
            const hsl = activeColor.toHslColor();
            setInput([
                ColorValue.getFormattedColorNumber(hsvColor.h),
                ColorValue.getFormattedColorNumber(hsl.s),
                ColorValue.getFormattedColorNumber(hsl.l),
                ColorValue.getFormattedColorNumber((_a = hsl.a) !== null && _a !== void 0 ? _a : activeColor.getAlpha() / 255, 2),
            ]);
        }
        else if (currentFormat === 'rgb') {
            const rgb = activeColor.toRgbColor();
            setInput([
                rgb.r.toString(),
                rgb.g.toString(),
                rgb.b.toString(),
                ColorValue.getFormattedColorNumber((_b = rgb.a) !== null && _b !== void 0 ? _b : activeColor.getAlpha() / 255, 2),
            ]);
        }
        else {
            setInput([activeColor.toHexString(showAlpha)]);
            setValidHexInput(true);
        }
    }, [activeColor, hsvColor.h, currentFormat, showAlpha]);
    const [validHexInput, setValidHexInput] = React__default.useState(true);
    const swapColorFormat = React__default.useCallback(() => {
        var _a;
        const newFormat = (_a = allowedColorFormats[(allowedColorFormats.indexOf(currentFormat) + 1) %
            allowedColorFormats.length]) !== null && _a !== void 0 ? _a : allowedColorFormats[0];
        setCurrentFormat(newFormat);
    }, [currentFormat, allowedColorFormats]);
    const isFocusInside = (focused) => !!(focused &&
        inputsContainerRef.current &&
        inputsContainerRef.current.contains(focused));
    const handleColorInputChange = () => {
        let color;
        if (currentFormat === 'hex') {
            try {
                const value = input[0].replace(/ /g, '').toLowerCase(); // remove white space from input
                color = ColorValue.create(value);
                setValidHexInput(true);
                if (activeColor.toHexString(showAlpha).toLowerCase() === value) {
                    return;
                }
            }
            catch (_e) {
                setValidHexInput(false);
                return;
            }
        }
        if (currentFormat === 'hsl') {
            const [h, s, l, a] = input.map(Number);
            if (h < 0 ||
                h > 360 ||
                s < 0 ||
                s > 100 ||
                l < 0 ||
                l > 100 ||
                a < 0 ||
                a > 1) {
                return;
            }
            const hsl = activeColor.toHslColor();
            if (hsl.h === h && hsl.s === s && hsl.l === l && hsl.a === a) {
                return;
            }
            color = ColorValue.create({ h, s, l, a });
        }
        if (currentFormat === 'rgb') {
            const [r, g, b, a] = input.map(Number);
            if (r < 0 ||
                r > 255 ||
                g < 0 ||
                g > 255 ||
                b < 0 ||
                b > 255 ||
                a < 0 ||
                a > 1) {
                return;
            }
            const rgb = activeColor.toRgbColor();
            if (rgb.r === r && rgb.g === g && rgb.b === b && rgb.a === a) {
                return;
            }
            color = ColorValue.create({ r, g, b, a });
        }
        if (color) {
            applyHsvColorChange(color.toHsvColor(), true, color);
        }
    };
    const hexInputField = (React__default.createElement(InputContainer, { status: validHexInput ? undefined : 'negative' },
        React__default.createElement(Input, { size: 'small', maxLength: showAlpha ? 9 : 7, minLength: 1, placeholder: 'HEX', value: input[0], onChange: (event) => {
                const value = event.target.value.startsWith('#')
                    ? event.target.value
                    : `#${event.target.value}`;
                setInput([value]);
            }, onKeyDown: (event) => {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    handleColorInputChange();
                }
            }, onBlur: (event) => {
                event.preventDefault();
                handleColorInputChange();
            } })));
    const hslInputs = (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(InputContainer, { status: Number(input[0]) < 0 || Number(input[0]) > 360
                ? 'negative'
                : undefined },
            React__default.createElement(Input, { size: 'small', type: 'number', min: '0', max: '359', step: '.1', placeholder: 'H', value: (_a = input[0]) !== null && _a !== void 0 ? _a : '', onChange: (event) => {
                    setInput([event.target.value, input[1], input[2], input[3]]);
                }, onKeyDown: (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        handleColorInputChange();
                    }
                }, onBlur: (event) => {
                    event.preventDefault();
                    if (!isFocusInside(event.relatedTarget)) {
                        handleColorInputChange();
                    }
                } })),
        React__default.createElement(InputContainer, { status: Number(input[1]) < 0 || Number(input[1]) > 100
                ? 'negative'
                : undefined },
            React__default.createElement(Input, { size: 'small', type: 'number', min: '0', max: '100', step: '.1', placeholder: 'S', value: (_b = input[1]) !== null && _b !== void 0 ? _b : '', onChange: (event) => {
                    setInput([input[0], event.target.value, input[2], input[3]]);
                }, onKeyDown: (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        handleColorInputChange();
                    }
                }, onBlur: (event) => {
                    event.preventDefault();
                    if (!isFocusInside(event.relatedTarget)) {
                        handleColorInputChange();
                    }
                } })),
        React__default.createElement(InputContainer, { status: Number(input[2]) < 0 || Number(input[2]) > 100
                ? 'negative'
                : undefined },
            React__default.createElement(Input, { size: 'small', type: 'number', min: '0', max: '100', step: '.1', placeholder: 'L', value: (_c = input[2]) !== null && _c !== void 0 ? _c : '', onChange: (event) => {
                    setInput([input[0], input[1], event.target.value, input[3]]);
                }, onKeyDown: (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        handleColorInputChange();
                    }
                }, onBlur: (event) => {
                    event.preventDefault();
                    if (!isFocusInside(event.relatedTarget)) {
                        handleColorInputChange();
                    }
                } })),
        showAlpha && (React__default.createElement(InputContainer, { status: Number(input[3]) < 0 || Number(input[3]) > 1
                ? 'negative'
                : undefined },
            React__default.createElement(Input, { size: 'small', type: 'number', min: '0', max: '1', step: '.01', placeholder: 'A', value: (_d = input[3]) !== null && _d !== void 0 ? _d : '', onChange: (event) => {
                    setInput([input[0], input[1], input[2], event.target.value]);
                }, onKeyDown: (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        handleColorInputChange();
                    }
                }, onBlur: (event) => {
                    event.preventDefault();
                    if (!isFocusInside(event.relatedTarget)) {
                        handleColorInputChange();
                    }
                } })))));
    const rgbInputs = (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(InputContainer, { status: Number(input[0]) < 0 || Number(input[0]) > 255
                ? 'negative'
                : undefined },
            React__default.createElement(Input, { size: 'small', type: 'number', min: '0', max: '255', placeholder: 'R', value: (_f = input[0]) !== null && _f !== void 0 ? _f : '', onChange: (event) => {
                    setInput([event.target.value, input[1], input[2], input[3]]);
                }, onKeyDown: (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        handleColorInputChange();
                    }
                }, onBlur: (event) => {
                    event.preventDefault();
                    if (!isFocusInside(event.relatedTarget)) {
                        handleColorInputChange();
                    }
                } })),
        React__default.createElement(InputContainer, { status: Number(input[1]) < 0 || Number(input[1]) > 255
                ? 'negative'
                : undefined },
            React__default.createElement(Input, { size: 'small', type: 'number', min: '0', max: '255', placeholder: 'G', value: (_g = input[1]) !== null && _g !== void 0 ? _g : '', onChange: (event) => {
                    setInput([input[0], event.target.value, input[2], input[3]]);
                }, onKeyDown: (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        handleColorInputChange();
                    }
                }, onBlur: (event) => {
                    event.preventDefault();
                    if (!isFocusInside(event.relatedTarget)) {
                        handleColorInputChange();
                    }
                } })),
        React__default.createElement(InputContainer, { status: Number(input[2]) < 0 || Number(input[2]) > 255
                ? 'negative'
                : undefined },
            React__default.createElement(Input, { size: 'small', type: 'number', min: '0', max: '255', placeholder: 'B', value: (_h = input[2]) !== null && _h !== void 0 ? _h : '', onChange: (event) => {
                    setInput([input[0], input[1], event.target.value, input[3]]);
                }, onKeyDown: (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        handleColorInputChange();
                    }
                }, onBlur: (event) => {
                    event.preventDefault();
                    if (!isFocusInside(event.relatedTarget)) {
                        handleColorInputChange();
                    }
                } })),
        showAlpha && (React__default.createElement(InputContainer, { status: Number(input[3]) < 0 || Number(input[3]) > 1
                ? 'negative'
                : undefined },
            React__default.createElement(Input, { size: 'small', type: 'number', min: '0', max: '1', step: '.01', placeholder: 'A', value: (_j = input[3]) !== null && _j !== void 0 ? _j : '', onChange: (event) => {
                    setInput([input[0], input[1], input[2], event.target.value]);
                }, onKeyDown: (event) => {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        handleColorInputChange();
                    }
                }, onBlur: (event) => {
                    event.preventDefault();
                    if (!isFocusInside(event.relatedTarget)) {
                        handleColorInputChange();
                    }
                } })))));
    return (React__default.createElement("div", { className: cx('iui-color-input-wrapper', className), ref: ref, ...rest },
        React__default.createElement("div", { className: 'iui-color-picker-section-label' }, showAlpha && currentFormat != 'hex'
            ? currentFormat.toUpperCase() + 'A'
            : currentFormat.toUpperCase()),
        React__default.createElement("div", { className: 'iui-color-input' },
            allowedColorFormats.length > 1 && (React__default.createElement(IconButton, { styleType: 'borderless', onClick: swapColorFormat, size: 'small' },
                React__default.createElement(SvgSwap, null))),
            React__default.createElement("div", { ref: inputsContainerRef, className: 'iui-color-input-fields' },
                currentFormat === 'hex' && hexInputField,
                currentFormat === 'rgb' && rgbInputs,
                currentFormat === 'hsl' && hslInputs))));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const Anchor = React__default.forwardRef(({ className, ...rest }, ref) => {
    useTheme();
    return React__default.createElement("a", { className: cx('iui-anchor', className), ref: ref, ...rest });
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * @deprecated Since v2, use `Text` with variant 'headline'.
 * @example
 * <Text variant='headline' as='h1'>I'm a headline!</Text>
 */
const Headline = React__default.forwardRef((props, ref) => {
    const { className, isMuted = false, ...rest } = props;
    useTheme();
    return (React__default.createElement("h1", { ref: ref, className: cx('iui-text-headline', 'iui-text-spacing', { 'iui-text-muted': isMuted }, className), ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * @deprecated Since v2, use `Text` with variant 'title'.
 * @example
 * <Text variant='title' as='h2'>I'm a title!</Text>
 */
const Title = React__default.forwardRef((props, ref) => {
    const { className, isMuted = false, ...rest } = props;
    useTheme();
    return (React__default.createElement("h2", { ref: ref, className: cx('iui-text-title', 'iui-text-spacing', { 'iui-text-muted': isMuted }, className), ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * @deprecated Since v2, use `Text` with variant 'subheading'.
 * @example
 * <Text variant='subheading' as='h3'>I'm a subheading!</Text>
 */
const Subheading = React__default.forwardRef((props, ref) => {
    const { className, isMuted = false, ...rest } = props;
    useTheme();
    return (React__default.createElement("h3", { ref: ref, className: cx('iui-text-subheading', 'iui-text-spacing', { 'iui-text-muted': isMuted }, className), ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * @deprecated Since v2, use `Text` with variant 'leading'.
 * @example
 * <Text variant='leading' as='h3'>I'm a leading!</Text>
 */
const Leading = React__default.forwardRef((props, ref) => {
    const { className, isMuted = false, ...rest } = props;
    useTheme();
    return (React__default.createElement("h3", { ref: ref, className: cx('iui-text-leading', 'iui-text-spacing', { 'iui-text-muted': isMuted }, className), ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * @deprecated Since v2, use `Text` with variant 'body'.
 * @example
 * <Text variant='body' as='p'>I'm some body text!</Text>
 */
const Body = React__default.forwardRef((props, ref) => {
    const { className, isMuted = false, isSkeleton = false, ...rest } = props;
    useTheme();
    return (React__default.createElement("p", { ref: ref, className: cx('iui-text-block', 'iui-text-spacing', {
            'iui-text-muted': isMuted,
            'iui-skeleton': isSkeleton,
        }, className), ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * @deprecated Since v2, use `Text` with variant 'small'.
 * @example
 * <Text variant='small' as='small'>I'm some small text!</Text>
 */
const Small = React__default.forwardRef((props, ref) => {
    const { className, isMuted = false, ...rest } = props;
    useTheme();
    return (React__default.createElement("small", { ref: ref, className: cx('iui-text-small', { 'iui-text-muted': isMuted }, className), ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Basic blockquote component
 * @example
 * <Blockquote>This is a quote</Blockquote>
 * <Blockquote footer='— Someone'>
 *  <p>This is a quote from someone</p>
 * </Blockquote>
 */
const Blockquote = React__default.forwardRef((props, ref) => {
    const { className, children, footer, ...rest } = props;
    useTheme();
    return (React__default.createElement("blockquote", { className: cx('iui-blockquote', className), ref: ref, ...rest },
        children,
        footer && React__default.createElement("footer", null, footer)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Inline code element.
 * @example
 * <p>Some <Code>inline code</Code> in a paragraph</p>
 */
const Code = (props) => {
    const { className, children, ...rest } = props;
    useTheme();
    return (React__default.createElement("code", { className: cx('iui-code', className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Some predefined strings for common keyboard keys.
 */
const KbdKeys = {
    Command: '\u2318 Cmd',
    Shift: '\u21e7 Shift',
    Backspace: '\u232b Backspace',
    Enter: '\u21b5 Enter',
    Eject: '\u23cf Eject',
    Control: 'Ctrl',
    Windows: '\u229e Win',
    Apple: '\uf8ff',
    Option: '\u2325 Option',
    Left: '\u2190',
    Up: '\u2191',
    Right: '\u2192',
    Down: '\u2193',
};
/**
 * A keyboard key element.
 * @example
 * <Kbd>A</Kbd>
 * <Kbd title='Enter'>{KbdKeys.Enter}</Kbd>
 */
const Kbd = (props) => {
    const { className, children, ...rest } = props;
    useTheme();
    return (React__default.createElement("kbd", { className: cx('iui-keyboard', className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Polymorphic typography component to render any kind of text as any kind of element.
 * Users should decide which element to render based on the context of their app. Link to heading levels docs: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#accessibility_concerns
 *
 * @example
 * <Text>Some normal paragraph text rendered as a div</Text>
 * @example
 * <Text variant='title' as='h3'>I'm some h2 text rendered as an h3 element!</Text>
 * @example
 * <Text isMuted>Some muted text.</Text>
 * <Text isSkeleton>Skeleton text</Text>
 */
const Text = React__default.forwardRef((props, ref) => {
    const { variant = 'body', as: Element = 'div', className, isMuted = false, isSkeleton = false, ...rest } = props;
    useTheme();
    return (React__default.createElement(Element, { className: cx({
            [`iui-text-${variant}`]: variant !== 'body',
            'iui-text-block': variant === 'body',
            'iui-text-muted': isMuted,
            'iui-skeleton': isSkeleton,
        }, className), ref: ref, ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const comboBoxReducer = (state, [type, value]) => {
    var _a;
    switch (type) {
        case 'open': {
            return { ...state, isOpen: true };
        }
        case 'close': {
            return { ...state, isOpen: false };
        }
        case 'select': {
            return {
                ...state,
                selectedIndex: value !== null && value !== void 0 ? value : state.selectedIndex,
                focusedIndex: value !== null && value !== void 0 ? value : state.focusedIndex,
            };
        }
        case 'focus': {
            return { ...state, focusedIndex: (_a = value !== null && value !== void 0 ? value : state.selectedIndex) !== null && _a !== void 0 ? _a : -1 };
        }
        default: {
            return state;
        }
    }
};
const ComboBoxRefsContext = React__default.createContext(undefined);
ComboBoxRefsContext.displayName = 'ComboBoxRefsContext';
const ComboBoxStateContext = React__default.createContext(undefined);
ComboBoxStateContext.displayName = 'ComboBoxStateContext';
const ComboBoxActionContext = React__default.createContext(undefined);
ComboBoxActionContext.displayName = 'ComboBoxActionContext';

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const ComboBoxDropdown = React__default.forwardRef((props, forwardedRef) => {
    const { children, ...rest } = props;
    const { isOpen } = useSafeContext(ComboBoxStateContext);
    const dispatch = useSafeContext(ComboBoxActionContext);
    const { inputRef, toggleButtonRef } = useSafeContext(ComboBoxRefsContext);
    // sync internal isOpen state with user's visible prop
    React__default.useEffect(() => {
        if (props.visible != undefined) {
            dispatch([props.visible ? 'open' : 'close']);
        }
    }, [dispatch, props.visible]);
    return (React__default.createElement(Popover, { placement: 'bottom-start', visible: isOpen, onClickOutside: React__default.useCallback((_, { target }) => {
            var _a;
            if (!((_a = toggleButtonRef.current) === null || _a === void 0 ? void 0 : _a.contains(target))) {
                dispatch(['close']);
            }
        }, [dispatch, toggleButtonRef]), animation: 'shift-away', duration: 200, reference: inputRef, ref: forwardedRef, content: children, ...rest }));
});
ComboBoxDropdown.displayName = 'ComboBoxDropdown';

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const ComboBoxEndIcon = React__default.forwardRef((props, forwardedRef) => {
    const { className, children, onClick: onClickProp, disabled, isOpen, ...rest } = props;
    const dispatch = useSafeContext(ComboBoxActionContext);
    const { toggleButtonRef } = useSafeContext(ComboBoxRefsContext);
    const refs = useMergedRefs(toggleButtonRef, forwardedRef);
    return (React__default.createElement("span", { ref: refs, className: cx('iui-end-icon', {
            'iui-actionable': !disabled,
            'iui-disabled': disabled,
            'iui-open': isOpen,
        }, className), onClick: (e) => {
            onClickProp === null || onClickProp === void 0 ? void 0 : onClickProp(e);
            if (!e.isDefaultPrevented()) {
                dispatch([isOpen ? 'close' : 'open']);
            }
        }, ...rest }, children !== null && children !== void 0 ? children : React__default.createElement(SvgCaretDownSmall, { "aria-hidden": true })));
});
ComboBoxEndIcon.displayName = 'ComboBoxEndIcon';

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const ComboBoxInput = React__default.forwardRef((props, forwardedRef) => {
    const { onKeyDown: onKeyDownProp, onFocus: onFocusProp, ...rest } = props;
    const { isOpen, id, focusedIndex, enableVirtualization } = useSafeContext(ComboBoxStateContext);
    const dispatch = useSafeContext(ComboBoxActionContext);
    const { inputRef, menuRef, optionsExtraInfoRef } = useSafeContext(ComboBoxRefsContext);
    const refs = useMergedRefs(inputRef, forwardedRef);
    const focusedIndexRef = React__default.useRef(focusedIndex !== null && focusedIndex !== void 0 ? focusedIndex : -1);
    React__default.useEffect(() => {
        focusedIndexRef.current = focusedIndex !== null && focusedIndex !== void 0 ? focusedIndex : -1;
    }, [focusedIndex]);
    const getIdFromIndex = (index) => {
        var _a, _b, _c;
        return ((_c = (_b = (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-iui-index="${index}"]`)) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : '');
    };
    const handleKeyDown = React__default.useCallback((event) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
        onKeyDownProp === null || onKeyDownProp === void 0 ? void 0 : onKeyDownProp(event);
        const length = (_a = Object.keys(optionsExtraInfoRef.current).length) !== null && _a !== void 0 ? _a : 0;
        switch (event.key) {
            case 'ArrowDown': {
                event.preventDefault();
                if (!isOpen) {
                    return dispatch(['open']);
                }
                if (length === 0) {
                    return;
                }
                if (focusedIndexRef.current === -1) {
                    const currentElement = (_b = menuRef.current) === null || _b === void 0 ? void 0 : _b.querySelector('[data-iui-index]');
                    return dispatch([
                        'focus',
                        Number((_c = currentElement === null || currentElement === void 0 ? void 0 : currentElement.getAttribute('data-iui-index')) !== null && _c !== void 0 ? _c : 0),
                    ]);
                }
                // If virtualization is enabled, dont let round scrolling
                if (enableVirtualization &&
                    !((_e = (_d = menuRef.current) === null || _d === void 0 ? void 0 : _d.querySelector(`[data-iui-index="${focusedIndexRef.current}"]`)) === null || _e === void 0 ? void 0 : _e.nextElementSibling)) {
                    return;
                }
                let nextIndex = focusedIndexRef.current;
                do {
                    const currentElement = (_f = menuRef.current) === null || _f === void 0 ? void 0 : _f.querySelector(`[data-iui-index="${nextIndex}"]`);
                    const nextElement = (_g = currentElement === null || currentElement === void 0 ? void 0 : currentElement.nextElementSibling) !== null && _g !== void 0 ? _g : (_h = menuRef.current) === null || _h === void 0 ? void 0 : _h.querySelector('[data-iui-index]');
                    nextIndex = Number(nextElement === null || nextElement === void 0 ? void 0 : nextElement.getAttribute('data-iui-index'));
                    if ((nextElement === null || nextElement === void 0 ? void 0 : nextElement.ariaDisabled) !== 'true') {
                        return dispatch(['focus', nextIndex]);
                    }
                } while (nextIndex !== focusedIndexRef.current);
                break;
            }
            case 'ArrowUp': {
                event.preventDefault();
                if (!isOpen) {
                    return dispatch(['open']);
                }
                if (length === 0) {
                    return;
                }
                // If virtualization is enabled, dont let round scrolling
                if (enableVirtualization &&
                    !((_k = (_j = menuRef.current) === null || _j === void 0 ? void 0 : _j.querySelector(`[data-iui-index="${focusedIndexRef.current}"]`)) === null || _k === void 0 ? void 0 : _k.previousElementSibling)) {
                    return;
                }
                if (focusedIndexRef.current === -1) {
                    return dispatch([
                        'focus',
                        (_m = (_l = Object.values(optionsExtraInfoRef.current)) === null || _l === void 0 ? void 0 : _l[length - 1].__originalIndex) !== null && _m !== void 0 ? _m : -1,
                    ]);
                }
                let prevIndex = focusedIndexRef.current;
                do {
                    const currentElement = (_o = menuRef.current) === null || _o === void 0 ? void 0 : _o.querySelector(`[data-iui-index="${prevIndex}"]`);
                    const prevElement = (_p = currentElement === null || currentElement === void 0 ? void 0 : currentElement.previousElementSibling) !== null && _p !== void 0 ? _p : (_q = menuRef.current) === null || _q === void 0 ? void 0 : _q.querySelector('[data-iui-index]:last-of-type');
                    prevIndex = Number(prevElement === null || prevElement === void 0 ? void 0 : prevElement.getAttribute('data-iui-index'));
                    if ((prevElement === null || prevElement === void 0 ? void 0 : prevElement.ariaDisabled) !== 'true') {
                        return dispatch(['focus', prevIndex]);
                    }
                } while (prevIndex !== focusedIndexRef.current);
                break;
            }
            case 'Enter': {
                event.preventDefault();
                if (isOpen) {
                    dispatch(['select', focusedIndexRef.current]);
                    dispatch(['close']);
                }
                else {
                    dispatch(['open']);
                }
                break;
            }
            case 'Escape': {
                event.preventDefault();
                dispatch(['close']);
                break;
            }
            case 'Tab':
                dispatch(['close']);
                break;
        }
    }, [
        dispatch,
        enableVirtualization,
        isOpen,
        menuRef,
        onKeyDownProp,
        optionsExtraInfoRef,
    ]);
    const handleFocus = React__default.useCallback((event) => {
        dispatch(['open']);
        onFocusProp === null || onFocusProp === void 0 ? void 0 : onFocusProp(event);
    }, [dispatch, onFocusProp]);
    return (React__default.createElement(Input, { ref: refs, onKeyDown: handleKeyDown, onFocus: handleFocus, "aria-activedescendant": isOpen && focusedIndex != undefined && focusedIndex > -1
            ? getIdFromIndex(focusedIndex)
            : undefined, role: 'combobox', "aria-controls": isOpen ? `${id}-list` : undefined, "aria-autocomplete": 'list', spellCheck: false, autoCapitalize: 'none', autoCorrect: 'off', ...rest }));
});
ComboBoxInput.displayName = 'ComboBoxInput';

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Component to display icon and text below the `Combobox` component.
 * @example
 * <StatusMessage>This is the text</StatusMessage>
 * <StatusMessage startIcon={<SvgStar />}>This is the text</StatusMessage>
 */
const StatusMessage = ({ startIcon: userStartIcon, children, status, }) => {
    useTheme();
    const StartIcon = () => {
        var _a;
        const icon = userStartIcon !== null && userStartIcon !== void 0 ? userStartIcon : (status && StatusIconMap[status]());
        if (!icon) {
            return null;
        }
        return React__default.cloneElement(icon, {
            className: cx('iui-input-icon', (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className),
            'aria-hidden': true,
        });
    };
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(StartIcon, null),
        React__default.createElement("div", { className: 'iui-message' }, children)));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const ComboBoxInputContainer = (props) => {
    const { className, status, message, children, ...rest } = props;
    const { id } = useSafeContext(ComboBoxStateContext);
    return (React__default.createElement(InputContainer, { className: className, status: status, statusMessage: typeof message === 'string' ? (React__default.createElement(StatusMessage, { status: status }, message)) : (React__default.isValidElement(message) &&
            React__default.cloneElement(message, { status })), ...rest, id: id },
        React__default.createElement("div", { className: 'iui-input-with-icon' }, children)));
};
ComboBoxInputContainer.displayName = 'ComboBoxInputContainer';

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Helper function that returns one of the preset surface elevation values.
 */
const getSurfaceElevationValue = (elevation) => {
    switch (elevation) {
        case 0:
            return 'none';
        case 1:
            return 'var(--iui-shadow-1)';
        case 2:
            return 'var(--iui-shadow-2)';
        case 3:
            return 'var(--iui-shadow-3)';
        case 4:
            return 'var(--iui-shadow-4)';
        case 5:
            return 'var(--iui-shadow-5)';
        default:
            return '';
    }
};
/**
 * The Surface container allows content to appear elevated through the use of a drop shadow
 * @example
 * <Surface>Surface Content</Surface>
 * <Surface elevation={2}>Surface Content</Surface>
 */
const Surface = React__default.forwardRef((props, ref) => {
    const { elevation, className, style, children, ...rest } = props;
    useTheme();
    const _style = {
        '--iui-surface-elevation': getSurfaceElevationValue(elevation),
        ...style,
    };
    return (React__default.createElement("div", { className: cx('iui-surface', className), style: _style, ref: ref, ...rest }, children));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const VirtualizedComboBoxMenu = React__default.forwardRef(({ children, className, style, ...rest }, forwardedRef) => {
    var _a, _b, _c;
    const { minWidth, id, filteredOptions, getMenuItem, focusedIndex, } = useSafeContext(ComboBoxStateContext);
    const { menuRef } = useSafeContext(ComboBoxRefsContext);
    const virtualItemRenderer = React__default.useCallback((index) => filteredOptions.length > 0
        ? getMenuItem(filteredOptions[index], index)
        : children, // Here is expected empty state content
    [filteredOptions, getMenuItem, children]);
    const focusedVisibleIndex = React__default.useMemo(() => {
        var _a, _b;
        const currentElement = (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-iui-index="${focusedIndex}"]`);
        if (!currentElement) {
            return focusedIndex;
        }
        return Number((_b = currentElement.getAttribute('data-iui-filtered-index')) !== null && _b !== void 0 ? _b : focusedIndex);
    }, [focusedIndex, menuRef]);
    const { outerProps, innerProps, visibleChildren } = useVirtualization({
        // 'Fool' VirtualScroll by passing length 1
        // whenever there is no elements, to show empty state message
        itemsLength: filteredOptions.length || 1,
        itemRenderer: virtualItemRenderer,
        scrollToIndex: focusedVisibleIndex,
    });
    const overflowY = ((_c = (_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.CSS) === null || _b === void 0 ? void 0 : _b.supports) === null || _c === void 0 ? void 0 : _c.call(_b, 'overflow-x: overlay'))
        ? { overflowY: 'overlay' }
        : { overflowY: 'auto' };
    const styles = React__default.useMemo(() => ({
        minWidth,
        maxWidth: `min(${minWidth * 2}px, 90vw)`,
    }), [minWidth]);
    return (React__default.createElement(Surface, { elevation: 1, style: { ...styles, ...overflowY, ...style }, ...rest },
        React__default.createElement("div", { ...outerProps },
            React__default.createElement(Menu, { id: `${id}-list`, setFocus: false, role: 'listbox', ref: mergeRefs(menuRef, innerProps.ref, forwardedRef), className: cx('iui-scroll', className), style: innerProps.style }, visibleChildren))));
});
const ComboBoxMenu = React__default.forwardRef((props, forwardedRef) => {
    const { className, style, ...rest } = props;
    const { minWidth, id, enableVirtualization } = useSafeContext(ComboBoxStateContext);
    const { menuRef } = useSafeContext(ComboBoxRefsContext);
    const refs = useMergedRefs(menuRef, forwardedRef);
    const styles = React__default.useMemo(() => ({
        minWidth,
        maxWidth: `min(${minWidth * 2}px, 90vw)`,
    }), [minWidth]);
    return (React__default.createElement(React__default.Fragment, null, !enableVirtualization ? (React__default.createElement(Menu, { id: `${id}-list`, style: { ...styles, ...style }, setFocus: false, role: 'listbox', ref: refs, className: cx('iui-scroll', className), ...rest })) : (React__default.createElement(VirtualizedComboBoxMenu, { ref: forwardedRef, ...props }))));
});
ComboBoxMenu.displayName = 'ComboBoxMenu';

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const ComboBoxMenuItem = React__default.memo(React__default.forwardRef((props, forwardedRef) => {
    const { children, isSelected, disabled, value, onClick, sublabel, size = !!sublabel ? 'large' : 'default', icon, badge, className, role = 'menuitem', index, ...rest } = props;
    const { focusedIndex, enableVirtualization } = useSafeContext(ComboBoxStateContext);
    const focusRef = (el) => {
        if (!enableVirtualization && focusedIndex === index) {
            el === null || el === void 0 ? void 0 : el.scrollIntoView({ block: 'nearest' });
        }
    };
    const refs = useMergedRefs(forwardedRef, focusRef);
    return (React__default.createElement("li", { className: cx('iui-menu-item', {
            'iui-large': size === 'large',
            'iui-active': isSelected,
            'iui-disabled': disabled,
            'iui-focused': focusedIndex === index,
        }, className), ref: refs, onClick: () => !disabled && (onClick === null || onClick === void 0 ? void 0 : onClick(value)), role: role, tabIndex: disabled || role === 'presentation' ? undefined : -1, "aria-selected": isSelected, "aria-disabled": disabled, "data-iui-index": index, ...rest },
        icon &&
            React__default.cloneElement(icon, {
                className: cx(icon.props.className, 'iui-icon'),
            }),
        React__default.createElement("span", { className: 'iui-content' },
            React__default.createElement("div", { className: 'iui-menu-label' }, children),
            sublabel && React__default.createElement("div", { className: 'iui-menu-description' }, sublabel)),
        badge &&
            React__default.cloneElement(badge, {
                className: cx(badge.props.className, 'iui-icon'),
            })));
}));
ComboBoxMenuItem.displayName = 'ComboBoxMenuItem';

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/** Returns either `option.id` or derives a stable id using `idPrefix` and `option.label` (without whitespace) */
const getOptionId = (option, idPrefix) => {
    var _a;
    return (_a = option.id) !== null && _a !== void 0 ? _a : `${idPrefix}-option-${option.label.replace(/\s/g, '-')}`;
};
/**
 * ComboBox component that allows typing a value to filter the options in dropdown list.
 * Values can be selected either using mouse clicks or using the Enter key.
 * @example
 * <ComboBox
 *   options={[
 *     { label: 'Item 1', value: 1 },
 *     { label: 'Item 2', value: 2 },
 *     { label: 'Item 3', value: 3 },
 *   ]}
 *   onChange={() => {}}
 * />
 */
const ComboBox = (props) => {
    var _a, _b;
    const { options, value: valueProp, onChange, filterFunction, inputProps, dropdownMenuProps, emptyStateMessage = 'No options found', itemRenderer, enableVirtualization = false, onShow, onHide, ...rest } = props;
    // Generate a stateful random id if not specified
    const [id] = React__default.useState(() => {
        var _a, _b;
        return (_b = (_a = props.id) !== null && _a !== void 0 ? _a : ((inputProps === null || inputProps === void 0 ? void 0 : inputProps.id) && `${inputProps.id}-cb`)) !== null && _b !== void 0 ? _b : `iui-cb-${getRandomValue(10)}`;
    });
    useTheme();
    // Refs get set in subcomponents
    const inputRef = React__default.useRef(null);
    const menuRef = React__default.useRef(null);
    const toggleButtonRef = React__default.useRef(null);
    const mounted = React__default.useRef(false);
    const valuePropRef = useLatestRef(valueProp);
    const onChangeProp = useLatestRef(onChange);
    const optionsRef = useLatestRef(options);
    // Record to store all extra information (e.g. original indexes), where the key is the id of the option
    const optionsExtraInfoRef = React__default.useRef({});
    // Clear the extra info when the options change so that it can be reinitialized below
    React__default.useEffect(() => {
        optionsExtraInfoRef.current = {};
    }, [options]);
    // Initialize the extra info only if it is not already initialized
    if (options.length > 0 &&
        Object.keys(optionsExtraInfoRef.current).length === 0) {
        options.forEach((option, index) => {
            optionsExtraInfoRef.current[getOptionId(option, id)] = {
                __originalIndex: index,
            };
        });
    }
    // Reducer where all the component-wide state is stored
    const [{ isOpen, selectedIndex, focusedIndex }, dispatch] = React__default.useReducer(comboBoxReducer, {
        isOpen: false,
        selectedIndex: valueProp
            ? optionsRef.current.findIndex((option) => option.value === valueProp)
            : -1,
        focusedIndex: -1,
    });
    React__default.useLayoutEffect(() => {
        var _a, _b;
        // When the dropdown opens
        if (isOpen) {
            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus(); // Focus the input
            setFilteredOptions(optionsRef.current); // Reset the filtered list
            dispatch(['focus']);
        }
        // When the dropdown closes
        else {
            // Reset the focused index
            dispatch(['focus']);
            // Reset the input value
            setInputValue(selectedIndex != undefined && selectedIndex >= 0
                ? (_b = optionsRef.current[selectedIndex]) === null || _b === void 0 ? void 0 : _b.label
                : '');
        }
    }, [isOpen, optionsRef, selectedIndex]);
    // Set min-width of menu to be same as input
    const [minWidth, setMinWidth] = React__default.useState(0);
    React__default.useEffect(() => {
        if (inputRef.current) {
            setMinWidth(inputRef.current.offsetWidth);
        }
    }, [isOpen]);
    // Update filtered options to the latest value options according to input value
    const [filteredOptions, setFilteredOptions] = React__default.useState(options);
    React__default.useEffect(() => {
        var _a;
        if (inputValue) {
            setFilteredOptions((_a = filterFunction === null || filterFunction === void 0 ? void 0 : filterFunction(options, inputValue)) !== null && _a !== void 0 ? _a : options.filter((option) => option.label.toLowerCase().includes(inputValue.toLowerCase())));
        }
        else {
            setFilteredOptions(options);
        }
        dispatch(['focus']);
        // Only need to call on options update
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [options]);
    // Filter options based on input value
    const [inputValue, setInputValue] = React__default.useState((_b = (_a = inputProps === null || inputProps === void 0 ? void 0 : inputProps.value) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '');
    const handleOnInput = React__default.useCallback((event) => {
        var _a, _b;
        const { value } = event.currentTarget;
        setInputValue(value);
        dispatch(['open']); // reopen when typing
        setFilteredOptions((_a = filterFunction === null || filterFunction === void 0 ? void 0 : filterFunction(optionsRef.current, value)) !== null && _a !== void 0 ? _a : optionsRef.current.filter((option) => option.label.toLowerCase().includes(value.toLowerCase())));
        if (focusedIndex != -1) {
            dispatch(['focus', -1]);
        }
        (_b = inputProps === null || inputProps === void 0 ? void 0 : inputProps.onChange) === null || _b === void 0 ? void 0 : _b.call(inputProps, event);
    }, [filterFunction, focusedIndex, inputProps, optionsRef]);
    // When the value prop changes, update the selectedIndex
    React__default.useEffect(() => {
        dispatch([
            'select',
            options.findIndex((option) => option.value === valueProp),
        ]);
    }, [options, valueProp]);
    // Call user-defined onChange when the value actually changes
    React__default.useEffect(() => {
        var _a, _b;
        // Prevent user-defined onChange to be called on mount
        if (!mounted.current) {
            mounted.current = true;
            return;
        }
        const currentValue = (_a = optionsRef.current[selectedIndex]) === null || _a === void 0 ? void 0 : _a.value;
        if (currentValue === valuePropRef.current || selectedIndex === -1) {
            return;
        }
        (_b = onChangeProp.current) === null || _b === void 0 ? void 0 : _b.call(onChangeProp, currentValue);
    }, [onChangeProp, optionsRef, selectedIndex, valuePropRef]);
    const getMenuItem = React__default.useCallback((option, filteredIndex) => {
        const optionId = getOptionId(option, id);
        const { __originalIndex } = optionsExtraInfoRef.current[optionId];
        const customItem = itemRenderer
            ? itemRenderer(option, {
                isFocused: focusedIndex === __originalIndex,
                isSelected: selectedIndex === __originalIndex,
                index: __originalIndex,
                id: optionId,
            })
            : null;
        return customItem ? (React__default.cloneElement(customItem, {
            onClick: (e) => {
                var _a, _b;
                dispatch(['select', __originalIndex]);
                dispatch(['close']);
                (_b = (_a = customItem.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);
            },
            // ComboBox.MenuItem handles scrollIntoView, data-iui-index and iui-focused through context
            // but we still need to pass them here for backwards compatibility with MenuItem
            className: cx(customItem.props.className, {
                'iui-focused': focusedIndex === __originalIndex,
            }),
            'data-iui-index': __originalIndex,
            'data-iui-filtered-index': filteredIndex,
            ref: mergeRefs(customItem.props.ref, (el) => {
                if (!enableVirtualization && focusedIndex === __originalIndex) {
                    el === null || el === void 0 ? void 0 : el.scrollIntoView({ block: 'nearest' });
                }
            }),
        })) : (React__default.createElement(ComboBoxMenuItem, { key: optionId, id: optionId, ...option, isSelected: selectedIndex === __originalIndex, onClick: () => {
                dispatch(['select', __originalIndex]);
                dispatch(['close']);
            }, index: __originalIndex, "data-iui-filtered-index": filteredIndex }, option.label));
    }, [enableVirtualization, focusedIndex, id, itemRenderer, selectedIndex]);
    const emptyContent = React__default.useMemo(() => (React__default.createElement(React__default.Fragment, null, React__default.isValidElement(emptyStateMessage) ? (emptyStateMessage) : (React__default.createElement(MenuExtraContent, null,
        React__default.createElement(Text, { isMuted: true }, emptyStateMessage))))), [emptyStateMessage]);
    return (React__default.createElement(ComboBoxRefsContext.Provider, { value: { inputRef, menuRef, toggleButtonRef, optionsExtraInfoRef } },
        React__default.createElement(ComboBoxActionContext.Provider, { value: dispatch },
            React__default.createElement(ComboBoxStateContext.Provider, { value: {
                    id,
                    minWidth,
                    isOpen,
                    focusedIndex,
                    enableVirtualization,
                    filteredOptions,
                    getMenuItem,
                } },
                React__default.createElement(ComboBoxInputContainer, { disabled: inputProps === null || inputProps === void 0 ? void 0 : inputProps.disabled, ...rest },
                    React__default.createElement(ComboBoxInput, { value: inputValue, ...inputProps, onChange: handleOnInput }),
                    React__default.createElement(ComboBoxEndIcon, { disabled: inputProps === null || inputProps === void 0 ? void 0 : inputProps.disabled, isOpen: isOpen })),
                React__default.createElement(ComboBoxDropdown, { ...dropdownMenuProps, onShow: onShow, onHide: onHide },
                    React__default.createElement(ComboBoxMenu, null, filteredOptions.length > 0 && !enableVirtualization
                        ? filteredOptions.map(getMenuItem)
                        : emptyContent))))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const isSameHour = (date1, date2, meridiem) => {
    const adjustedHours = meridiem
        ? formatHourFrom12(date1.getHours(), meridiem)
        : date1.getHours();
    if (!!meridiem) {
        return !!date2 && adjustedHours % 12 === date2.getHours() % 12;
    }
    return !!date2 && adjustedHours === date2.getHours();
};
const isSameMinute = (date1, date2) => {
    return !!date2 && date1.getMinutes() === date2.getMinutes();
};
const isSameSecond = (date1, date2) => {
    return !!date2 && date1.getSeconds() === date2.getSeconds();
};
const isSameMeridiem = (meridiem, date) => {
    return (!!date && (meridiem === 'AM' ? date.getHours() < 12 : date.getHours() >= 12));
};
const formatHourFrom12 = (hour, meridiem) => {
    const adjustedHour = hour % 12;
    return meridiem === 'PM' ? adjustedHour + 12 : adjustedHour;
};
const setHours = (hour, date) => {
    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), hour, date.getMinutes(), date.getSeconds());
};
/**
 * Time picker component
 * @example
 * <TimePicker date={new Date()} onChange={(e) => console.log('New time value: ' + e)} />
 */
const TimePicker = (props) => {
    const { date, onChange, use12Hours = false, precision = 'minutes', hourStep = 1, minuteStep = 1, secondStep = 1, setFocusHour = false, hourRenderer = (date) => date.getHours().toLocaleString(undefined, { minimumIntegerDigits: 2 }), minuteRenderer = (date) => date.getMinutes().toLocaleString(undefined, { minimumIntegerDigits: 2 }), secondRenderer = (date) => date.getSeconds().toLocaleString(undefined, { minimumIntegerDigits: 2 }), meridiemRenderer = (meridiem) => meridiem, className, ...rest } = props;
    useTheme();
    const [selectedTime, setSelectedTime] = React__default.useState(date);
    const [focusedTime, setFocusedTime] = React__default.useState(selectedTime !== null && selectedTime !== void 0 ? selectedTime : new Date());
    const [meridiem, setMeridiem] = React__default.useState(use12Hours ? ((focusedTime === null || focusedTime === void 0 ? void 0 : focusedTime.getHours()) > 11 ? 'PM' : 'AM') : undefined);
    React__default.useEffect(() => {
        setFocusedTime(date !== null && date !== void 0 ? date : new Date());
        setSelectedTime(date);
    }, [date]);
    const onHourClick = (date) => {
        const adjustedHour = use12Hours
            ? formatHourFrom12(date.getHours(), meridiem)
            : date.getHours();
        const adjustedSelectedTime = setHours(adjustedHour, selectedTime !== null && selectedTime !== void 0 ? selectedTime : new Date());
        updateCurrentTime(adjustedSelectedTime);
    };
    const onMeridiemClick = (value) => {
        let adjustedSelectedTime = selectedTime !== null && selectedTime !== void 0 ? selectedTime : new Date();
        const currentHours = adjustedSelectedTime.getHours();
        setMeridiem(value);
        if (value === 'AM' && currentHours > 11) {
            adjustedSelectedTime = setHours(currentHours - 12, adjustedSelectedTime);
        }
        if (value === 'PM' && currentHours <= 12) {
            adjustedSelectedTime = setHours(currentHours + 12, adjustedSelectedTime);
        }
        updateCurrentTime(adjustedSelectedTime);
    };
    const updateCurrentTime = (time) => {
        let adjustedTime = time;
        // Nullify other values, according to precision
        if (precision === 'hours') {
            adjustedTime = new Date(time.getFullYear(), time.getMonth(), time.getDate(), time.getHours(), 0, 0);
        }
        if (precision === 'minutes') {
            adjustedTime = new Date(time.getFullYear(), time.getMonth(), time.getDate(), time.getHours(), time.getMinutes(), 0);
        }
        setFocusedTime(adjustedTime);
        setSelectedTime(adjustedTime);
        onChange === null || onChange === void 0 ? void 0 : onChange(adjustedTime);
    };
    const onHourFocus = (date) => {
        const adjustedHour = use12Hours
            ? formatHourFrom12(date.getHours(), meridiem)
            : date.getHours();
        setFocusedTime(setHours(adjustedHour, focusedTime));
    };
    const onMeridiemFocus = (value) => {
        let adjustedSelectedTime = selectedTime !== null && selectedTime !== void 0 ? selectedTime : new Date();
        const currentHours = adjustedSelectedTime.getHours();
        if (value === 'AM' && currentHours > 11) {
            setMeridiem(value);
            adjustedSelectedTime = setHours(currentHours - 12, adjustedSelectedTime);
        }
        if (value === 'PM' && currentHours <= 12) {
            setMeridiem(value);
            adjustedSelectedTime = setHours(currentHours + 12, adjustedSelectedTime);
        }
        setFocusedTime(adjustedSelectedTime);
    };
    const generateDataList = (size, value, step) => {
        const data = [];
        for (let i = 0; i < size; ++i) {
            if (i % step === 0) {
                data.push(value(i));
            }
        }
        return data;
    };
    const hours = React__default.useMemo(() => {
        const time = selectedTime !== null && selectedTime !== void 0 ? selectedTime : new Date();
        return generateDataList(use12Hours ? 12 : 24, (i) => new Date(time.getFullYear(), time.getMonth(), time.getDate(), use12Hours && i === 0 ? 12 : i, time.getMinutes(), time.getSeconds()), hourStep);
    }, [hourStep, selectedTime, use12Hours]);
    const minutes = React__default.useMemo(() => {
        const time = selectedTime !== null && selectedTime !== void 0 ? selectedTime : new Date();
        return generateDataList(60, (i) => new Date(time.getFullYear(), time.getMonth(), time.getDate(), time.getHours(), i, time.getSeconds()), minuteStep);
    }, [minuteStep, selectedTime]);
    const seconds = React__default.useMemo(() => {
        const time = selectedTime !== null && selectedTime !== void 0 ? selectedTime : new Date();
        return generateDataList(60, (i) => new Date(time.getFullYear(), time.getMonth(), time.getDate(), time.getHours(), time.getMinutes(), i), secondStep);
    }, [secondStep, selectedTime]);
    return (React__default.createElement("div", { className: cx('iui-time-picker', className), ...rest },
        React__default.createElement(TimePickerColumn, { data: hours, isSameFocused: (val) => isSameHour(val, focusedTime, use12Hours ? meridiem : undefined), isSameSelected: (val) => isSameHour(val, selectedTime, use12Hours ? meridiem : undefined), onFocusChange: onHourFocus, onSelectChange: onHourClick, setFocus: setFocusHour, valueRenderer: hourRenderer }),
        precision != 'hours' && (React__default.createElement(TimePickerColumn, { data: minutes, isSameFocused: (val) => isSameMinute(val, focusedTime), isSameSelected: (val) => isSameMinute(val, selectedTime), onFocusChange: (date) => setFocusedTime(date), onSelectChange: (date) => updateCurrentTime(date), valueRenderer: minuteRenderer })),
        precision == 'seconds' && (React__default.createElement(TimePickerColumn, { data: seconds, isSameFocused: (val) => isSameSecond(val, focusedTime), isSameSelected: (val) => isSameSecond(val, selectedTime), onFocusChange: (date) => setFocusedTime(date), onSelectChange: (date) => updateCurrentTime(date), valueRenderer: secondRenderer })),
        use12Hours && (React__default.createElement(TimePickerColumn, { data: ['AM', 'PM'], isSameFocused: (val) => isSameMeridiem(val, focusedTime), isSameSelected: (val) => isSameMeridiem(val, selectedTime), onFocusChange: (date) => onMeridiemFocus(date), onSelectChange: (value) => onMeridiemClick(value), valueRenderer: meridiemRenderer, className: 'iui-period' }))));
};
const TimePickerColumn = (props) => {
    const { data, onFocusChange, onSelectChange, isSameFocused, isSameSelected, setFocus = false, valueRenderer, className = 'iui-time', } = props;
    const needFocus = React__default.useRef(setFocus);
    // Used to focus row only when changed (keyboard navigation)
    // e.g. without this on every rerender it would be focused
    React__default.useEffect(() => {
        if (needFocus.current) {
            needFocus.current = false;
        }
    });
    const scrollIntoView = (ref, isSame) => {
        isSame && (ref === null || ref === void 0 ? void 0 : ref.scrollIntoView({ block: 'nearest', inline: 'nearest' }));
    };
    const handleTimeKeyDown = (event, maxValue, onFocus, onSelect, currentValue) => {
        switch (event.key) {
            case 'ArrowDown':
                if (currentValue + 1 > maxValue) {
                    break;
                }
                onFocus(currentValue + 1);
                needFocus.current = true;
                event.preventDefault();
                break;
            case 'ArrowUp':
                if (currentValue - 1 < 0) {
                    break;
                }
                onFocus(currentValue - 1);
                needFocus.current = true;
                event.preventDefault();
                break;
            case 'Enter':
            case ' ':
            case 'Spacebar':
                onSelect(currentValue);
                event.preventDefault();
                break;
        }
    };
    return (React__default.createElement("div", { className: className },
        React__default.createElement("ol", null, data.map((value, index) => {
            const isSameFocus = isSameFocused(value);
            return (React__default.createElement("li", { onKeyDown: (event) => {
                    handleTimeKeyDown(event, data.length - 1, (index) => onFocusChange(data[index]), (index) => onSelectChange(data[index]), index);
                }, className: cx({
                    'iui-selected': isSameSelected(value),
                }), key: index, tabIndex: isSameFocus ? 0 : undefined, ref: (ref) => {
                    scrollIntoView(ref, isSameFocus);
                    needFocus.current && isSameFocus && (ref === null || ref === void 0 ? void 0 : ref.focus());
                }, onClick: () => {
                    onSelectChange(value);
                } }, valueRenderer(value)));
        }))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const isSameDay = (a, b) => {
    return (a &&
        b &&
        a.getFullYear() === b.getFullYear() &&
        a.getMonth() === b.getMonth() &&
        a.getDate() === b.getDate());
};
const isInDateRange = (date, startDate, endDate) => {
    if (!date || !startDate || !endDate) {
        return false;
    }
    const minDate = new Date(startDate);
    const maxDate = new Date(endDate);
    const testDate = new Date(date);
    testDate && testDate.setHours(0, 0, 0, 0);
    minDate && minDate.setHours(0, 0, 0, 0);
    maxDate && maxDate.setHours(0, 0, 0, 0);
    return testDate > minDate && testDate < maxDate;
};
// compares to see if one date is earlier than another
const isBefore = (beforeDate, afterDate) => {
    if (!beforeDate || !afterDate) {
        return false;
    }
    const firstDate = new Date(beforeDate);
    const secondDate = new Date(afterDate);
    firstDate && firstDate.setHours(0, 0, 0, 0);
    secondDate && secondDate.setHours(0, 0, 0, 0);
    return firstDate < secondDate;
};
// Type guard for multiple did not work
const isSingleOnChange$1 = (onChange, enableRangeSelect) => {
    return !enableRangeSelect;
};
const defaultMonths = [
    'January',
    'February',
    'March',
    'April',
    'May',
    'June',
    'July',
    'August',
    'September',
    'October',
    'November',
    'December',
];
const defaultShortDays = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];
const defaultLongDays = [
    'Sunday',
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday',
];
/**
 * Date picker component
 * @example
 * <DatePicker date={new Date()} onChange={(e) => console.log('New date value: ' + e)} />
 */
const DatePicker = (props) => {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const { date, onChange, localizedNames, className, style, setFocus = false, showTime = false, use12Hours = false, precision, hourStep, minuteStep, secondStep, showYearSelection = false, enableRangeSelect = false, startDate, endDate, ...rest } = props;
    useTheme();
    const monthNames = (_a = localizedNames === null || localizedNames === void 0 ? void 0 : localizedNames.months) !== null && _a !== void 0 ? _a : defaultMonths;
    const shortDays = (_b = localizedNames === null || localizedNames === void 0 ? void 0 : localizedNames.shortDays) !== null && _b !== void 0 ? _b : defaultShortDays;
    const longDays = (_c = localizedNames === null || localizedNames === void 0 ? void 0 : localizedNames.days) !== null && _c !== void 0 ? _c : defaultLongDays;
    const [selectedDay, setSelectedDay] = React__default.useState(date);
    const [selectedStartDay, setSelectedStartDay] = React__default.useState(startDate);
    const [selectedEndDay, setSelectedEndDay] = React__default.useState(endDate);
    const [focusedDay, setFocusedDay] = React__default.useState((_d = selectedStartDay !== null && selectedStartDay !== void 0 ? selectedStartDay : selectedDay) !== null && _d !== void 0 ? _d : new Date());
    const [displayedMonthIndex, setDisplayedMonthIndex] = React__default.useState((_f = (_e = selectedStartDay === null || selectedStartDay === void 0 ? void 0 : selectedStartDay.getMonth()) !== null && _e !== void 0 ? _e : selectedDay === null || selectedDay === void 0 ? void 0 : selectedDay.getMonth()) !== null && _f !== void 0 ? _f : new Date().getMonth());
    const [displayedYear, setDisplayedYear] = React__default.useState((_h = (_g = selectedStartDay === null || selectedStartDay === void 0 ? void 0 : selectedStartDay.getFullYear()) !== null && _g !== void 0 ? _g : selectedDay === null || selectedDay === void 0 ? void 0 : selectedDay.getFullYear()) !== null && _h !== void 0 ? _h : new Date().getFullYear());
    // boolean that toggles between the user picking the start date and end date for date range
    const [isSelectingStartDate, setIsSelectingStartDate] = React__default.useState(true);
    // Used to focus days only when days are changed
    // e.g. without this, when changing months day would be focused
    const needFocus = React__default.useRef(setFocus);
    React__default.useEffect(() => {
        if (needFocus.current) {
            needFocus.current = false;
        }
    });
    const setMonthAndYear = React__default.useCallback((newMonth, newYear) => {
        setDisplayedMonthIndex(newMonth);
        setDisplayedYear(newYear);
    }, []);
    React__default.useEffect(() => {
        var _a, _b, _c, _d;
        const currentDate = new Date();
        setSelectedDay(date);
        setSelectedStartDay(startDate);
        setSelectedEndDay(endDate);
        if (!enableRangeSelect) {
            setFocusedDay(date !== null && date !== void 0 ? date : currentDate);
        }
        setMonthAndYear((_b = (_a = startDate === null || startDate === void 0 ? void 0 : startDate.getMonth()) !== null && _a !== void 0 ? _a : date === null || date === void 0 ? void 0 : date.getMonth()) !== null && _b !== void 0 ? _b : currentDate.getMonth(), (_d = (_c = startDate === null || startDate === void 0 ? void 0 : startDate.getFullYear()) !== null && _c !== void 0 ? _c : date === null || date === void 0 ? void 0 : date.getFullYear()) !== null && _d !== void 0 ? _d : currentDate.getFullYear());
    }, [date, setMonthAndYear, startDate, endDate, enableRangeSelect]);
    const days = React__default.useMemo(() => {
        let offsetToFirst = new Date(displayedYear, displayedMonthIndex, 1).getDay();
        // if its sunday, show one week before
        if (0 === offsetToFirst) {
            offsetToFirst = 7;
        }
        const daysInMonth = [];
        // generate 6 weeks of dates
        for (let i = 1; i <= 42; i++) {
            const adjustedDay = i - offsetToFirst;
            daysInMonth.push(new Date(displayedYear, displayedMonthIndex, adjustedDay));
        }
        return daysInMonth;
    }, [displayedMonthIndex, displayedYear]);
    const weeks = React__default.useMemo(() => {
        const weeksInMonth = [];
        const weekCount = Math.ceil(days.length / 7);
        for (let i = 0; i < weekCount; i++) {
            weeksInMonth.push(days.slice(i * 7, (i + 1) * 7));
        }
        return weeksInMonth;
    }, [days]);
    const getNewFocusedDate = (newYear, newMonth) => {
        var _a;
        const currentDate = (_a = selectedStartDay !== null && selectedStartDay !== void 0 ? selectedStartDay : selectedDay) !== null && _a !== void 0 ? _a : new Date();
        const newDate = new Date(newYear, newMonth, currentDate.getDate(), currentDate.getHours(), currentDate.getMinutes(), currentDate.getSeconds());
        return newDate;
    };
    const handleMoveToPreviousYear = () => {
        const newYear = displayedYear - 1;
        setMonthAndYear(displayedMonthIndex, newYear);
        setFocusedDay(getNewFocusedDate(newYear, displayedMonthIndex));
    };
    const handleMoveToNextYear = () => {
        const newYear = displayedYear + 1;
        setMonthAndYear(displayedMonthIndex, newYear);
        setFocusedDay(getNewFocusedDate(newYear, displayedMonthIndex));
    };
    const handleMoveToPreviousMonth = () => {
        const newMonth = displayedMonthIndex !== 0 ? displayedMonthIndex - 1 : 11;
        const newYear = displayedMonthIndex !== 0 ? displayedYear : displayedYear - 1;
        setMonthAndYear(newMonth, newYear);
        setFocusedDay(getNewFocusedDate(newYear, newMonth));
    };
    const handleMoveToNextMonth = () => {
        const newMonth = displayedMonthIndex !== 11 ? displayedMonthIndex + 1 : 0;
        const newYear = displayedMonthIndex !== 11 ? displayedYear : displayedYear + 1;
        setMonthAndYear(newMonth, newYear);
        setFocusedDay(getNewFocusedDate(newYear, newMonth));
    };
    const onDayClick = (day) => {
        // single date selection
        if (!enableRangeSelect) {
            if (day.getMonth() !== (selectedDay === null || selectedDay === void 0 ? void 0 : selectedDay.getMonth())) {
                setMonthAndYear(day.getMonth(), day.getFullYear());
            }
            const currentDate = selectedDay !== null && selectedDay !== void 0 ? selectedDay : new Date();
            const newDate = new Date(day.getFullYear(), day.getMonth(), day.getDate(), currentDate.getHours(), currentDate.getMinutes(), currentDate.getSeconds());
            setSelectedDay(newDate);
            setFocusedDay(newDate);
            isSingleOnChange$1(onChange, enableRangeSelect) && (onChange === null || onChange === void 0 ? void 0 : onChange(newDate));
        }
        // start date selection (date range only)
        else if (isSelectingStartDate) {
            if (day.getMonth() !== (selectedStartDay === null || selectedStartDay === void 0 ? void 0 : selectedStartDay.getMonth())) {
                setMonthAndYear(day.getMonth(), day.getFullYear());
            }
            const currentStartDate = selectedStartDay !== null && selectedStartDay !== void 0 ? selectedStartDay : new Date();
            const newStartDate = new Date(day.getFullYear(), day.getMonth(), day.getDate(), currentStartDate.getHours(), currentStartDate.getMinutes(), currentStartDate.getSeconds());
            setSelectedStartDay(newStartDate);
            setFocusedDay(newStartDate);
            // if the start date is after the end date or the end date is undefined, reset the end date
            if (!isBefore(newStartDate, selectedEndDay)) {
                setSelectedEndDay(newStartDate);
                onChange === null || onChange === void 0 ? void 0 : onChange(newStartDate, newStartDate);
            }
            else {
                selectedEndDay && (onChange === null || onChange === void 0 ? void 0 : onChange(newStartDate, selectedEndDay));
            }
            setIsSelectingStartDate(false);
        }
        // end date selection (date range only)
        else {
            if (day.getMonth() !== (selectedEndDay === null || selectedEndDay === void 0 ? void 0 : selectedEndDay.getMonth())) {
                setMonthAndYear(day.getMonth(), day.getFullYear());
            }
            const currentEndDate = selectedEndDay !== null && selectedEndDay !== void 0 ? selectedEndDay : new Date();
            const newEndDate = new Date(day.getFullYear(), day.getMonth(), day.getDate(), currentEndDate.getHours(), currentEndDate.getMinutes(), currentEndDate.getSeconds());
            setFocusedDay(newEndDate);
            // if the end date is before the start date, move back the start date and still have user select end date
            if (!isBefore(newEndDate, selectedStartDay)) {
                setSelectedEndDay(newEndDate);
                selectedStartDay && (onChange === null || onChange === void 0 ? void 0 : onChange(selectedStartDay, newEndDate));
                setIsSelectingStartDate(true);
            }
            else {
                setSelectedStartDay(newEndDate);
                selectedEndDay && (onChange === null || onChange === void 0 ? void 0 : onChange(newEndDate, selectedEndDay));
            }
        }
    };
    const handleCalendarKeyDown = (event) => {
        if (!focusedDay) {
            return;
        }
        const adjustedFocusedDay = new Date(focusedDay);
        switch (event.key) {
            case 'ArrowDown':
                adjustedFocusedDay.setDate(focusedDay.getDate() + 7);
                if (adjustedFocusedDay.getMonth() !== displayedMonthIndex) {
                    handleMoveToNextMonth();
                }
                setFocusedDay(adjustedFocusedDay);
                needFocus.current = true;
                event.preventDefault();
                break;
            case 'ArrowUp':
                adjustedFocusedDay.setDate(focusedDay.getDate() - 7);
                if (adjustedFocusedDay.getMonth() !== displayedMonthIndex) {
                    handleMoveToPreviousMonth();
                }
                setFocusedDay(adjustedFocusedDay);
                needFocus.current = true;
                event.preventDefault();
                break;
            case 'ArrowLeft':
                adjustedFocusedDay.setDate(focusedDay.getDate() - 1);
                if (adjustedFocusedDay.getMonth() !== displayedMonthIndex) {
                    handleMoveToPreviousMonth();
                }
                setFocusedDay(adjustedFocusedDay);
                needFocus.current = true;
                event.preventDefault();
                break;
            case 'ArrowRight':
                adjustedFocusedDay.setDate(focusedDay.getDate() + 1);
                if (adjustedFocusedDay.getMonth() !== displayedMonthIndex) {
                    handleMoveToNextMonth();
                }
                setFocusedDay(adjustedFocusedDay);
                needFocus.current = true;
                event.preventDefault();
                break;
            case 'Enter':
            case ' ':
            case 'Spacebar':
                onDayClick(focusedDay);
                event.preventDefault();
                break;
        }
    };
    const getDayClass = (day) => {
        if (day.getMonth() !== displayedMonthIndex) {
            return 'iui-calendar-day-outside-month';
        }
        let dayClass = 'iui-calendar-day';
        const isSelectedDay = isSameDay(day, selectedDay) ||
            (isSameDay(day, selectedStartDay) && isSameDay(day, selectedEndDay));
        if (isSelectedDay) {
            dayClass += '-selected';
        }
        else if (isSameDay(day, selectedStartDay)) {
            dayClass += '-range-start';
        }
        else if (isSameDay(day, selectedEndDay)) {
            dayClass += '-range-end';
        }
        // adds range class to dates between start and end date
        if (selectedStartDay &&
            selectedEndDay &&
            isInDateRange(day, selectedStartDay, selectedEndDay)) {
            dayClass += '-range';
        }
        if (isSameDay(day, new Date())) {
            dayClass += '-today';
        }
        return dayClass;
    };
    return (React__default.createElement("div", { className: cx('iui-date-picker', className), style: style, ...rest },
        React__default.createElement("div", null,
            React__default.createElement("div", { className: 'iui-calendar-month-year' },
                showYearSelection && (React__default.createElement(IconButton, { styleType: 'borderless', onClick: handleMoveToPreviousYear, "aria-label": 'Previous year', size: 'small' },
                    React__default.createElement(SvgChevronLeftDouble, null))),
                React__default.createElement(IconButton, { styleType: 'borderless', onClick: handleMoveToPreviousMonth, "aria-label": 'Previous month', size: 'small' },
                    React__default.createElement(SvgChevronLeft, null)),
                React__default.createElement("span", { "aria-live": 'polite' },
                    React__default.createElement("span", { className: 'iui-calendar-month', title: monthNames[displayedMonthIndex] }, monthNames[displayedMonthIndex]),
                    "\u00A0",
                    displayedYear),
                React__default.createElement(IconButton, { styleType: 'borderless', onClick: handleMoveToNextMonth, "aria-label": 'Next month', size: 'small' },
                    React__default.createElement(SvgChevronRight, null)),
                showYearSelection && (React__default.createElement(IconButton, { styleType: 'borderless', onClick: handleMoveToNextYear, "aria-label": 'Next year', size: 'small' },
                    React__default.createElement(SvgChevronRightDouble, null)))),
            React__default.createElement("div", { className: 'iui-calendar-weekdays' }, shortDays.map((day, index) => (React__default.createElement("div", { key: day, title: longDays[index] }, day)))),
            React__default.createElement("div", { onKeyDown: handleCalendarKeyDown, role: 'listbox' }, weeks.map((weekDays, weekIndex) => {
                return (React__default.createElement("div", { key: `week-${displayedMonthIndex}-${weekIndex}`, className: 'iui-calendar-week' }, weekDays.map((weekDay, dayIndex) => {
                    const dateValue = weekDay.getDate();
                    return (React__default.createElement("div", { key: `day-${displayedMonthIndex}-${dayIndex}`, className: getDayClass(weekDay), onClick: () => onDayClick(weekDay), role: 'option', tabIndex: isSameDay(weekDay, focusedDay) ? 0 : -1, ref: (element) => isSameDay(weekDay, focusedDay) &&
                            needFocus.current &&
                            (element === null || element === void 0 ? void 0 : element.focus()) }, dateValue));
                })));
            }))),
        showTime && (React__default.createElement(TimePicker, { date: selectedStartDay !== null && selectedStartDay !== void 0 ? selectedStartDay : selectedDay, use12Hours: use12Hours, precision: precision, hourStep: hourStep, minuteStep: minuteStep, secondStep: secondStep, onChange: (date) => {
                var _a, _b, _c, _d, _e, _f;
                return isSingleOnChange$1(onChange, enableRangeSelect)
                    ? onChange === null || onChange === void 0 ? void 0 : onChange(date)
                    : onChange === null || onChange === void 0 ? void 0 : onChange(new Date((_a = selectedStartDay === null || selectedStartDay === void 0 ? void 0 : selectedStartDay.getFullYear()) !== null && _a !== void 0 ? _a : date.getFullYear(), (_b = selectedStartDay === null || selectedStartDay === void 0 ? void 0 : selectedStartDay.getMonth()) !== null && _b !== void 0 ? _b : date.getMonth(), (_c = selectedStartDay === null || selectedStartDay === void 0 ? void 0 : selectedStartDay.getDate()) !== null && _c !== void 0 ? _c : date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()), new Date((_d = selectedEndDay === null || selectedEndDay === void 0 ? void 0 : selectedEndDay.getFullYear()) !== null && _d !== void 0 ? _d : date.getFullYear(), (_e = selectedEndDay === null || selectedEndDay === void 0 ? void 0 : selectedEndDay.getMonth()) !== null && _e !== void 0 ? _e : date.getMonth(), (_f = selectedEndDay === null || selectedEndDay === void 0 ? void 0 : selectedEndDay.getDate()) !== null && _f !== void 0 ? _f : date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));
            } }))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const DialogContext = React__default.createContext(undefined);
const useDialogContext = () => {
    return React__default.useContext(DialogContext) || {};
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Dialog title bar. Recommended to be used as a child of `Dialog`.
 * @example
 * <Dialog.TitleBar>My dialog title</Dialog.TitleBar>
 */
const DialogTitleBarTitle = React__default.forwardRef((props, ref) => {
    const { children, className, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-dialog-title', className), ref: ref, ...rest }, children));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const DialogDragContext = React__default.createContext(undefined);
const useDialogDragContext = () => {
    const context = React__default.useContext(DialogDragContext);
    return {
        ...context,
    };
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Dialog title bar. Recommended to be used as a child of `Dialog`.
 * @example
 * <Dialog.TitleBar title='My dialog title' />
 * @example
 * <Dialog.TitleBar>
 *   <Dialog.TitleBar.Title>My dialog title</Dialog.TitleBar.Title>
 *   <IconButton
 *     size='small'
 *     styleType='borderless'
 *     onClick={onClose}
 *     aria-label='Close'
 *   >
 *     <SvgClose />
 *   </IconButton>
 * </Dialog.TitleBar>
 */
const DialogTitleBar = Object.assign(React__default.forwardRef((props, ref) => {
    const dialogContext = useDialogContext();
    const { children, titleText, isDismissible = dialogContext.isDismissible, onClose = dialogContext.onClose, isDraggable = dialogContext.isDraggable, className, onPointerDown: onPointerDownProp, ...rest } = props;
    const { onPointerDown } = useDialogDragContext();
    const handlePointerDown = React__default.useCallback((event) => {
        onPointerDownProp === null || onPointerDownProp === void 0 ? void 0 : onPointerDownProp(event);
        if (!event.defaultPrevented) {
            onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);
        }
    }, [onPointerDown, onPointerDownProp]);
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-dialog-title-bar', className, {
            'iui-dialog-title-bar-filled': isDraggable,
        }), ref: ref, onPointerDown: handlePointerDown, ...rest }, children ? (children) : (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(DialogTitleBarTitle, null, titleText),
        isDismissible && (React__default.createElement(IconButton, { size: 'small', styleType: 'borderless', onClick: onClose, "aria-label": 'Close' },
            React__default.createElement(SvgClose, null)))))));
}), {
    Title: DialogTitleBarTitle,
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Container for content in `Dialog`. Recommended to be used as a child of `Dialog`.
 * @example
 * <Dialog.Content>
 *   My dialog content
 * </Dialog.Content>
 */
const DialogContent = React__default.forwardRef((props, ref) => {
    const { children, className, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-dialog-content', className), ref: ref, ...rest }, children));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Backdrop component for dialog. Recommended to be used with `Dialog`
 * then its visibility is being controlled by dialog's `isOpen` prop.
 * @example
 * <Dialog.Backdrop />
 */
const DialogBackdrop = React__default.forwardRef((props, ref) => {
    const dialogContext = useDialogContext();
    const { isVisible = dialogContext.isOpen, isDismissible = dialogContext.isDismissible, onClose = dialogContext.onClose, closeOnExternalClick = dialogContext.closeOnExternalClick, relativeTo = dialogContext.relativeTo, onMouseDown, className, style, ...rest } = props;
    const backdropRef = React__default.useRef(null);
    const refs = useMergedRefs(backdropRef, ref);
    const handleMouseDown = (event) => {
        // Prevents React from resetting its properties
        event.persist();
        if (event.target !== backdropRef.current) {
            return;
        }
        if (isDismissible && closeOnExternalClick && onClose) {
            onClose(event);
        }
        onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown(event);
    };
    return (React__default.createElement(Backdrop, { isVisible: isVisible, className: cx({
            'iui-backdrop-fixed': relativeTo === 'viewport',
        }, className), ref: refs, onMouseDown: handleMouseDown, style: {
            pointerEvents: 'auto',
            ...style,
        }, ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Container for Buttons in `Dialog`. Recommended to be used as a child of `Dialog`.
 * @example
 * <Dialog.ButtonBar>
 *   <Button styleType='high-visibility'>Confirm</Button>
 *   <Button>Close</Button>
 * </Dialog.ButtonBar>
 */
const DialogButtonBar = React__default.forwardRef((props, ref) => {
    const { children, className, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-dialog-button-bar', className), ref: ref, ...rest }, children));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const getContainerRect = (containerRef) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    const containerRect = (_a = containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();
    return {
        top: (_b = containerRect === null || containerRect === void 0 ? void 0 : containerRect.top) !== null && _b !== void 0 ? _b : 0,
        right: (_e = (_c = containerRect === null || containerRect === void 0 ? void 0 : containerRect.right) !== null && _c !== void 0 ? _c : (_d = getWindow()) === null || _d === void 0 ? void 0 : _d.innerWidth) !== null && _e !== void 0 ? _e : 0,
        bottom: (_h = (_f = containerRect === null || containerRect === void 0 ? void 0 : containerRect.bottom) !== null && _f !== void 0 ? _f : (_g = getWindow()) === null || _g === void 0 ? void 0 : _g.innerHeight) !== null && _h !== void 0 ? _h : 0,
        left: (_j = containerRect === null || containerRect === void 0 ? void 0 : containerRect.left) !== null && _j !== void 0 ? _j : 0,
    };
};
/**
 * Helper hook that handles elements drag logic.
 * @param elementRef Element ref that is draggable.
 * @param containerRect Bounding rectangle of container element that element can't go outside. If not passed window is used as a container.
 * @returns
 * `onPointerDown` - handler that is called when pointer is down and handles all the dragging logic.
 * `transform` - current transform of the element, it is used to preserve drag position when element visibility is being toggled.
 */
const useDragAndDrop = (elementRef, containerRef, enabled = true) => {
    const grabOffsetX = React__default.useRef(0);
    const grabOffsetY = React__default.useRef(0);
    const translateX = React__default.useRef();
    const translateY = React__default.useRef();
    const containerRectRef = React__default.useRef(getContainerRect(containerRef));
    const adjustTransform = React__default.useCallback(() => {
        var _a;
        if (!elementRef.current || !enabled) {
            return;
        }
        const { top, right, bottom, left, } = (_a = elementRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();
        let [newTranslateX, newTranslateY] = getTranslateValues(elementRef.current);
        containerRectRef.current = getContainerRect(containerRef);
        if (bottom > containerRectRef.current.bottom) {
            newTranslateY -= bottom - containerRectRef.current.bottom;
        }
        if (top < containerRectRef.current.top) {
            newTranslateY += containerRectRef.current.top - top;
        }
        if (right > containerRectRef.current.right) {
            newTranslateX -= right - containerRectRef.current.right;
        }
        if (left < containerRectRef.current.left) {
            newTranslateX += containerRectRef.current.left - left;
        }
        translateX.current = newTranslateX;
        translateY.current = newTranslateY;
        elementRef.current.style.transform = `translate(${newTranslateX}px, ${newTranslateY}px)`;
    }, [containerRef, elementRef, enabled]);
    const [resizeRef, resizeObserver] = useResizeObserver(adjustTransform);
    resizeRef(containerRef === null || containerRef === void 0 ? void 0 : containerRef.current);
    React__default.useEffect(() => {
        return () => {
            resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();
        };
    }, [resizeObserver]);
    useEventListener('resize', () => {
        adjustTransform();
        if (translateX.current != null && translateY.current != null) {
            setTransform(`translate(${translateX.current}px, ${translateY.current}px)`);
        }
    }, getWindow());
    const [transform, setTransform] = React__default.useState('');
    const onPointerMove = React__default.useRef((event) => {
        if (!elementRef.current) {
            return;
        }
        const newTranslateX = event.clientX - grabOffsetX.current;
        const newTranslateY = event.clientY - grabOffsetY.current;
        elementRef.current.style.transform = `translate(${newTranslateX}px, ${newTranslateY}px)`;
        adjustTransform();
    });
    const originalUserSelect = React__default.useRef('');
    const onPointerDown = React__default.useCallback((e) => {
        if (!elementRef.current || e.button !== 0 || !enabled) {
            return;
        }
        const [x, y] = getTranslateValues(elementRef.current);
        grabOffsetX.current = e.clientX - x;
        grabOffsetY.current = e.clientY - y;
        originalUserSelect.current = elementRef.current.style.userSelect;
        // Prevents from selecting inner content when dragging.
        elementRef.current.style.userSelect = 'none';
        elementRef.current.ownerDocument.addEventListener('pointermove', onPointerMove.current);
        elementRef.current.ownerDocument.addEventListener('pointerup', () => {
            setTransform(`translate(${translateX.current}px, ${translateY.current}px)`);
            document.removeEventListener('pointermove', onPointerMove.current);
            if (elementRef.current) {
                elementRef.current.style.userSelect = originalUserSelect.current;
            }
        }, { once: true });
    }, [elementRef, enabled]);
    return { onPointerDown, transform };
};
const useDragAndDrop$1 = useDragAndDrop;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Dialog component which can wrap any content.
 * @example
 * <Dialog.Main>
 *   <Dialog.TitleBar>
 *     My dialog title
 *   </Dialog.TitleBar>
 *   <Dialog.Content>
 *     Here is my dialog content
 *   </Dialog.Content>
 *   <Dialog.ButtonBar>
 *     <Button styleType='high-visibility'>
 *       Primary button
 *     </Button>
 *     <Button>
 *       Secondary button
 *     </Button>
 *   </Dialog.ButtonBar>
 * </Dialog.Main>
 */
const DialogMain = React__default.forwardRef((props, ref) => {
    const dialogContext = useDialogContext();
    const { className, children, styleType = 'default', isOpen = dialogContext.isOpen, isDismissible = dialogContext.isDismissible, onClose = dialogContext.onClose, closeOnEsc = dialogContext.closeOnEsc, trapFocus = dialogContext.trapFocus, setFocus = dialogContext.setFocus, preventDocumentScroll = dialogContext.preventDocumentScroll, onKeyDown, isDraggable = dialogContext.isDraggable, isResizable = dialogContext.isResizable, style: propStyle, ...rest } = props;
    useTheme();
    const [style, setStyle] = React__default.useState();
    const dialogRef = React__default.useRef(null);
    const refs = useMergedRefs(dialogRef, ref);
    const hasBeenResized = React__default.useRef(false);
    // Focuses dialog when opened and brings back focus to the previously focused element when closed.
    const previousFocusedElement = React__default.useRef();
    const setFocusRef = useLatestRef(setFocus);
    React__default.useEffect(() => {
        var _a, _b, _c;
        if (!setFocusRef.current) {
            return;
        }
        if (isOpen) {
            previousFocusedElement.current = (_a = dialogRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.activeElement;
            (_b = dialogRef.current) === null || _b === void 0 ? void 0 : _b.focus();
        }
        else {
            (_c = previousFocusedElement.current) === null || _c === void 0 ? void 0 : _c.focus();
        }
        const ref = dialogRef.current;
        return () => {
            var _a;
            (ref === null || ref === void 0 ? void 0 : ref.contains(document.activeElement)) &&
                ((_a = previousFocusedElement.current) === null || _a === void 0 ? void 0 : _a.focus());
        };
    }, [isOpen, setFocusRef]);
    const originalBodyOverflow = React__default.useRef('');
    React__default.useEffect(() => {
        if (isOpen) {
            originalBodyOverflow.current = document.body.style.overflow;
        }
    }, [isOpen]);
    // Prevents document from scrolling when the dialog is open.
    React__default.useEffect(() => {
        var _a;
        const ownerDocument = (_a = dialogRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument;
        // If there is no `ownerDocument` or `preventDocumentScroll` is false or
        // document body originally has `overflow: hidden` (possibly from other/parent dialog), then do nothing.
        if (!ownerDocument ||
            !preventDocumentScroll ||
            originalBodyOverflow.current === 'hidden') {
            return;
        }
        if (isOpen) {
            ownerDocument.body.style.overflow = 'hidden';
        }
        else {
            ownerDocument.body.style.overflow = originalBodyOverflow.current;
        }
        return () => {
            ownerDocument.body.style.overflow = originalBodyOverflow.current;
        };
    }, [isOpen, preventDocumentScroll]);
    const handleKeyDown = (event) => {
        // Prevents React from resetting its properties
        event.persist();
        if (isDismissible && closeOnEsc && event.key === 'Escape' && onClose) {
            onClose(event);
        }
        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);
    };
    const { onPointerDown, transform } = useDragAndDrop$1(dialogRef, dialogContext.dialogRootRef, isDraggable);
    const handlePointerDown = React__default.useCallback((event) => {
        if (isDraggable) {
            onPointerDown(event);
        }
    }, [isDraggable, onPointerDown]);
    // Prevents dialog from moving when window is being resized
    React__default.useLayoutEffect(() => {
        var _a;
        if (!isDraggable || !isOpen) {
            return;
        }
        const rect = (_a = dialogRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();
        const [translateX, translateY] = getTranslateValues(dialogRef.current);
        setStyle((oldStyle) => {
            var _a, _b;
            return ({
                ...oldStyle,
                width: rect === null || rect === void 0 ? void 0 : rect.width,
                height: rect === null || rect === void 0 ? void 0 : rect.height,
                left: (_a = dialogRef.current) === null || _a === void 0 ? void 0 : _a.offsetLeft,
                top: (_b = dialogRef.current) === null || _b === void 0 ? void 0 : _b.offsetTop,
                transform: `translate(${translateX}px,${translateY}px)`,
            });
        });
    }, [isDraggable, isOpen]);
    const setResizeStyle = React__default.useCallback((newStyle) => {
        setStyle((oldStyle) => ({
            ...oldStyle,
            ...newStyle,
        }));
    }, []);
    const content = (React__default.createElement("div", { className: cx('iui-dialog', {
            'iui-dialog-default': styleType === 'default',
            'iui-dialog-full-page': styleType === 'fullPage',
            'iui-dialog-visible': isOpen,
            'iui-dialog-draggable': isDraggable,
        }, className), role: 'dialog', ref: refs, onKeyDown: handleKeyDown, tabIndex: -1, style: {
            transform,
            overflow: 'unset',
            ...style,
            ...propStyle,
        }, ...rest },
        isResizable && (React__default.createElement(Resizer, { elementRef: dialogRef, containerRef: dialogContext.dialogRootRef, onResizeStart: () => {
                if (!hasBeenResized.current) {
                    hasBeenResized.current = true;
                    setResizeStyle({ maxWidth: '100%' });
                }
            }, onResizeEnd: setResizeStyle })),
        children));
    return (React__default.createElement(CSSTransition, { in: isOpen, classNames: 'iui-dialog-animation', timeout: { exit: 600 }, unmountOnExit: true, nodeRef: dialogRef },
        React__default.createElement(DialogDragContext.Provider, { value: { onPointerDown: handlePointerDown } },
            trapFocus && React__default.createElement(FocusTrap, null, content),
            !trapFocus && content)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Dialog component.
 * @example
 * <Dialog
 *   isOpen={isOpen}
 *   onClose={() => setIsOpen(false)}
 *   trapFocus
 *   preventDocumentScroll
 * >
 *   <Dialog.Backdrop />
 *   <Dialog.Main aria-modal>
 *    <Dialog.TitleBar>My dialog title</Dialog.TitleBar>
 *    <Dialog.Content>
 *      Here is my dialog content
 *    </Dialog.Content>
 *    <Dialog.ButtonBar>
 *      <Button styleType='high-visibility'>Confirm</Button>
 *      <Button>Close</Button>
 *    </Dialog.ButtonBar>
 *   </Dialog.Main>
 * </Dialog>
 */
const Dialog = Object.assign(React__default.forwardRef((props, ref) => {
    const { children, trapFocus = false, setFocus = false, preventDocumentScroll = false, isOpen = false, isDismissible = true, closeOnEsc = true, closeOnExternalClick = false, onClose, isDraggable = false, isResizable = false, relativeTo = 'viewport', className, style, ...rest } = props;
    const dialogRootRef = React__default.useRef(null);
    const refs = useMergedRefs(ref, dialogRootRef);
    return (React__default.createElement(DialogContext.Provider, { value: {
            isOpen,
            onClose,
            closeOnEsc,
            closeOnExternalClick,
            isDismissible,
            preventDocumentScroll,
            trapFocus,
            setFocus,
            isDraggable,
            isResizable,
            relativeTo,
            dialogRootRef,
        } },
        React__default.createElement("div", { className: cx('iui-dialog-wrapper', className), "data-iui-relative": relativeTo === 'container', ref: refs, style: {
                ...style,
            }, ...rest }, children)));
}), {
    Backdrop: DialogBackdrop,
    Main: DialogMain,
    TitleBar: DialogTitleBar,
    Content: DialogContent,
    ButtonBar: DialogButtonBar,
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * A stylized display to communicate common http errors and other non-ideal states.
 * Works well with svgs from @itwin/itwinui-illustrations-react.
 *
 * @example
 * <NonIdealState svg={<Svg404 />} heading='Not found' />
 */
const NonIdealState = (props) => {
    const { className, svg, heading, description, actions, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-non-ideal-state', className), ...rest },
        React__default.createElement("div", { className: 'iui-non-ideal-state-illustration' }, svg),
        heading && React__default.createElement("div", { className: 'iui-non-ideal-state-title' }, heading),
        description && (React__default.createElement("div", { className: 'iui-non-ideal-state-description' }, description)),
        actions && React__default.createElement("div", { className: 'iui-non-ideal-state-actions' }, actions)));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Container that allows content to be hidden behind a brief title and a caption.
 * @example
 * <ExpandableBlock title='Basic Block'>Content in block!</ExpandableBlock>
 * <ExpandableBlock title='Basic Block' caption='basic caption'>Content in block!</ExpandableBlock>
 * <ExpandableBlock title='Default Expanded Block' caption='basic caption' isExpanded={true}>Content in block!</ExpandableBlock>
 * <ExpandableBlock title='Positive status' status='positive'>Content</ExpandableBlock>
 * <ExpandableBlock title='Block with icon' endIcon={<SvgPlaceholder />}>Content</ExpandableBlock>
 */
const ExpandableBlock = (props) => {
    const { caption, children, className, title, onToggle, style, isExpanded = false, endIcon, status, size = 'default', styleType = 'default', ...rest } = props;
    useTheme();
    const icon = endIcon !== null && endIcon !== void 0 ? endIcon : (status && StatusIconMap[status]());
    const [expanded, setExpanded] = React__default.useState(isExpanded);
    React__default.useEffect(() => {
        setExpanded(isExpanded);
    }, [isExpanded]);
    const handleToggle = () => {
        setExpanded(!expanded);
        onToggle === null || onToggle === void 0 ? void 0 : onToggle(!expanded);
    };
    const onKeyDown = (event) => {
        if (event.key === 'Enter' ||
            event.key === ' ' ||
            event.key === 'Spacebar') {
            handleToggle();
        }
    };
    return (React__default.createElement("div", { className: cx('iui-expandable-block', {
            'iui-with-caption': !!caption,
            'iui-expanded': expanded,
            'iui-small': size === 'small',
            'iui-borderless': styleType === 'borderless',
        }, className), style: style, ...rest },
        React__default.createElement("div", { "aria-expanded": expanded, className: 'iui-header', tabIndex: 0, onClick: handleToggle, onKeyDown: onKeyDown },
            React__default.createElement(SvgChevronRight, { className: 'iui-icon', "aria-hidden": true }),
            React__default.createElement("span", { className: 'iui-expandable-block-label' },
                React__default.createElement("div", { className: 'iui-title' }, title),
                caption && React__default.createElement("div", { className: 'iui-caption' }, caption)),
            icon &&
                React__default.cloneElement(icon, {
                    className: cx('iui-status-icon', icon.props.className),
                    'data-iui-icon-color': status,
                })),
        React__default.createElement(WithCSSTransition, { in: expanded },
            React__default.createElement("div", { className: 'iui-expandable-content' },
                React__default.createElement("div", null, children)))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Fieldset component to group several inputs, controls and labels within a form.
 * @example
 * <Fieldset legend='Settings'>
 *   <Input />
 *   <InputGroup>
 *     <ToggleSwitch />
 *     <ToggleSwitch />
 *   </InputGroup>
 * </Fieldset>
 */
const Fieldset = (props) => {
    const { children, className, disabled, legend, ...rest } = props;
    useTheme();
    return (React__default.createElement("fieldset", { className: cx('iui-fieldset', className), disabled: disabled, ...rest },
        legend && React__default.createElement("legend", null, legend),
        disabled
            ? React__default.Children.map(children, (child) => React__default.isValidElement(child)
                ? React__default.cloneElement(child, { disabled: true })
                : child)
            : children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * File upload component to be wrapped around `FileUploadTemplate` or any arbitrary component.
 * Provides support for dragging and dropping multiple files.
 * @example
 * <FileUpload onFileDropped={console.log}><FileUploadTemplate /></FileUpload>
 * <FileUpload dragContent='Drop file here' onFileDropped={console.log}><Textarea /></FileUpload>
 */
const FileUpload = React__default.forwardRef((props, ref) => {
    const { dragContent, children, onFileDropped, className, ...rest } = props;
    useTheme();
    const [isDragActive, setIsDragActive] = React__default.useState(false);
    const fileUploadRef = React__default.useRef(null);
    const refs = useMergedRefs(fileUploadRef, ref);
    const onDragOverHandler = (e) => {
        e.preventDefault();
        e.stopPropagation();
    };
    const onDragEnterHandler = (e) => {
        var _a, _b, _c;
        e.preventDefault();
        e.stopPropagation();
        // only set active if a file is dragged over
        if (!isDragActive && ((_c = (_b = (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.items) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.kind) === 'file') {
            setIsDragActive(true);
        }
    };
    const onDragLeaveHandler = (e) => {
        var _a;
        e.preventDefault();
        e.stopPropagation();
        // only set inactive if secondary target is outside the component
        if (isDragActive &&
            !((_a = fileUploadRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget))) {
            setIsDragActive(false);
        }
    };
    const onDropHandler = (e) => {
        var _a;
        e.preventDefault();
        e.stopPropagation();
        if (isDragActive) {
            setIsDragActive(false);
            onFileDropped((_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.files);
        }
    };
    return (React__default.createElement("div", { className: cx('iui-file-upload', { 'iui-drag': isDragActive }, className), onDragEnter: onDragEnterHandler, onDragOver: onDragOverHandler, onDragLeave: onDragLeaveHandler, onDrop: onDropHandler, ref: refs, ...rest },
        dragContent ? children : React__default.createElement("div", { className: 'iui-content' }, children),
        dragContent && React__default.createElement("div", { className: 'iui-content' }, dragContent)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Default template to be used with the `FileUpload` wrapper component.
 * Contains a hidden input with styled labels (customizable).
 * @example
 * <FileUploadTemplate onChange={(e) => console.log(e.target.files)} />
 */
const FileUploadTemplate = (props) => {
    const { onChange, acceptMultiple = true, acceptType, label = 'Choose a file', subtitle = 'or drag & drop it here.', children, } = props;
    useTheme();
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(SvgUpload, { className: 'iui-icon', "aria-hidden": true }),
        React__default.createElement("div", { className: 'iui-template-text' },
            React__default.createElement("label", { className: 'iui-anchor' },
                React__default.createElement("input", { className: 'iui-browse-input', type: 'file', onChange: onChange, multiple: acceptMultiple, accept: acceptType }),
                label),
            React__default.createElement("div", null, subtitle),
            children)));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Footer item. Recommended to use inside `Footer.List`.
 */
const FooterItem = (props) => {
    const { children, className, ...rest } = props;
    useTheme();
    return (React__default.createElement("li", { className: cx('iui-legal-footer-item', className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Footer separator. Recommended to use inside `Footer.List`.
 */
const FooterSeparator = (props) => {
    const { className, ...rest } = props;
    useTheme();
    return (React__default.createElement("li", { className: cx('iui-legal-footer-separator', className), "aria-hidden": true, ...rest }));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Footer list. Recommended to use inside `Footer` with `Footer.Item` and `Footer.Separator`.
 */
const FooterList = (props) => {
    const { className, children, ...rest } = props;
    useTheme();
    return (React__default.createElement("ul", { className: cx('iui-legal-footer-list', className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const footerTranslations = {
    cookies: 'Cookies',
    legalNotices: 'Legal notices',
    privacy: 'Privacy',
    termsOfService: 'Terms of service',
    termsOfUse: 'Terms of use',
};
const defaultFooterElements = [
    {
        key: 'copyright',
        title: `© ${new Date().getFullYear()} Bentley Systems, Incorporated`,
    },
    {
        key: 'termsOfService',
        title: footerTranslations.termsOfService,
        url: 'https://connect-agreementportal.bentley.com/AgreementApp/Home/Eula/view/readonly/BentleyConnect',
    },
    {
        key: 'privacy',
        title: footerTranslations.privacy,
        url: 'https://www.bentley.com/en/privacy-policy',
    },
    {
        key: 'termsOfUse',
        title: footerTranslations.termsOfUse,
        url: 'https://www.bentley.com/en/terms-of-use-and-select-online-agreement',
    },
    {
        key: 'cookies',
        title: footerTranslations.cookies,
        url: 'https://www.bentley.com/en/cookie-policy',
    },
    {
        key: 'legalNotices',
        title: footerTranslations.legalNotices,
        url: 'https://connect.bentley.com/Legal',
    },
];
/**
 * Footer element with all needed legal and info links.
 * Be sure to place it manually at the bottom of your page.
 * You can use position 'absolute' with relative body or set the height of the content and place footer at the end.
 * @example <caption>Appending custom element after default elements</caption>
 * <Footer customElements={[{title: 'Bentley', url: 'https://www.bentley.com/'}]} />
 * @example <caption>Returning only custom elements</caption>
 * <Footer customElements={() => newFooterElements)} />
 * @example <caption>Filtering out a specific element</caption>
 * <Footer customElements={(defaultElements) => defaultElements.filter(({ key }) => key !== 'privacy' )} />
 * @example <caption>Changing a url</caption>
 * <Footer customElements={(defaultElements) => defaultElements.map(element => ({ ...element, url: element.key === 'privacy' ? customPrivacyUrl : element.url }))} />
 */
const Footer = Object.assign((props) => {
    const { children, customElements, translatedTitles, className, ...rest } = props;
    useTheme();
    const titles = { ...footerTranslations, ...translatedTitles };
    const translatedElements = defaultFooterElements.map((element) => {
        if (element.key && titles.hasOwnProperty(element.key)) {
            const key = element.key;
            return {
                ...element,
                title: titles[key],
            };
        }
        return element;
    });
    let elements = translatedElements;
    if (customElements) {
        elements =
            typeof customElements === 'function'
                ? customElements(translatedElements)
                : [...translatedElements, ...customElements];
    }
    return (React__default.createElement("footer", { className: cx('iui-legal-footer', className), ...rest }, children ? (children) : (React__default.createElement(FooterList, null, elements.map((element, index) => {
        return (React__default.createElement(React__default.Fragment, { key: element.key || `${element.title}-${index}` },
            index > 0 && React__default.createElement(FooterSeparator, null),
            React__default.createElement(FooterItem, null, element.url ? (React__default.createElement("a", { href: element.url, target: '_blank', rel: 'noreferrer' }, element.title)) : (element.title))));
    })))));
}, {
    List: FooterList,
    Item: FooterItem,
    Separator: FooterSeparator,
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const defaultTranslations = {
    moreOptions: 'More options',
};
/**
 * Application header
 * @example
 * <Header
 *  appLogo={<HeaderLogo logo={<SvgImodelHollow />}>iTwin Application</HeaderLogo>}
 *  breadcrumbs={
 *   <HeaderBreadcrumbs items={[
 *    <HeaderButton key='project' name='Project A' />
 *    <HeaderButton key='imodel' name='IModel X' />
 *   ]} />
 *  }
 *  actions={[
 *   <IconButton><SvgNotification /></IconButton>,
 *   <DropdownMenu>
 *    <IconButton>
 *     <SvgHelpCircularHollow />
 *    </IconButton>
 *   </DropdownMenu>,
 *   <DropdownMenu menuItems={...}>
 *    <IconButton styleType='borderless'>
 *     <Avatar ... />
 *    </IconButton>
 *   </DropdownMenu>
 *  ]}
 *  isSlim
 * />
 */
const Header = (props) => {
    const { appLogo, breadcrumbs, isSlim = false, actions, userIcon, menuItems, translatedStrings, className, children, ...rest } = props;
    useTheme();
    const headerTranslations = { ...defaultTranslations, ...translatedStrings };
    return (React__default.createElement("header", { className: cx('iui-page-header', className), "data-iui-size": isSlim ? 'slim' : undefined, ...rest },
        React__default.createElement("div", { className: 'iui-page-header-left' },
            appLogo,
            breadcrumbs && React__default.createElement("div", { className: 'iui-page-header-divider' }),
            breadcrumbs),
        children && React__default.createElement("div", { className: 'iui-page-header-center' }, children),
        React__default.createElement("div", { className: 'iui-page-header-right' },
            actions,
            userIcon,
            menuItems && (React__default.createElement(DropdownMenu, { menuItems: menuItems },
                React__default.createElement(IconButton, { styleType: 'borderless', "aria-label": headerTranslations.moreOptions },
                    React__default.createElement(SvgMoreVertical, { "aria-hidden": true })))))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const HeaderBasicButton = React__default.forwardRef((props, ref) => {
    const { onClick, className, children, style, type = 'button', startIcon, endIcon, as: Element = 'button', styleType, size, ...rest } = props;
    useTheme();
    return (React__default.createElement(Element, { className: cx('iui-header-breadcrumb-button', className), onClick: onClick, ref: ref, type: type, style: style, ...rest },
        startIcon &&
            React__default.cloneElement(startIcon, {
                className: startIcon.props.className,
            }),
        children,
        endIcon &&
            React__default.cloneElement(endIcon, {
                className: endIcon.props.className,
            })));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const HeaderSplitButton = React__default.forwardRef((props, forwardedRef) => {
    const { menuItems, className, menuPlacement = 'bottom-end', children, style, title, disabled, ...rest } = props;
    useTheme();
    const [isMenuOpen, setIsMenuOpen] = React__default.useState(false);
    const [menuWidth, setMenuWidth] = React__default.useState(0);
    const ref = React__default.useRef(null);
    React__default.useEffect(() => {
        if (ref.current) {
            setMenuWidth(ref.current.offsetWidth);
        }
    }, [children]);
    return (React__default.createElement("span", { className: cx('iui-header-breadcrumb-button-wrapper', className), style: style, title: title, ref: ref },
        React__default.createElement(HeaderBasicButton, { ref: forwardedRef, disabled: disabled, ...rest }, children),
        React__default.createElement(DropdownMenu, { placement: menuPlacement, menuItems: menuItems, style: { minWidth: menuWidth }, onShow: React__default.useCallback(() => setIsMenuOpen(true), []), onHide: React__default.useCallback(() => setIsMenuOpen(false), []) },
            React__default.createElement("button", { className: 'iui-header-breadcrumb-button iui-header-breadcrumb-button-split', disabled: disabled }, isMenuOpen ? (React__default.createElement(SvgCaretUpSmall, { className: 'iui-header-breadcrumb-button-dropdown-icon', "aria-hidden": true })) : (React__default.createElement(SvgCaretDownSmall, { className: 'iui-header-breadcrumb-button-dropdown-icon', "aria-hidden": true }))))));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const HeaderDropdownButton = React__default.forwardRef((props, ref) => {
    const { menuItems, className, children, ...rest } = props;
    useTheme();
    const [isMenuOpen, setIsMenuOpen] = React__default.useState(false);
    const [menuWidth, setMenuWidth] = React__default.useState(0);
    const buttonRef = React__default.useRef(null);
    const refs = useMergedRefs(ref, buttonRef);
    React__default.useEffect(() => {
        if (buttonRef.current) {
            setMenuWidth(buttonRef.current.offsetWidth);
        }
    }, [children]);
    return (React__default.createElement(DropdownMenu, { menuItems: menuItems, style: { minWidth: menuWidth }, onShow: () => setIsMenuOpen(true), onHide: () => setIsMenuOpen(false) },
        React__default.createElement(HeaderBasicButton, { className: cx('iui-header-breadcrumb-button', className), ref: refs, "aria-label": 'Dropdown', endIcon: isMenuOpen ? (React__default.createElement(SvgCaretUpSmall, { className: 'iui-header-breadcrumb-button-dropdown-icon', "aria-hidden": true })) : (React__default.createElement(SvgCaretDownSmall, { className: 'iui-header-breadcrumb-button-dropdown-icon', "aria-hidden": true })), ...rest }, children)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const isSplitButton = (props) => {
    return !!props.menuItems && !!props.onClick;
};
const isDropdownButton = (props) => {
    return !!props.menuItems;
};
/**
 * Header button that handles slim state of the `Header` it's in.
 * When in slim mode, will only display the name and reduce icon size.
 * Will display an arrow on the right if `menuItems` prop is provided.
 * @example
 * <HeaderButton name='Project A' description='0n00434' menuItems={...} />
 * <HeaderButton name='Project B' description='0n00434' startIcon={<SvgImodelHollow />} />
 * <HeaderButton name='Project C' startIcon={<img style={{ objectFit: 'cover' }} src='project.png' />} />
 * <HeaderButton name='Project D' isActive />
 */
const HeaderButton = React__default.forwardRef((props, ref) => {
    const { name, description, isActive = false, className, startIcon, menuItems, disabled, ...rest } = props;
    useTheme();
    const buttonProps = {
        startIcon: React__default.isValidElement(startIcon)
            ? React__default.cloneElement(startIcon, {
                className: cx('iui-header-breadcrumb-button-icon', startIcon.props.className),
            })
            : undefined,
        className: className,
        children: (React__default.createElement("span", { className: 'iui-header-breadcrumb-button-text' },
            React__default.createElement("span", { className: 'iui-header-breadcrumb-button-text-label' }, name),
            description && (React__default.createElement("span", { className: 'iui-header-breadcrumb-button-text-sublabel' }, description)))),
        ref: ref,
        disabled: disabled,
        ...(!!menuItems && { menuItems }),
        ...rest,
    };
    const headerButton = isSplitButton(buttonProps) ? (React__default.createElement(HeaderSplitButton, { ...buttonProps })) : isDropdownButton(buttonProps) ? (React__default.createElement(HeaderDropdownButton, { ...buttonProps })) : (React__default.createElement(HeaderBasicButton, { ...buttonProps }));
    return (React__default.createElement("li", { className: 'iui-header-breadcrumb-item', "aria-current": isActive ? 'location' : undefined, "aria-disabled": disabled ? 'true' : undefined }, headerButton));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Header Title section
 * @example
 * <HeaderLogo logo={<SvgImodelHollow />}>iTwin Application</HeaderLogo>
 * <HeaderLogo logo={<SvgImodelHollow />} />
 * <HeaderLogo logo={<img src='image.png' />} />
 * <HeaderLogo logo={<img src='data:image/png;base64,...' />}>Downloaded Image</HeaderLogo>
 */
const HeaderLogo = (props) => {
    const { className, children, logo, onClick, ...rest } = props;
    const keyDownHandler = (e) => {
        if (onClick &&
            (e.key === 'Enter' || e.key === ' ' || e.key === 'Spacebar')) {
            e.preventDefault();
            onClick();
        }
    };
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-header-brand', className), role: onClick && 'button', tabIndex: onClick && 0, onKeyDown: keyDownHandler, onClick: onClick, ...rest },
        React__default.isValidElement(logo)
            ? React__default.cloneElement(logo, {
                className: cx('iui-header-brand-icon', logo.props.className),
            })
            : undefined,
        children && React__default.createElement("span", { className: 'iui-header-brand-label' }, children)));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Header breadcrumbs, adds chevron between each provided items.
 * @example
 * <HeaderBreadcrumbs
 *   items={[
 *     <HeaderButton key={...} ... />
 *     <HeaderButton key={...} ... />
 *   ]}
 * />
 */
const HeaderBreadcrumbs = (props) => {
    const { items, ...rest } = props;
    useTheme();
    return (React__default.createElement("nav", { "aria-label": 'breadcrumbs', className: 'iui-header-breadcrumbs', ...rest },
        React__default.createElement("ol", { className: 'iui-header-breadcrumbs-list' }, items.reduce((previous, current, index) => [
            ...previous,
            current,
            index !== items.length - 1 && (React__default.createElement("li", { className: 'iui-breadcrumbs-separator', key: index },
                React__default.createElement(SvgChevronRight, { key: `chevron${index}`, "aria-hidden": true, className: 'iui-chevron' }))),
        ], []))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Individual tab component to be used in the `labels` prop of `Tabs`.
 * @example
 * const tabs = [
 *   <Tab label='Label 1' sublabel='Description 1' />,
 *   <Tab label='Label 2' startIcon={<SvgPlaceholder />} />,
 * ];
 */
const Tab = (props) => {
    const { label, sublabel, startIcon, children, className, ...rest } = props;
    useTheme();
    return (React__default.createElement("button", { className: cx('iui-tab', className), role: 'tab', tabIndex: -1, ...rest },
        startIcon &&
            React__default.cloneElement(startIcon, {
                className: 'iui-tab-icon',
                'aria-hidden': true,
            }),
        label && (React__default.createElement("span", { className: 'iui-tab-label' },
            React__default.createElement("div", null, label),
            sublabel && React__default.createElement("div", { className: 'iui-tab-description' }, sublabel))),
        children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Tabs organize and allow navigation between groups of content that are related and at the same level of hierarchy.
 * @example
 * const tabs = [
 *   <Tab label='Label 1' />,
 *   <Tab label='Label 2' />,
 *   <Tab label='Label 3' />,
 * ];
 * <Tabs labels={tabs} />
 *
 * @example
 * <Tabs orientation='vertical' labels={tabs} />
 *
 * @example
 * const tabsWithSublabels = [
 *   <Tab label='Label 1' sublabel='First tab' />,
 *   <Tab label='Label 2' sublabel='Active tab' />,
 * ];
 * <Tabs labels={tabsWithSublabels} activeIndex={1} />
 *
 * @example
 * const tabsWithIcons = [
 *   <Tab label='Label 1' icon={<SvgPlaceholder />} />,
 *   <Tab label='Label 2' icon={<SvgPlaceholder />} />,
 * ];
 * <Tabs labels={tabsWithIcons} type='pill' />
 */
const Tabs = (props) => {
    const { labels, activeIndex, onTabSelected, focusActivationMode = 'auto', type = 'default', color = 'blue', orientation = 'horizontal', tabsClassName, contentClassName, wrapperClassName, children, ...rest } = props;
    useTheme();
    const tablistRef = React__default.useRef(null);
    const [tablistSizeRef, tabsWidth] = useContainerWidth(type !== 'default');
    const refs = useMergedRefs(tablistRef, tablistSizeRef);
    const [currentActiveIndex, setCurrentActiveIndex] = React__default.useState(() => activeIndex != null
        ? getBoundedValue(activeIndex, 0, labels.length - 1)
        : 0);
    React__default.useLayoutEffect(() => {
        if (activeIndex != null && currentActiveIndex !== activeIndex) {
            setCurrentActiveIndex(getBoundedValue(activeIndex, 0, labels.length - 1));
        }
    }, [activeIndex, currentActiveIndex, labels.length]);
    // CSS custom properties to place the active stripe
    const [stripeProperties, setStripeProperties] = React__default.useState({});
    React__default.useLayoutEffect(() => {
        if (type !== 'default' && tablistRef.current != undefined) {
            const activeTab = tablistRef.current.children[currentActiveIndex];
            const activeTabRect = activeTab.getBoundingClientRect();
            setStripeProperties({
                ...(orientation === 'horizontal' && {
                    '--stripe-width': `${activeTabRect.width}px`,
                    '--stripe-left': `${activeTab.offsetLeft}px`,
                }),
                ...(orientation === 'vertical' && {
                    '--stripe-height': `${activeTabRect.height}px`,
                    '--stripe-top': `${activeTab.offsetTop}px`,
                }),
            });
        }
    }, [currentActiveIndex, type, orientation, tabsWidth]);
    const [focusedIndex, setFocusedIndex] = React__default.useState();
    React__default.useEffect(() => {
        if (tablistRef.current && focusedIndex !== undefined) {
            const tab = tablistRef.current.querySelectorAll('.iui-tab')[focusedIndex];
            tab === null || tab === void 0 ? void 0 : tab.focus();
        }
    }, [focusedIndex]);
    const [hasSublabel, setHasSublabel] = React__default.useState(false); // used for setting size
    React__default.useLayoutEffect(() => {
        var _a;
        setHasSublabel(type !== 'pill' && // pill tabs should never have sublabels
            !!((_a = tablistRef.current) === null || _a === void 0 ? void 0 : _a.querySelector('.iui-tab-description')));
    }, [type]);
    const onTabClick = (index) => {
        if (onTabSelected) {
            onTabSelected(index);
        }
        setCurrentActiveIndex(index);
    };
    const onKeyDown = (event) => {
        // alt + arrow keys are used by browser / assistive technologies
        if (event.altKey) {
            return;
        }
        const isTabDisabled = (index) => {
            const tab = labels[index];
            return React__default.isValidElement(tab) && tab.props.disabled;
        };
        let newIndex = focusedIndex !== null && focusedIndex !== void 0 ? focusedIndex : currentActiveIndex;
        /** focus next tab if delta is +1, previous tab if -1 */
        const focusTab = (delta = +1) => {
            do {
                newIndex = (newIndex + delta + labels.length) % labels.length;
            } while (isTabDisabled(newIndex) && newIndex !== focusedIndex);
            setFocusedIndex(newIndex);
            focusActivationMode === 'auto' && onTabClick(newIndex);
        };
        switch (event.key) {
            case 'ArrowDown': {
                if (orientation === 'vertical') {
                    focusTab(+1);
                    event.preventDefault();
                }
                break;
            }
            case 'ArrowRight': {
                if (orientation === 'horizontal') {
                    focusTab(+1);
                    event.preventDefault();
                }
                break;
            }
            case 'ArrowUp': {
                if (orientation === 'vertical') {
                    focusTab(-1);
                    event.preventDefault();
                }
                break;
            }
            case 'ArrowLeft': {
                if (orientation === 'horizontal') {
                    focusTab(-1);
                    event.preventDefault();
                }
                break;
            }
            case 'Enter':
            case ' ':
            case 'Spacebar': {
                event.preventDefault();
                if (focusActivationMode === 'manual' && focusedIndex !== undefined) {
                    onTabClick(focusedIndex);
                }
                break;
            }
        }
    };
    return (React__default.createElement("div", { className: cx('iui-tabs-wrapper', `iui-${orientation}`, wrapperClassName), style: stripeProperties },
        React__default.createElement("ul", { className: cx('iui-tabs', `iui-${type}`, {
                'iui-green': color === 'green',
                'iui-animated': type !== 'default',
                'iui-large': hasSublabel,
            }, tabsClassName), role: 'tablist', ref: refs, onKeyDown: onKeyDown, ...rest }, labels.map((label, index) => {
            const onClick = () => {
                setFocusedIndex(index);
                onTabClick(index);
            };
            return (React__default.createElement("li", { key: index }, !React__default.isValidElement(label) ? (React__default.createElement(Tab, { label: label, className: cx({
                    'iui-active': index === currentActiveIndex,
                }), tabIndex: index === currentActiveIndex ? 0 : -1, onClick: onClick, "aria-selected": index === currentActiveIndex })) : (React__default.cloneElement(label, {
                className: cx(label.props.className, {
                    'iui-active': index === currentActiveIndex,
                }),
                'aria-selected': index === currentActiveIndex,
                tabIndex: index === currentActiveIndex ? 0 : -1,
                onClick: (args) => {
                    var _a, _b;
                    onClick();
                    (_b = (_a = label.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, args);
                },
            }))));
        })),
        children && (React__default.createElement("div", { className: cx('iui-tabs-content', contentClassName), role: 'tabpanel' }, children))));
};
/**
 * @deprecated Since v2, directly use `Tabs` with `orientation: 'horizontal'`
 *
 * Tabs organize and allow navigation between groups of content that are related and at the same level of hierarchy.
 * @example
 * const tabs = [
 *   <Tab label='Label 1' sublabel='First tab' />,
 *   <Tab label='Label 2' sublabel='Active tab' />,
 *   <Tab label='Label 3' sublabel='Disabled tab' disabled icon={<SvgPlaceholder />} />,
 * ];
 * <HorizontalTabs labels={tabs} activeIndex={1}>Tabpanel content</HorizontalTabs>
 */
const HorizontalTabs = (props) => (React__default.createElement(Tabs, { orientation: 'horizontal', ...props }));

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * InformationPanel provides a way to view additional content or attributes
 * without leaving the main content area (e.g. Table).
 *
 * The panel appears as an overlay on top of the main content.
 * @example
 * <InformationPanelWrapper>
 *   <Table ... /> // component to overlay
 *   <InformationPanel isOpen={true}>
 *     <InformationPanelHeader onClose={() => {}}>
 *       <Text variant='subheading'>InfoPanel heading</Text>
 *     </InformationPanelHeader>
 *     <InformationPanelBody>
 *       <Text>Metadata</Text>
 *       <InformationPanelContent ... />
 *       <Text>Attributes</Text>
 *       <InformationPanelContent ... />
 *     </InformationPanelBody>
 *   </InformationPanel>
 * </InformationPanelWrapper>
 */
const InformationPanel = React__default.forwardRef((props, ref) => {
    const { className, isOpen = false, orientation = 'vertical', resizable = true, children, ...rest } = props;
    useTheme();
    const infoPanelRef = React__default.useRef(null);
    const refs = useMergedRefs(ref, infoPanelRef);
    const startResize = (e) => {
        if (!infoPanelRef.current) {
            return;
        }
        if (e.button != undefined && e.button !== 0) {
            return;
        }
        e.preventDefault();
        e.stopPropagation();
        infoPanelRef.current.ownerDocument.addEventListener('pointermove', onResize);
        infoPanelRef.current.ownerDocument.addEventListener('pointerup', () => {
            var _a;
            return (_a = infoPanelRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.removeEventListener('pointermove', onResize);
        }, { once: true });
    };
    const onResize = React__default.useCallback((e) => {
        e.preventDefault();
        if (!infoPanelRef.current) {
            return;
        }
        const { right, bottom } = infoPanelRef.current.getBoundingClientRect();
        if (orientation === 'vertical') {
            infoPanelRef.current.style.width = `${right - e.clientX}px`;
        }
        else {
            infoPanelRef.current.style.height = `${bottom - e.clientY}px`;
        }
    }, [orientation]);
    return (React__default.createElement("div", { className: cx('iui-information-panel', {
            'iui-right': orientation === 'vertical',
            'iui-bottom': orientation === 'horizontal',
            'iui-visible': isOpen,
        }, className), ref: refs, ...rest },
        resizable && (React__default.createElement("div", { className: 'iui-resizer', onPointerDown: startResize },
            React__default.createElement("div", { className: 'iui-resizer-bar' }))),
        children));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * InformationPanelWrapper should contain the `InformationPanel`
 * and the component over which the panel will overlay.
 * @example
 * <InformationPanelWrapper>
 *   <Table ... />
 *   <InformationPanel ... />
 * </InformationPanelWrapper>
 */
const InformationPanelWrapper = (props) => {
    const { className, children, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-information-panel-wrapper', className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Header of the InformationPanel to be passed in the `header` prop.
 *
 * @example
 * <InformationPanelHeader
 *   onClose={() => {}}
 *   actions={(
 *     <>
 *       <IconButton styleType='borderless' onClick={() => {}}><SvgEdit /></IconButton>
 *       <IconButton styleType='borderless' onClick={() => {}}><SvgDelete /></IconButton>
 *     </>
 *   )}
 * >
 *   <Text variant='subheading'>InfoPanel heading</Text>
 * </InformationPanelHeader>
 */
const InformationPanelHeader = (props) => {
    const { children, onClose, actions, className, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-information-header', className), ...rest },
        React__default.createElement("span", { className: 'iui-information-header-label' }, children),
        React__default.createElement("div", { className: 'iui-information-header-actions' },
            actions,
            onClose && (React__default.createElement(IconButton, { styleType: 'borderless', onClick: onClose, "aria-label": 'Close' },
                React__default.createElement(SvgCloseSmall, { "aria-hidden": true }))))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Body of the `InformationPanel` containing the main content.
 */
const InformationPanelBody = (props) => {
    const { className, children, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-information-body', className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * The `InformationPanelContent` component should be used inside `InformationPanelBody`
 * to style rows of key/value pairs, where the key is ideally represented by a `Label` component
 * and the value can be any input element (including readonly inputs for non-modifiable fields).
 *
 * By default, the pairs are displayed of label and input are displayed  in separate lines,
 * but displayStyle can be set to 'inline' to show them in the same line with correct alignment.
 *
 * You can use multiple `InformationPanelContent` instances inside one `InformationPanelBody`; this is
 * useful when you want to show other content, e.g. separate headings for different sections of key/value pairs.
 *
 * @example
 * <InformationPanelContent displayStyle='inline'>
 *   <Label htmlFor='name-input'>File name</Label>
 *   <Input id='name-input' value='Alpha.mp3' />
 *
 *   <Label htmlFor='year-input'>Year</Label>
 *   <Input id='year-input' value='2021' />
 *
 *   <Label htmlFor='path-input'>Path</Label>
 *   <Input id='path-input' value='/Shared/Music/' />
 * </InformationPanelContent>
 */
const InformationPanelContent = (props) => {
    const { className, displayStyle = 'default', children, ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-information-body-content', { 'iui-inline': displayStyle === 'inline' }, className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * A standalone label to be used with input components (using `htmlFor`).
 * Can be rendered as any element, e.g. span, using the `as` prop.
 * @example
 * <Label htmlFor='name-input'>Name</Label>
 * <Input id='name-input' />
 */
const Label = (props) => {
    const { as: Element = 'label', displayStyle = 'block', required, className, children, ...rest } = props;
    useTheme();
    return (React__default.createElement(Element, { className: cx('iui-input-label', {
            'iui-inline': displayStyle === 'inline',
            'iui-required': required,
        }, className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Basic labeled input component
 * @example
 * <LabeledInput label='My label' />
 * <LabeledInput disabled label='My label' />
 * <LabeledInput status='positive' label='Positive' />
 * <LabeledInput status='negative' label='Negative' setFocus />
 */
const LabeledInput = React__default.forwardRef((props, ref) => {
    const { className, disabled = false, label, message, status, svgIcon, style, inputClassName, inputStyle, displayStyle = 'default', iconDisplayStyle = displayStyle === 'default' ? 'block' : 'inline', required = false, ...rest } = props;
    useTheme();
    const icon = svgIcon !== null && svgIcon !== void 0 ? svgIcon : (status && StatusIconMap[status]());
    return (React__default.createElement(InputContainer, { as: 'label', label: label, disabled: disabled, required: required, status: status, message: message, icon: icon, isLabelInline: displayStyle === 'inline', isIconInline: iconDisplayStyle === 'inline', className: className, style: style },
        React__default.createElement(Input, { disabled: disabled, className: inputClassName, style: inputStyle, required: required, ref: ref, ...rest })));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Group Checkbox/Radio components together
 * @example
 * <caption>Group checkboxes</caption>
 * <InputGroup label='Checkbox group'>
 *  <Checkbox />
 *  <Checkbox />
 * </InputGroup>
 * @example
 * <caption>Group radios</caption>
 * <InputGroup label='Radio group'>
 *  <Radio />
 *  <Radio />
 * </InputGroup>
 */
const InputGroup = (props) => {
    const { children, disabled = false, displayStyle = 'default', label, message, status, svgIcon, className, style, required = false, ...rest } = props;
    useTheme();
    const icon = () => {
        if (svgIcon) {
            return React__default.cloneElement(svgIcon, { 'aria-hidden': true });
        }
        if (status && message) {
            return React__default.cloneElement(StatusIconMap[status](), {
                'aria-hidden': true,
            });
        }
        return undefined;
    };
    return (React__default.createElement(InputContainer, { label: label, disabled: disabled, required: required, status: status, message: message, icon: icon(), isLabelInline: displayStyle === 'inline', className: className, style: style, ...rest },
        React__default.createElement("div", { className: 'iui-input-group' }, children)));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Tag for showing selected value in `Select`.
 * @private
 */
const SelectTag = (props) => {
    const { className, label, ...rest } = props;
    useTheme();
    return (React__default.createElement("span", { className: cx('iui-select-tag', className), ...rest },
        React__default.createElement("span", { className: 'iui-select-tag-label' }, label)));
};
const SelectTag$1 = SelectTag;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const isMultipleEnabled = (variable, multiple) => {
    return multiple;
};
// Type guard for multiple did not work
const isSingleOnChange = (onChange, multiple) => {
    return !multiple;
};
/**
 * Select component to select value from options.
 * Generic type is used for value. It prevents you from mistakenly using other types in `options`, `value` and `onChange`.
 * @example
 * <caption>Basic select.</caption>
 * <Select<number> options={[{ value: 1, label: 'Option 1' }, { value: 2, label: 'Option 2' }, { value: 3, label: 'Option 3' }]} />
 * @example
 * <caption>Disabled select with placeholder.</caption>
 * <Select
 *   disabled={true}
 *   placeholder='Placeholder text'
 *   options={[{ value: 1, label: 'Option 1' }, { value: 2, label: 'Option 2' }, { value: 3, label: 'Option 3' }]}
 * />
 * @example
 * <caption>Select with selected value and change handler.</caption>
 * <Select<number>
 *   value={selectedValue}
 *   onChange={(value) => setSelectedValue(value)}
 *   options={[{ value: 1, label: 'Option 1' }, { value: 2, label: 'Option 2' }, { value: 3, label: 'Option 3' }]}
 * />
 * @example
 * <caption>Select using custom renderers for menu items and selected value.</caption>
 * <Select<string>
 *   options={[
 *     { value: 'yellow', label: 'Yellow' },
 *     { value: 'green', label: 'Green' },
 *     { value: 'red', label: 'Red' },
 *   ]}
 *   value={selectedValue}
 *   placeholder='Placeholder text'
 *   itemRenderer={(option, itemProps) => (
 *     <MenuItem
 *       style={{ color: option.value }}
 *       isSelected={itemProps.isSelected}
 *       onClick={() => {
 *         setSelectedValue(option.value);
 *         itemProps.close();
 *       }}
 *       role='option'
 *       ref={(el) => itemProps.isSelected && el?.scrollIntoView()}
 *     >
 *       {option.label}
 *     </MenuItem>
 *   )}
 *   selectedItemRenderer={(option) => (
 *     <span style={{ backgroundColor: option.value }}>{option.label}</span>
 *   )}
 * />
 */
const Select = (props) => {
    var _a;
    const { options, value, onChange, placeholder, disabled = false, size, setFocus = false, itemRenderer, selectedItemRenderer, className, style, menuClassName, menuStyle, onShow, onHide, popoverProps, multiple = false, ...rest } = props;
    useTheme();
    const [isOpen, setIsOpen] = React__default.useState((_a = popoverProps === null || popoverProps === void 0 ? void 0 : popoverProps.visible) !== null && _a !== void 0 ? _a : false);
    React__default.useEffect(() => {
        setIsOpen((open) => { var _a; return (_a = popoverProps === null || popoverProps === void 0 ? void 0 : popoverProps.visible) !== null && _a !== void 0 ? _a : open; });
    }, [popoverProps]);
    const [minWidth, setMinWidth] = React__default.useState(0);
    const toggle = () => setIsOpen((open) => !open);
    const selectRef = React__default.useRef(null);
    const toggleButtonRef = React__default.useRef(null);
    const onShowHandler = React__default.useCallback((instance) => {
        setIsOpen(true);
        onShow === null || onShow === void 0 ? void 0 : onShow(instance);
    }, [onShow]);
    const onHideHandler = React__default.useCallback((instance) => {
        setIsOpen(false);
        onHide === null || onHide === void 0 ? void 0 : onHide(instance);
    }, [onHide]);
    React__default.useEffect(() => {
        if (selectRef.current && !disabled && setFocus) {
            selectRef.current.focus();
        }
    }, [setFocus, disabled]);
    React__default.useEffect(() => {
        if (selectRef.current) {
            setMinWidth(selectRef.current.offsetWidth);
        }
    }, [isOpen]);
    const onKeyDown = (event, toggle) => {
        switch (event.key) {
            case 'Enter':
            case ' ':
            case 'Spacebar':
                if (event.target === selectRef.current) {
                    toggle();
                    event.preventDefault();
                }
                break;
        }
    };
    const menuItems = React__default.useCallback((close) => {
        return options.map((option, index) => {
            var _a;
            const isSelected = isMultipleEnabled(value, multiple)
                ? (_a = value === null || value === void 0 ? void 0 : value.includes(option.value)) !== null && _a !== void 0 ? _a : false
                : value === option.value;
            const menuItem = itemRenderer ? (itemRenderer(option, { close, isSelected })) : (React__default.createElement(MenuItem, null, option.label));
            const { label, ...restOption } = option;
            return React__default.cloneElement(menuItem, {
                key: `${label}-${index}`,
                isSelected,
                onClick: () => {
                    if (option.disabled) {
                        return;
                    }
                    if (isSingleOnChange(onChange, multiple)) {
                        onChange === null || onChange === void 0 ? void 0 : onChange(option.value);
                        close();
                    }
                    else {
                        onChange === null || onChange === void 0 ? void 0 : onChange(option.value, isSelected ? 'removed' : 'added');
                    }
                },
                ref: (el) => {
                    if (isSelected && !multiple) {
                        el === null || el === void 0 ? void 0 : el.scrollIntoView();
                    }
                },
                role: 'option',
                ...restOption,
                ...menuItem.props,
            });
        });
    }, [itemRenderer, multiple, onChange, options, value]);
    const selectedItems = React__default.useMemo(() => {
        if (value == null) {
            return undefined;
        }
        return isMultipleEnabled(value, multiple)
            ? options.filter((option) => value.some((val) => val === option.value))
            : options.find((option) => option.value === value);
    }, [multiple, options, value]);
    const tagRenderer = React__default.useCallback((item) => {
        return React__default.createElement(SelectTag$1, { key: item.label, label: item.label });
    }, []);
    return (React__default.createElement("div", { className: cx('iui-input-with-icon', className), "aria-expanded": isOpen, "aria-haspopup": 'listbox', style: style, ...rest },
        React__default.createElement(DropdownMenu, { menuItems: menuItems, placement: 'bottom-start', className: cx('iui-scroll', menuClassName), style: {
                minWidth,
                maxWidth: `min(${minWidth * 2}px, 90vw)`,
                ...menuStyle,
            }, role: 'listbox', onShow: onShowHandler, onHide: onHideHandler, disabled: disabled, ...popoverProps, visible: isOpen, onClickOutside: (_, { target }) => {
                var _a;
                if (!((_a = toggleButtonRef.current) === null || _a === void 0 ? void 0 : _a.contains(target))) {
                    setIsOpen(false);
                }
            } },
            React__default.createElement("div", { ref: selectRef, className: cx('iui-select-button', {
                    'iui-placeholder': (!selectedItems || selectedItems.length === 0) && !!placeholder,
                    'iui-disabled': disabled,
                }), "data-iui-size": size, onClick: () => !disabled && toggle(), onKeyDown: (e) => !disabled && onKeyDown(e, toggle), tabIndex: !disabled ? 0 : undefined },
                (!selectedItems || selectedItems.length === 0) && (React__default.createElement("span", { className: 'iui-content' }, placeholder)),
                isMultipleEnabled(selectedItems, multiple) ? (React__default.createElement(MultipleSelectButton, { selectedItems: selectedItems, selectedItemsRenderer: selectedItemRenderer, tagRenderer: tagRenderer })) : (React__default.createElement(SingleSelectButton, { selectedItem: selectedItems, selectedItemRenderer: selectedItemRenderer })))),
        React__default.createElement("span", { ref: toggleButtonRef, className: cx('iui-end-icon', {
                'iui-actionable': !disabled,
                'iui-disabled': disabled,
                'iui-open': isOpen,
            }), onClick: () => !disabled && toggle() },
            React__default.createElement(SvgCaretDownSmall, { "aria-hidden": true }))));
};
const SingleSelectButton = ({ selectedItem, selectedItemRenderer, }) => {
    return (React__default.createElement(React__default.Fragment, null,
        selectedItem &&
            selectedItemRenderer &&
            selectedItemRenderer(selectedItem),
        selectedItem && !selectedItemRenderer && (React__default.createElement(React__default.Fragment, null,
            selectedItem.icon &&
                React__default.cloneElement(selectedItem.icon, {
                    className: cx(selectedItem.icon.props.className, 'iui-icon'),
                }),
            React__default.createElement("span", { className: 'iui-content' }, selectedItem.label)))));
};
const MultipleSelectButton = ({ selectedItems, selectedItemsRenderer, tagRenderer, }) => {
    const selectedItemsElements = React__default.useMemo(() => {
        if (!selectedItems) {
            return [];
        }
        return selectedItems.map((item) => tagRenderer(item));
    }, [selectedItems, tagRenderer]);
    const [containerRef, visibleCount] = useOverflow(selectedItemsElements);
    return (React__default.createElement(React__default.Fragment, null,
        selectedItems &&
            selectedItemsRenderer &&
            selectedItemsRenderer(selectedItems),
        selectedItems && !selectedItemsRenderer && (React__default.createElement("span", { className: 'iui-content' },
            React__default.createElement("div", { className: 'iui-select-tag-container', ref: containerRef },
                React__default.createElement(React__default.Fragment, null,
                    visibleCount < selectedItemsElements.length
                        ? selectedItemsElements.slice(0, visibleCount - 1)
                        : selectedItemsElements,
                    visibleCount < selectedItemsElements.length && (React__default.createElement(SelectTag$1, { label: `+${selectedItemsElements.length - visibleCount + 1} item(s)` }))))))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Labeled select component to select value from options.
 * @example
 * <LabeledSelect
 *   label='Select Label'
 *   options={[
 *     { value: 1, label: 'Item #1' },
 *     { value: 2, label: 'Item #2' },
 *     { value: 3, label: 'Item #3' },
 *   ]}
 *   message='Help Message'
 * />
 * <LabeledSelect
 *   label='Select Label'
 *   options={[
 *     { value: 1, label: 'Item #1' },
 *     { value: 2, label: 'Item #2' },
 *     { value: 3, label: 'Item #3' },
 *   ]}
 *   message='Positive Message'
 *   status='positive'
 * />
 * <LabeledSelect
 *   label='Select Label'
 *   options={[
 *     { value: 1, label: 'Item #1' },
 *     { value: 2, label: 'Item #2' },
 *     { value: 3, label: 'Item #3' },
 *   ]}
 *   message='Custom Message'
 *   svgIcon={<SvgCamera />}
 * />
 */
const LabeledSelect = (props) => {
    const { className, disabled = false, label, message, status, svgIcon, displayStyle = 'default', style, selectClassName, selectStyle, required = false, ...rest } = props;
    useTheme();
    const icon = () => {
        if (svgIcon) {
            return React__default.cloneElement(svgIcon, { 'aria-hidden': true });
        }
        if (status && message) {
            return StatusIconMap[status]();
        }
        return undefined;
    };
    return (React__default.createElement(InputContainer, { label: label, disabled: disabled, required: required, status: status, message: message, icon: displayStyle === 'default' ? icon() : undefined, isLabelInline: displayStyle === 'inline', className: className, style: style },
        React__default.createElement(Select, { disabled: disabled, className: selectClassName, style: selectStyle, ...rest })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Basic textarea component
 * @example
 * <Textarea setFocus={true} placeholder='This is a textarea' />
 * <Textarea disabled={true} placeholder='This is a disabled textarea' />
 */
const Textarea = React__default.forwardRef((props, ref) => {
    const { className, rows = 3, setFocus = false, ...rest } = props;
    useTheme();
    const textAreaRef = React__default.useRef(null);
    const refs = useMergedRefs(ref, textAreaRef);
    React__default.useEffect(() => {
        if (textAreaRef.current && setFocus) {
            textAreaRef.current.focus();
        }
    }, [setFocus]);
    return (React__default.createElement("textarea", { className: cx('iui-input', className), rows: rows, ref: refs, ...rest }));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Textarea wrapper that allows for additional styling and labelling
 * @example
 * <LabeledTextarea
 *  label='Textarea Label'
 *  message='Help Message'
 *  placeholder='This is a textarea'
 * />
 * <LabeledTextarea
 *  label='Disabled Textarea Label'
 *  message='Help Message'
 *  placeholder='This is a textarea'
 *  disabled={true}
 * />
 * <LabeledTextarea
 *  label='Textarea Label'
 *  message='Negative Message'
 *  placeholder='This is a textarea'
 *  status='negative'
 * />
 */
const LabeledTextarea = React__default.forwardRef((props, ref) => {
    const { className, style, disabled = false, label, message, status, textareaClassName, textareaStyle, displayStyle = 'default', iconDisplayStyle = displayStyle === 'default' ? 'block' : 'inline', svgIcon, required = false, ...textareaProps } = props;
    useTheme();
    const icon = svgIcon !== null && svgIcon !== void 0 ? svgIcon : (status && StatusIconMap[status]());
    return (React__default.createElement(InputContainer, { as: 'label', label: label, disabled: disabled, required: required, status: status, message: message, icon: icon, isLabelInline: displayStyle === 'inline', isIconInline: iconDisplayStyle === 'inline', className: className, style: style },
        React__default.createElement(Textarea, { disabled: disabled, className: textareaClassName, style: textareaStyle, required: required, ...textareaProps, ref: ref })));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Modal component which can wrap any content.
 * @example
 * <Modal
 *   isOpen={true}
 *   title='My modal'
 *   onClose={onClose}
 * >
 *   <ModalContent>
 *     Here is my modal content
 *   </ModalContent>
 *   <ModalButtonBar>
 *     <Button styleType='high-visibility'>
 *       Primary button
 *     </Button>
 *     <Button>
 *       Secondary button
 *     </Button>
 *   </ModalButtonBar>
 * </Modal>
 */
const Modal = (props) => {
    const { isOpen = false, isDismissible = true, closeOnEsc = true, closeOnExternalClick = true, onClose, title, children, modalRootId = 'iui-react-portal-container', ownerDocument = getDocument(), ...rest } = props;
    useTheme();
    const [container, setContainer] = React__default.useState();
    React__default.useEffect(() => {
        setContainer(getContainer(modalRootId, ownerDocument));
        return () => setContainer(undefined);
    }, [ownerDocument, modalRootId]);
    return !!container ? (ReactDOM__default.createPortal(React__default.createElement(Dialog, { isOpen: isOpen, closeOnEsc: closeOnEsc, closeOnExternalClick: closeOnExternalClick, isDismissible: isDismissible, onClose: onClose, preventDocumentScroll: true, trapFocus: true, setFocus: true },
        React__default.createElement(Dialog.Backdrop, null),
        React__default.createElement(Dialog.Main, { "aria-modal": true, ...rest },
            React__default.createElement(Dialog.TitleBar, { titleText: title }),
            children)), container)) : (React__default.createElement(React__default.Fragment, null));
};

/**
 * Container for Buttons in modal.
 */
const ModalButtonBar = DialogButtonBar;

/**
 * Container for content in `Modal`.
 */
const ModalContent = DialogContent;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Basic radio input component
 * @example
 * <Radio />
 * <Radio label='Radio' />
 * <Radio disabled={true} label='Radio' />
 * <Radio status='positive' label='Positive' />
 * <Radio status='warning' label='Warning' />
 * <Radio status='negative' label='Negative' />
 */
const Radio = React__default.forwardRef((props, ref) => {
    const { className, disabled = false, label, status, style, setFocus = false, ...rest } = props;
    useTheme();
    const inputElementRef = React__default.useRef(null);
    const refs = useMergedRefs(inputElementRef, ref);
    React__default.useEffect(() => {
        if (inputElementRef.current && setFocus) {
            inputElementRef.current.focus();
        }
    }, [setFocus]);
    const radio = (React__default.createElement("input", { className: cx('iui-radio', className && { [className]: !label }), style: !label ? style : undefined, disabled: disabled, type: 'radio', ref: refs, ...rest }));
    return !label ? (radio) : (React__default.createElement("label", { className: cx('iui-radio-wrapper', { 'iui-disabled': disabled, [`iui-${status}`]: !!status }, className), style: style },
        radio,
        label && React__default.createElement("span", { className: 'iui-radio-label' }, label)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * RadioTileGroup component to group RadioTile components together
 * @example
 * <RadioTileGroup label='My group'>
 *   <RadioTile label='First tile' icon={<SvgSmileyHappy />} />
 *   <RadioTile label='Second tile' icon={<SvgSmileySad />} />
 * </RadioTileGroup>
 */
const RadioTileGroup = (props) => {
    const { children, label, ...rest } = props;
    useTheme();
    return (React__default.createElement(InputGroup, { label: label, ...rest },
        React__default.createElement("div", { className: 'iui-radio-tile-container' }, children)));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * RadioTile component to be used in RadioTileGroup component
 * @example
 * <RadioTile label='My tile' description='Some info' icon={<SvgSmileyHappy />} />
 */
const RadioTile = React__default.forwardRef((props, ref) => {
    const { icon, label, description, setFocus = false, className, style, ...rest } = props;
    useTheme();
    const inputElementRef = React__default.useRef(null);
    const refs = useMergedRefs(inputElementRef, ref);
    React__default.useEffect(() => {
        if (inputElementRef.current && setFocus) {
            inputElementRef.current.focus();
        }
    }, [setFocus]);
    return (React__default.createElement("label", { className: cx('iui-radio-tile', className), style: style },
        React__default.createElement("input", { className: 'iui-radio-tile-input', type: 'radio', ref: refs, ...rest }),
        React__default.createElement("div", { className: 'iui-radio-tile-content' },
            icon &&
                React__default.cloneElement(icon, {
                    className: cx('iui-radio-tile-icon', icon.props.className),
                }),
            label && React__default.createElement("div", { className: 'iui-radio-tile-label' }, label),
            description && (React__default.createElement("div", { className: 'iui-radio-tile-sublabel' }, description)))));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Left side navigation menu component.
 * @example
 * <SideNavigation
 *   items={[
 *     <SidenavButton startIcon={<SvgPlaceholder />}>App 1</SidenavButton>,
 *     <SidenavButton startIcon={<SvgPlaceholder />}>App 2</SidenavButton>,
 *     <SidenavButton startIcon={<SvgPlaceholder />}>App 3</SidenavButton>,
 *   ]}
 *   secondaryItems={[
 *     <SidenavButton startIcon={<SvgSettings />}>Settings</SidenavButton>,
 *   ]}
 * />
 */
const SideNavigation = (props) => {
    const { items, secondaryItems, expanderPlacement = 'top', className, isExpanded = false, onExpanderClick, submenu, isSubmenuOpen = false, ...rest } = props;
    useTheme();
    const [_isExpanded, _setIsExpanded] = React__default.useState(isExpanded);
    React__default.useEffect(() => {
        _setIsExpanded(isExpanded);
    }, [isExpanded]);
    const ExpandButton = (React__default.createElement(IconButton, { className: 'iui-sidenav-button iui-expand', onClick: React__default.useCallback(() => {
            _setIsExpanded((expanded) => !expanded);
            onExpanderClick === null || onExpanderClick === void 0 ? void 0 : onExpanderClick();
        }, [onExpanderClick]) },
        React__default.createElement(SvgChevronRight, null)));
    return (React__default.createElement("div", { className: cx('iui-side-navigation-wrapper', className), ...rest },
        React__default.createElement("div", { className: cx('iui-side-navigation', {
                'iui-expanded': _isExpanded,
                'iui-collapsed': !_isExpanded,
            }) },
            expanderPlacement === 'top' && ExpandButton,
            React__default.createElement("div", { className: 'iui-sidenav-content' },
                React__default.createElement("div", { className: 'iui-top' }, items.map((sidenavButton, index) => !_isExpanded ? (React__default.createElement(Tooltip, { content: sidenavButton.props.children, placement: 'right', key: index }, sidenavButton)) : (sidenavButton))),
                React__default.createElement("div", { className: 'iui-bottom' }, secondaryItems === null || secondaryItems === void 0 ? void 0 : secondaryItems.map((sidenavButton, index) => !_isExpanded ? (React__default.createElement(Tooltip, { content: sidenavButton.props.children, placement: 'right', key: index }, sidenavButton)) : (sidenavButton)))),
            expanderPlacement === 'bottom' && ExpandButton),
        submenu && (React__default.createElement(WithCSSTransition, { in: isSubmenuOpen, dimension: 'width', timeout: 200, classNames: 'iui' }, submenu))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Wrapper around Button to be used as SideNavigation items.
 * Label is hidden when sidenav is collapsed.
 */
const SidenavButton = React__default.forwardRef((props, ref) => {
    const { className, children, isActive = false, disabled = false, isSubmenuOpen = false, ...rest } = props;
    useTheme();
    return (React__default.createElement(Button, { className: cx('iui-sidenav-button', {
            'iui-submenu-open': isSubmenuOpen,
        }, className), "data-iui-active": isActive, size: 'large', disabled: disabled, ref: ref, ...rest }, children));
});

const getCellStyle = (column, isTableResizing) => {
    const style = {};
    style.flex = `1 1 145px`;
    if (column.width) {
        const width = typeof column.width === 'string' ? column.width : `${column.width}px`;
        style.width = width;
        // This allows flexbox to handle the width of the column on table resize
        if (isTableResizing && column.canResize) {
            style.flex = `${Number(column.width)} ${Number(column.width)} ${width}`;
        }
        else {
            style.flex = `0 0 ${width}`;
        }
    }
    if (column.maxWidth) {
        style.maxWidth = `${column.maxWidth}px`;
    }
    if (column.minWidth) {
        style.minWidth = `${column.minWidth}px`;
    }
    return style;
};
const getStickyStyle = (column, columnList) => {
    if (!column.sticky) {
        return {};
    }
    let left = 0;
    for (const col of columnList) {
        if (col.id === column.id) {
            break;
        }
        left += Number(col.width || col.resizeWidth || 0);
    }
    let right = 0;
    for (const col of [...columnList].reverse()) {
        if (col.id === column.id) {
            break;
        }
        right += Number(col.width || col.resizeWidth || 0);
    }
    return {
        '--iui-table-sticky-left': column.sticky === 'left' ? `${left}px` : undefined,
        '--iui-table-sticky-right': column.sticky === 'right' ? `${right}px` : undefined,
    };
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SubRowExpander = (props) => {
    const { cell, isDisabled, cellProps, expanderCell } = props;
    return (React__default.createElement(React__default.Fragment, null, expanderCell ? (expanderCell(cellProps)) : (React__default.createElement(IconButton, { style: { marginRight: 8 }, className: 'iui-table-row-expander', styleType: 'borderless', size: 'small', onClick: (e) => {
            e.stopPropagation();
            cell.row.toggleRowExpanded();
        }, disabled: isDisabled }, React__default.createElement(SvgChevronRight, { style: {
            transform: cell.row.isExpanded ? 'rotate(90deg)' : undefined,
        } })))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Default cell.
 * It should be passed to `cellRenderer`.
 * It can can be used to pass native HTML attributes to the cell container.
 * @example
 * {
 *   Header: 'Name',
 *   accessor: 'name',
 *   cellRenderer: (props) => <DefaultCell {...props} />,
 * }
 */
const DefaultCell = (props) => {
    // Omitting `cellProps`
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const { cellElementProps: { className: cellElementClassName, style: cellElementStyle, ...cellElementProps }, children, startIcon, endIcon, cellProps, isDisabled, className, style, status, ...rest } = props;
    return (React__default.createElement("div", { ...cellElementProps, ...rest, className: cx(cellElementClassName, className), "aria-disabled": (isDisabled === null || isDisabled === void 0 ? void 0 : isDisabled(cellProps.row.original)) || undefined, "data-iui-status": status, style: { ...cellElementStyle, ...style } },
        startIcon && (React__default.createElement("div", { className: 'iui-table-cell-start-icon' }, startIcon)),
        children,
        endIcon && React__default.createElement("div", { className: 'iui-table-cell-end-icon' }, endIcon)));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const SELECTION_CELL_ID = 'iui-table-checkbox-selector';
/**
 * Selection column that adds selection checkbox column to the Table.
 * It is recommended to use it as the first column.
 * @example
 * const isCheckboxDisabled = useCallback((rowData) => {
 *   return rowData.name === 'Name1';
 * }, []);
 * const columns = useMemo(() => [
 *   SelectionColumn({ isDisabled: isCheckboxDisabled }),
 *   // Rest of your columns
 * ], [isCheckboxDisabled]);
 */
const SelectionColumn = (props = {}) => {
    const { isDisabled } = props;
    return {
        id: SELECTION_CELL_ID,
        disableResizing: true,
        disableGroupBy: true,
        disableReordering: true,
        minWidth: 48,
        width: 48,
        maxWidth: 48,
        columnClassName: 'iui-slot',
        cellClassName: 'iui-slot',
        Header: ({ getToggleAllRowsSelectedProps, toggleAllRowsSelected, rows, initialRows, state, }) => {
            const disabled = rows.every((row) => isDisabled === null || isDisabled === void 0 ? void 0 : isDisabled(row.original));
            const checked = initialRows.every((row) => state.selectedRowIds[row.id] || (isDisabled === null || isDisabled === void 0 ? void 0 : isDisabled(row.original)));
            const indeterminate = !checked && Object.keys(state.selectedRowIds).length > 0;
            return (React__default.createElement(Checkbox, { ...getToggleAllRowsSelectedProps(), style: {}, title: '' // Removes default title that comes from react-table
                , checked: checked && !disabled, indeterminate: indeterminate, disabled: disabled, onChange: () => toggleAllRowsSelected(!rows.some((row) => row.isSelected)) }));
        },
        Cell: ({ row }) => (React__default.createElement(Checkbox, { ...row.getToggleRowSelectedProps(), style: {}, title: '' // Removes default title that comes from react-table
            , disabled: isDisabled === null || isDisabled === void 0 ? void 0 : isDisabled(row.original), onClick: (e) => e.stopPropagation() })),
        cellRenderer: (props) => (React__default.createElement(DefaultCell, { ...props, isDisabled: (rowData) => !!(isDisabled === null || isDisabled === void 0 ? void 0 : isDisabled(rowData)) })),
    };
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const EXPANDER_CELL_ID = 'iui-table-expander';
/**
 * Expander column that adds sub-content expander column to the Table.
 * It is recommended to use it as the first column or after selection column.
 * @example
 * const subComponent = useCallback(
 *   (row: Row) => (
 *     <div style={{ padding: 16 }}>
 *       <Leading>Extra information</Leading>
 *       <pre>
 *         <code>{JSON.stringify({ values: row.values }, null, 2)}</code>
 *       </pre>
 *     </div>
 *   ),
 *   [],
 * );
 * const isExpanderDisabled = useCallback((rowData) => {
 *   return rowData.name === 'Name2';
 * }, []);
 * const columns = useMemo(() => [
 *   ExpanderColumn({ subComponent, isDisabled: isExpanderDisabled }),
 *   // Rest of your columns
 * ], [isExpanderDisabled, subComponent]);
 */
const ExpanderColumn = (props = {}) => {
    const { subComponent, isDisabled } = props;
    return {
        id: EXPANDER_CELL_ID,
        disableResizing: true,
        disableGroupBy: true,
        disableReordering: true,
        minWidth: 48,
        width: 48,
        maxWidth: 48,
        columnClassName: 'iui-slot',
        cellClassName: 'iui-slot',
        Cell: (props) => {
            const { row } = props;
            if (!(subComponent === null || subComponent === void 0 ? void 0 : subComponent(row))) {
                return null;
            }
            else {
                return (React__default.createElement(IconButton, { className: 'iui-table-row-expander', styleType: 'borderless', size: 'small', onClick: (e) => {
                        e.stopPropagation();
                        row.toggleRowExpanded();
                    }, disabled: isDisabled === null || isDisabled === void 0 ? void 0 : isDisabled(props.row.original) }, React__default.createElement(SvgChevronRight, null)));
            }
        },
        cellRenderer: (props) => (React__default.createElement(DefaultCell, { ...props, isDisabled: (rowData) => !!(isDisabled === null || isDisabled === void 0 ? void 0 : isDisabled(rowData)) })),
    };
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const TableCell = (props) => {
    const { cell, cellIndex, isDisabled, tableHasSubRows, tableInstance, expanderCell, } = props;
    const hasSubRowExpander = cellIndex ===
        cell.row.cells.findIndex((c) => c.column.id !== SELECTION_CELL_ID);
    const getSubRowStyle = () => {
        if (!tableHasSubRows || !hasSubRowExpander) {
            return undefined;
        }
        // If it doesn't have sub-rows then shift by another level to align with expandable rows on the same depth
        // 16 = initial_cell_padding, 35 = 27 + 8 = expander_width + margin
        return {
            paddingLeft: 16 + (cell.row.depth + (cell.row.canExpand ? 0 : 1)) * 35,
        };
    };
    const cellElementProps = cell.getCellProps({
        className: cx('iui-table-cell', cell.column.cellClassName, {
            'iui-table-cell-sticky': !!cell.column.sticky,
        }),
        style: {
            ...getCellStyle(cell.column, !!tableInstance.state.isTableResizing),
            ...getSubRowStyle(),
            ...getStickyStyle(cell.column, tableInstance.visibleColumns),
        },
    });
    const cellProps = {
        ...tableInstance,
        ...{ cell, row: cell.row, value: cell.value, column: cell.column },
    };
    const cellContent = (React__default.createElement(React__default.Fragment, null,
        tableHasSubRows && hasSubRowExpander && cell.row.canExpand && (React__default.createElement(SubRowExpander, { cell: cell, isDisabled: isDisabled, cellProps: cellProps, expanderCell: expanderCell })),
        cell.render('Cell')));
    const cellRendererProps = {
        cellElementProps,
        cellProps,
        children: (React__default.createElement(React__default.Fragment, null,
            cellContent,
            cell.column.sticky === 'left' &&
                tableInstance.state.sticky.isScrolledToRight && (React__default.createElement("div", { className: 'iui-table-cell-shadow-right' })),
            cell.column.sticky === 'right' &&
                tableInstance.state.sticky.isScrolledToLeft && (React__default.createElement("div", { className: 'iui-table-cell-shadow-left' })))),
    };
    return (React__default.createElement(React__default.Fragment, null, cell.column.cellRenderer ? (cell.column.cellRenderer({
        ...cellRendererProps,
        isDisabled: () => isDisabled,
    })) : (React__default.createElement(DefaultCell, { ...cellRendererProps, isDisabled: () => isDisabled }))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Memoization is needed to avoid unnecessary re-renders of all rows when additional data is added when lazy-loading.
 * Using `isLast` here instead of passing data length to avoid re-renders of all rows when more data is added. Now only the last row re-renders.
 * Although state is not used it is needed for `React.memo` to check state that changes row state e.g. selection.
 * When adding new features check whether it changes state that affects row. If it does then add equality check to `React.memo`.
 */
const TableRow = (props) => {
    var _a;
    const { row, rowProps, isLast, onRowInViewport, onBottomReached, intersectionMargin, onClick, subComponent, isDisabled, tableHasSubRows, tableInstance, expanderCell, bodyRef, tableRowRef, } = props;
    const onIntersect = React__default.useCallback(() => {
        var _a, _b;
        (_a = onRowInViewport.current) === null || _a === void 0 ? void 0 : _a.call(onRowInViewport, row.original);
        isLast && ((_b = onBottomReached.current) === null || _b === void 0 ? void 0 : _b.call(onBottomReached));
    }, [isLast, onBottomReached, onRowInViewport, row.original]);
    const intersectionRoot = React__default.useMemo(() => {
        var _a, _b;
        const isTableBodyScrollable = ((_a = bodyRef === null || bodyRef === void 0 ? void 0 : bodyRef.scrollHeight) !== null && _a !== void 0 ? _a : 0) > ((_b = bodyRef === null || bodyRef === void 0 ? void 0 : bodyRef.offsetHeight) !== null && _b !== void 0 ? _b : 0);
        // If table body is scrollable, make it the intersection root
        if (isTableBodyScrollable) {
            return bodyRef;
        }
        // Otherwise, make the viewport the intersection root
        return undefined;
    }, [bodyRef]);
    const intersectionRef = useIntersection(onIntersect, {
        rootMargin: `${intersectionMargin}px`,
        root: intersectionRoot,
    });
    const userRowProps = (_a = rowProps === null || rowProps === void 0 ? void 0 : rowProps(row)) !== null && _a !== void 0 ? _a : {};
    const { status, isLoading, ...restUserRowProps } = userRowProps;
    const mergedProps = {
        ...row.getRowProps({ style: { flex: `0 0 auto`, minWidth: '100%' } }),
        ...restUserRowProps,
        ...{
            className: cx('iui-table-row', {
                'iui-table-row-expanded': row.isExpanded && subComponent,
                'iui-loading': isLoading,
            }, userRowProps === null || userRowProps === void 0 ? void 0 : userRowProps.className),
            'aria-selected': row.isSelected || undefined,
            'aria-disabled': isDisabled || undefined,
            'data-iui-status': status,
        },
    };
    const refs = useMergedRefs(intersectionRef, mergedProps.ref, tableRowRef);
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement("div", { ...mergedProps, ref: refs, onClick: (event) => {
                var _a;
                (_a = mergedProps === null || mergedProps === void 0 ? void 0 : mergedProps.onClick) === null || _a === void 0 ? void 0 : _a.call(mergedProps, event);
                onClick === null || onClick === void 0 ? void 0 : onClick(event, row);
            } }, row.cells.map((cell, index) => {
            return (React__default.createElement(TableCell, { key: cell.getCellProps().key, cell: cell, cellIndex: index, isDisabled: isDisabled, tableHasSubRows: tableHasSubRows, tableInstance: tableInstance, expanderCell: expanderCell }));
        })),
        subComponent && (React__default.createElement(WithCSSTransition, { in: row.isExpanded },
            React__default.createElement("div", { className: cx('iui-table-row', 'iui-table-expanded-content'), "aria-disabled": isDisabled }, subComponent(row))))));
};
const hasAnySelectedSubRow = (row, selectedRowIds) => {
    if (selectedRowIds === null || selectedRowIds === void 0 ? void 0 : selectedRowIds[row.id]) {
        return true;
    }
    return row.subRows.some((subRow) => hasAnySelectedSubRow(subRow, selectedRowIds));
};
const TableRowMemoized = React__default.memo(TableRow, (prevProp, nextProp) => {
    var _a, _b, _c, _d, _e, _f, _g;
    return prevProp.isLast === nextProp.isLast &&
        ((_a = prevProp.state.hiddenColumns) === null || _a === void 0 ? void 0 : _a.length) ===
            ((_b = nextProp.state.hiddenColumns) === null || _b === void 0 ? void 0 : _b.length) &&
        !!((_c = prevProp.state.hiddenColumns) === null || _c === void 0 ? void 0 : _c.every((column, index) => { var _a; return ((_a = nextProp.state.hiddenColumns) === null || _a === void 0 ? void 0 : _a[index]) === column; })) &&
        prevProp.onRowInViewport === nextProp.onRowInViewport &&
        prevProp.onBottomReached === nextProp.onBottomReached &&
        prevProp.onClick === nextProp.onClick &&
        prevProp.row.original === nextProp.row.original &&
        ((_d = prevProp.state.selectedRowIds) === null || _d === void 0 ? void 0 : _d[prevProp.row.id]) ===
            ((_e = nextProp.state.selectedRowIds) === null || _e === void 0 ? void 0 : _e[nextProp.row.id]) &&
        // Check if sub-rows selection has changed and whether to show indeterminate state or not
        prevProp.row.subRows.some((subRow) => hasAnySelectedSubRow(subRow, prevProp.state.selectedRowIds)) ===
            nextProp.row.subRows.some((subRow) => hasAnySelectedSubRow(subRow, nextProp.state.selectedRowIds)) &&
        ((_f = prevProp.state.expanded) === null || _f === void 0 ? void 0 : _f[prevProp.row.id]) ===
            ((_g = nextProp.state.expanded) === null || _g === void 0 ? void 0 : _g[nextProp.row.id]) &&
        prevProp.subComponent === nextProp.subComponent &&
        prevProp.row.cells.every((cell, index) => nextProp.row.cells[index].column === cell.column) &&
        prevProp.isDisabled === nextProp.isDisabled &&
        prevProp.rowProps === nextProp.rowProps &&
        prevProp.expanderCell === nextProp.expanderCell &&
        prevProp.tableHasSubRows === nextProp.tableHasSubRows &&
        prevProp.bodyRef === nextProp.bodyRef &&
        prevProp.state.columnOrder === nextProp.state.columnOrder &&
        !nextProp.state.columnResizing.isResizingColumn &&
        prevProp.state.isTableResizing === nextProp.state.isTableResizing &&
        prevProp.state.sticky.isScrolledToLeft ===
            nextProp.state.sticky.isScrolledToLeft &&
        prevProp.state.sticky.isScrolledToRight ===
            nextProp.state.sticky.isScrolledToRight;
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Handles showing filter icon and opening filter component.
 */
const FilterToggle = (props) => {
    const { column, className, ...rest } = props;
    useTheme();
    const [isVisible, setIsVisible] = React__default.useState(false);
    const close = React__default.useCallback(() => setIsVisible(false), []);
    const setFilter = React__default.useCallback((filterValue) => {
        column.setFilter(filterValue);
        close();
    }, [close, column]);
    const clearFilter = React__default.useCallback(() => {
        column.setFilter(undefined);
        close();
    }, [close, column]);
    const isColumnFiltered = column.filterValue != null && column.filterValue !== '';
    return (React__default.createElement(React__default.Fragment, null, column.canFilter && column.Filter && (React__default.createElement(Popover, { content: column.render('Filter', { close, setFilter, clearFilter }), placement: 'bottom-start', visible: isVisible, onClickOutside: close },
        React__default.createElement(IconButton, { styleType: 'borderless', isActive: isVisible || isColumnFiltered, className: cx('iui-table-filter-button', className), onClick: (e) => {
                setIsVisible((v) => !v);
                // Prevents from triggering sort
                e.stopPropagation();
            }, ...rest }, isColumnFiltered ? React__default.createElement(SvgFilter, null) : React__default.createElement(SvgFilterHollow, null))))));
};

const isValidDate = (date) => !!date && !isNaN(date.valueOf());
/**
 * Filters dates.
 * @param rows Table rows
 * @param ids Property names of data object to use for filtering
 * @param filterValue Filter value
 * @returns Filtered rows
 */
const betweenDate = (rows, ids, filterValue) => {
    const [min, max] = filterValue || [];
    const MAX_DATE_VALUE = 8640000000000000;
    const minValue = (isValidDate(min) ? min : new Date(-MAX_DATE_VALUE));
    const maxValue = (isValidDate(max) ? max : new Date(MAX_DATE_VALUE));
    return rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return (rowValue.valueOf() >= minValue.valueOf() &&
                rowValue.valueOf() <= maxValue.valueOf());
        });
    });
};
/**
 * Filter is not being set if filter value is invalid.
 */
betweenDate.autoRemove = (val) => {
    return !val || (!isValidDate(val[0]) && !isValidDate(val[1]));
};
const customFilterFunctions = {
    betweenDate,
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const useExpanderCell = (subComponent, expanderCell, isRowDisabled) => (hooks) => {
    if (!subComponent) {
        return;
    }
    hooks.allColumns.push((columns) => {
        const hasExpanderColumn = columns.find((c) => c.id === EXPANDER_CELL_ID);
        if (hasExpanderColumn) {
            return columns;
        }
        const expanderColumn = ExpanderColumn({
            subComponent,
            isDisabled: isRowDisabled,
        });
        return [
            {
                ...expanderColumn,
                Cell: expanderCell
                    ? (cellProps) => React__default.createElement(React__default.Fragment, null, expanderCell(cellProps))
                    : expanderColumn.Cell,
            },
            ...columns,
        ];
    });
};

const useSelectionCell = (isSelectable, selectionMode, isRowDisabled) => (hooks) => {
    if (!isSelectable) {
        return;
    }
    hooks.allColumns.push((columns) => selectionMode === 'single' ||
        columns.find((c) => c.id === SELECTION_CELL_ID)
        ? columns
        : [SelectionColumn({ isDisabled: isRowDisabled }), ...columns]);
};

const text = (rows, ids, filterValue) => {
    rows = rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return String(rowValue)
                .toLowerCase()
                .includes(String(filterValue).toLowerCase());
        });
    });
    return rows;
};
text.autoRemove = (val) => !val;
const exactText = (rows, ids, filterValue) => {
    return rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return rowValue !== undefined
                ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()
                : true;
        });
    });
};
exactText.autoRemove = (val) => !val;
const exactTextCase = (rows, ids, filterValue) => {
    return rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return rowValue !== undefined
                ? String(rowValue) === String(filterValue)
                : true;
        });
    });
};
exactTextCase.autoRemove = (val) => !val;
const includes = (rows, ids, filterValue) => {
    return rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return rowValue.includes(filterValue);
        });
    });
};
includes.autoRemove = (val) => !val || !val.length;
const includesAll = (rows, ids, filterValue) => {
    return rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return (rowValue &&
                rowValue.length &&
                filterValue.every((val) => rowValue.includes(val)));
        });
    });
};
includesAll.autoRemove = (val) => !val || !val.length;
const includesSome = (rows, ids, filterValue) => {
    return rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return (rowValue &&
                rowValue.length &&
                filterValue.some((val) => rowValue.includes(val)));
        });
    });
};
includesSome.autoRemove = (val) => !val || !val.length;
const includesValue = (rows, ids, filterValue) => {
    return rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return filterValue.includes(rowValue);
        });
    });
};
includesValue.autoRemove = (val) => !val || !val.length;
const between = (rows, ids, filterValue) => {
    let [min, max] = filterValue || [];
    min = typeof min === 'number' ? min : -Infinity;
    max = typeof max === 'number' ? max : Infinity;
    if (min > max) {
        const temp = min;
        min = max;
        max = temp;
    }
    return rows.filter((row) => {
        return ids.some((id) => {
            const rowValue = row.values[id];
            return rowValue >= min && rowValue <= max;
        });
    });
};
between.autoRemove = (val) => !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number');
const defaultFilterFunctions = {
    text,
    exactText,
    exactTextCase,
    includes,
    includesAll,
    includesSome,
    includesValue,
    between,
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const useSubRowFiltering = (hasAnySubRows) => (hooks) => {
    hooks.useInstance.push(useInstance$3.bind({}, hasAnySubRows));
};
const useInstance$3 = (hasAnySubRows, instance) => {
    // There is a bug in react-table that filtered out sub-rows won't be shown after clearing the filter.
    // Therefore saving original sub-rows separately.
    // Related issue: https://github.com/tannerlinsley/react-table/issues/2928
    const setInitialSubRows = (rows) => {
        rows.forEach((row) => {
            if (!row.initialSubRows) {
                row.initialSubRows = row.subRows;
            }
            setInitialSubRows(row.subRows);
        });
    };
    setInitialSubRows(instance.initialRows);
    const { filteredRows = instance.filteredRows, filteredFlatRows = instance.filteredFlatRows, filteredRowsById = instance.filteredRowsById, } = React__default.useMemo(() => {
        if (!hasAnySubRows) {
            return {};
        }
        // Restore original sub-rows
        const setSubRows = (rows) => {
            rows.forEach((row) => {
                var _a;
                row.subRows = (_a = row.initialSubRows) !== null && _a !== void 0 ? _a : [];
                setSubRows(row.subRows);
            });
        };
        setSubRows(instance.initialRows);
        let currentlyFilteredRows = [...instance.initialRows];
        instance.state.filters.forEach(({ id: columnId, value: filterValue }) => {
            var _a;
            const column = instance.allColumns.find((c) => c.id === columnId);
            if (!column) {
                return;
            }
            const filterTypes = {
                ...defaultFilterFunctions,
                ...instance.filterTypes,
            };
            const filterFn = typeof column.filter === 'function'
                ? column.filter
                : filterTypes[(_a = column.filter) !== null && _a !== void 0 ? _a : 'text'];
            currentlyFilteredRows = currentlyFilteredRows.filter((row) => handleRowFiltering(row, filterFn, columnId, filterValue));
        });
        const filteredRows = [];
        const filteredFlatRows = [];
        const filteredRowsById = {};
        // Setting rows here helps to keep them ordered.
        const populateRows = (row) => {
            if (row.depth === 0) {
                filteredRows.push(row);
            }
            filteredFlatRows.push(row);
            filteredRowsById[row.id] = row;
            if (row.subRows.length) {
                row.subRows.forEach((r) => populateRows(r));
            }
        };
        currentlyFilteredRows.forEach((row) => populateRows(row));
        return { filteredRows, filteredFlatRows, filteredRowsById };
    }, [
        instance.allColumns,
        instance.filterTypes,
        instance.initialRows,
        instance.state.filters,
        hasAnySubRows,
    ]);
    Object.assign(instance, {
        filteredRows,
        filteredFlatRows,
        filteredRowsById,
        rows: filteredRows,
        flatRows: filteredFlatRows,
        rowsById: filteredRowsById,
    });
};
const handleRowFiltering = (row, filterFn, columnId, filterValue) => {
    let hasFilteredSubRows = false;
    row.subRows = row.initialSubRows.filter((subRow) => {
        const result = handleRowFiltering(subRow, filterFn, columnId, filterValue);
        if (result) {
            hasFilteredSubRows = true;
        }
        return result;
    });
    // If row has any sub-rows that meet filter conditions,
    // then that row also needs to be shown.
    if (hasFilteredSubRows) {
        return true;
    }
    const result = filterFn([row], [columnId], filterValue);
    return !!result.length;
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const useSubRowSelection = (hooks) => {
    hooks.useInstance.push(useInstance$2);
};
const useInstance$2 = (instance) => {
    const selectedFlatRows = React__default.useMemo(() => {
        const selectedFlatRows = [];
        const setSelectionState = (row, selectedRowIds) => {
            let isSomeSubRowsSelected = false;
            row.subRows.forEach((subRow) => {
                setSelectionState(subRow, selectedRowIds);
                if (subRow.isSelected || subRow.isSomeSelected) {
                    isSomeSubRowsSelected = true;
                }
            });
            if (selectedRowIds[row.id]) {
                row.isSelected = true;
                row.isSomeSelected = false;
                selectedFlatRows.push(row);
            }
            else {
                row.isSelected = false;
                row.isSomeSelected = isSomeSubRowsSelected;
            }
        };
        instance.rows.forEach((row) => setSelectionState(row, instance.state.selectedRowIds));
        return selectedFlatRows;
    }, [instance.rows, instance.state.selectedRowIds]);
    Object.assign(instance, {
        selectedFlatRows,
    });
};

const useResizeColumns = (ownerDocument) => (hooks) => {
    hooks.getResizerProps = [defaultGetResizerProps(ownerDocument)];
    hooks.stateReducers.push(reducer$2);
    hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions);
};
const isTouchEvent = (event) => {
    return event.type === 'touchstart';
};
const defaultGetResizerProps = (ownerDocument) => (props, { instance, header, nextHeader, }) => {
    const { dispatch } = instance;
    const onResizeStart = (e, header) => {
        var _a, _b, _c;
        // lets not respond to multiple touches (e.g. 2 or 3 fingers)
        if (isTouchEvent(e) && e.touches && e.touches.length > 1) {
            return;
        }
        const headerIdWidths = getLeafHeaders(header).map((d) => [
            d.id,
            getHeaderWidth(d),
        ]);
        const nextHeaderIdWidths = nextHeader
            ? getLeafHeaders(nextHeader).map((d) => [d.id, getHeaderWidth(d)])
            : [];
        const clientX = isTouchEvent(e)
            ? Math.round(e.touches[0].clientX)
            : e.clientX;
        const dispatchMove = (clientXPos) => dispatch({ type: actions.columnResizing, clientX: clientXPos });
        const dispatchEnd = () => dispatch({
            type: actions.columnDoneResizing,
        });
        const handlersAndEvents = {
            mouse: {
                moveEvent: 'mousemove',
                moveHandler: (e) => dispatchMove(e.clientX),
                upEvent: 'mouseup',
                upHandler: () => {
                    var _a, _b, _c;
                    (_a = ownerDocument.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('mousemove', handlersAndEvents.mouse.moveHandler);
                    (_b = ownerDocument.current) === null || _b === void 0 ? void 0 : _b.removeEventListener('mouseup', handlersAndEvents.mouse.upHandler);
                    (_c = ownerDocument.current) === null || _c === void 0 ? void 0 : _c.removeEventListener('mouseleave', handlersAndEvents.mouse.upHandler);
                    dispatchEnd();
                },
            },
            touch: {
                moveEvent: 'touchmove',
                moveHandler: (e) => {
                    if (e.cancelable) {
                        e.preventDefault();
                        e.stopPropagation();
                    }
                    dispatchMove(e.touches[0].clientX);
                },
                upEvent: 'touchend',
                upHandler: () => {
                    var _a, _b;
                    (_a = ownerDocument.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(handlersAndEvents.touch.moveEvent, handlersAndEvents.touch.moveHandler);
                    (_b = ownerDocument.current) === null || _b === void 0 ? void 0 : _b.removeEventListener(handlersAndEvents.touch.upEvent, handlersAndEvents.touch.moveHandler);
                    dispatchEnd();
                },
            },
        };
        const events = isTouchEvent(e)
            ? handlersAndEvents.touch
            : handlersAndEvents.mouse;
        const passiveIfSupported = passiveEventSupported()
            ? { passive: false }
            : false;
        (_a = ownerDocument.current) === null || _a === void 0 ? void 0 : _a.addEventListener(events.moveEvent, events.moveHandler, passiveIfSupported);
        (_b = ownerDocument.current) === null || _b === void 0 ? void 0 : _b.addEventListener(events.upEvent, events.upHandler, passiveIfSupported);
        if (!isTouchEvent(e)) {
            (_c = ownerDocument.current) === null || _c === void 0 ? void 0 : _c.addEventListener('mouseleave', handlersAndEvents.mouse.upHandler, passiveIfSupported);
        }
        dispatch({
            type: actions.columnStartResizing,
            columnId: header.id,
            columnWidth: getHeaderWidth(header),
            nextColumnWidth: getHeaderWidth(nextHeader),
            headerIdWidths,
            nextHeaderIdWidths,
            clientX,
        });
    };
    return [
        props,
        {
            onClick: (e) => {
                // Prevents from triggering sort
                e.stopPropagation();
            },
            onMouseDown: (e) => {
                e.persist();
                // Prevents from triggering drag'n'drop
                e.preventDefault();
                // Prevents from triggering sort
                e.stopPropagation();
                onResizeStart(e, header);
            },
            onTouchStart: (e) => {
                e.persist();
                // Prevents from triggering drag'n'drop
                e.preventDefault();
                onResizeStart(e, header);
            },
            style: {
                cursor: 'col-resize',
            },
            draggable: false,
            role: 'separator',
        },
    ];
};
useResizeColumns.pluginName = 'useResizeColumns';
const reducer$2 = (newState, action, previousState, instance) => {
    if (action.type === actions.init) {
        return {
            ...newState,
            columnResizing: {
                columnWidths: {},
            },
        };
    }
    if (action.type === actions.resetResize) {
        return {
            ...newState,
            columnResizing: {
                columnWidths: {},
            },
        };
    }
    if (action.type === actions.columnStartResizing) {
        const { clientX, columnId, columnWidth, nextColumnWidth, headerIdWidths, nextHeaderIdWidths, } = action;
        return {
            ...newState,
            columnResizing: {
                ...newState.columnResizing,
                startX: clientX,
                columnWidth,
                nextColumnWidth,
                headerIdWidths,
                nextHeaderIdWidths,
                isResizingColumn: columnId,
            },
        };
    }
    if (action.type === actions.columnResizing) {
        const { clientX } = action;
        const { startX = 0, columnWidth = 1, nextColumnWidth = 1, headerIdWidths = [], nextHeaderIdWidths = [], } = newState.columnResizing;
        if (!instance) {
            return newState;
        }
        const deltaX = clientX - startX;
        const newColumnWidths = getColumnWidths(headerIdWidths, deltaX / columnWidth);
        const isTableWidthDecreasing = calculateTableWidth(newColumnWidths, instance.flatHeaders) <
            instance.tableWidth;
        const newNextColumnWidths = (instance === null || instance === void 0 ? void 0 : instance.columnResizeMode) === 'fit' ||
            ((instance === null || instance === void 0 ? void 0 : instance.columnResizeMode) === 'expand' && isTableWidthDecreasing)
            ? getColumnWidths(nextHeaderIdWidths, -deltaX / nextColumnWidth)
            : {};
        if (!isNewColumnWidthsValid(newColumnWidths, instance.flatHeaders) ||
            !isNewColumnWidthsValid(newNextColumnWidths, instance.flatHeaders) ||
            !isNewTableWidthValid({ ...newColumnWidths, ...newNextColumnWidths }, instance)) {
            return newState;
        }
        // Setting `width` here because it might take several rerenders until actual column width is set.
        // Also setting after the actual resize happened.
        instance === null || instance === void 0 ? void 0 : instance.flatHeaders.forEach((h) => {
            if (!h.width) {
                h.width = h.resizeWidth;
            }
        });
        return {
            ...newState,
            columnResizing: {
                ...newState.columnResizing,
                columnWidths: {
                    ...newState.columnResizing.columnWidths,
                    ...newColumnWidths,
                    ...newNextColumnWidths,
                },
            },
        };
    }
    if (action.type === actions.columnDoneResizing) {
        return {
            ...newState,
            columnResizing: {
                ...newState.columnResizing,
                startX: undefined,
                isResizingColumn: undefined,
            },
        };
    }
    return newState;
};
const getColumnWidths = (headerIdWidths, deltaPercentage) => {
    const columnWidths = {};
    headerIdWidths.forEach(([headerId, headerWidth]) => {
        columnWidths[headerId] = Math.max(headerWidth + headerWidth * deltaPercentage, 0);
    });
    return columnWidths;
};
const isNewColumnWidthsValid = (columnWidths, headers) => {
    // Prevents from going outside the column bounds
    if (Object.values(columnWidths).some((width) => width <= 1)) {
        return false;
    }
    for (const [headerId, width] of Object.entries(columnWidths)) {
        const header = headers === null || headers === void 0 ? void 0 : headers.find((h) => h.id === headerId);
        if (!header) {
            continue;
        }
        const minWidth = header.minWidth || 0;
        const maxWidth = header.maxWidth || Infinity;
        if (width < minWidth || width > maxWidth) {
            return false;
        }
    }
    return true;
};
const isNewTableWidthValid = (columnWidths, instance) => {
    if (instance.columnResizeMode === 'fit') {
        return true;
    }
    let newTableWidth = 0;
    for (const header of instance.flatHeaders) {
        newTableWidth += columnWidths[header.id]
            ? columnWidths[header.id]
            : getHeaderWidth(header);
    }
    // `tableWidth` is whole number therefore we need to round the `newTableWidth`
    if (Math.round(newTableWidth) < instance.tableWidth) {
        return false;
    }
    return true;
};
const useInstanceBeforeDimensions = (instance) => {
    const { flatHeaders, getHooks, state: { columnResizing }, columnResizeMode, } = instance;
    const getInstance = useGetLatest(instance);
    flatHeaders.forEach((header, index) => {
        var _a;
        const resizeWidth = columnResizing.columnWidths[header.id];
        header.width = resizeWidth || header.width || header.originalWidth;
        header.isResizing = columnResizing.isResizingColumn === header.id;
        const headerToResize = header.disableResizing && columnResizeMode === 'fit'
            ? getPreviousResizableHeader(header, instance)
            : header;
        // When `columnResizeMode` is `expand` and it is a last column,
        // then try to find some column on the left side to resize
        // when table width is decreasing.
        const nextResizableHeader = columnResizeMode === 'expand' && index === flatHeaders.length - 1
            ? getPreviousResizableHeader(header, instance)
            : getNextResizableHeader(header, instance);
        header.canResize =
            header.disableResizing != null ? !header.disableResizing : true;
        // Show resizer when header is resizable or when next header is resizable
        // and there is resizable columns on the left side of the resizer.
        if (columnResizeMode === 'fit') {
            header.isResizerVisible =
                (header.canResize && !!nextResizableHeader) ||
                    (headerToResize && !!((_a = instance.flatHeaders[index + 1]) === null || _a === void 0 ? void 0 : _a.canResize));
            // When resize mode is `expand` show resizer on the current resizable column.
        }
        else {
            header.isResizerVisible = header.canResize && !!headerToResize;
        }
        header.getResizerProps = makePropGetter(getHooks().getResizerProps, {
            instance: getInstance(),
            header: headerToResize,
            nextHeader: nextResizableHeader,
        });
    });
};
const getPreviousResizableHeader = (headerColumn, instance) => {
    var _a;
    const headersList = (((_a = headerColumn.parent) === null || _a === void 0 ? void 0 : _a.columns) || instance.flatHeaders).filter(({ isVisible }) => isVisible);
    const headerIndex = headersList.findIndex((h) => h.id === headerColumn.id);
    return [...headersList]
        .slice(0, headerIndex)
        .reverse()
        .find((h) => !h.disableResizing);
};
const getNextResizableHeader = (headerColumn, instance) => {
    var _a;
    const headersList = (((_a = headerColumn.parent) === null || _a === void 0 ? void 0 : _a.columns) || instance.flatHeaders).filter(({ isVisible }) => isVisible);
    const headerIndex = headersList.findIndex((h) => h.id === headerColumn.id);
    return [...headersList]
        .slice(headerIndex + 1)
        .find((h) => !h.disableResizing);
};
function getLeafHeaders(header) {
    const leafHeaders = [];
    const recurseHeader = (header) => {
        if (header.columns && header.columns.length) {
            header.columns.map(recurseHeader);
        }
        leafHeaders.push(header);
    };
    recurseHeader(header);
    return leafHeaders;
}
const getHeaderWidth = (header) => {
    return Number(header.width || header.resizeWidth || 0);
};
const calculateTableWidth = (columnWidths, headers) => {
    let newTableWidth = 0;
    for (const header of headers) {
        newTableWidth += columnWidths[header.id]
            ? columnWidths[header.id]
            : getHeaderWidth(header);
    }
    return newTableWidth;
};
// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support
let passiveSupported = null;
const passiveEventSupported = () => {
    // memoize support to avoid adding multiple test events
    if (passiveSupported != null) {
        return passiveSupported;
    }
    try {
        const options = {
            once: true,
            get passive() {
                passiveSupported = true;
                return false;
            },
        };
        window.addEventListener('test', () => { }, options);
    }
    catch (_a) {
        passiveSupported = false;
    }
    return passiveSupported;
};

const REORDER_ACTIONS = {
    columnDragStart: 'columnDragStart',
    columnDragEnd: 'columnDragEnd',
};
const useColumnDragAndDrop = (isEnabled) => (hooks) => {
    hooks.getDragAndDropProps = [defaultGetDragAndDropProps(isEnabled)];
    hooks.stateReducers.push(reducer$1);
    hooks.useInstance.push(useInstance$1);
};
const defaultGetDragAndDropProps = (isEnabled) => (props, { instance, header, }) => {
    if (!isEnabled || header.disableReordering) {
        return props;
    }
    const onDragStart = () => {
        instance.dispatch({
            type: REORDER_ACTIONS.columnDragStart,
            columnIndex: instance.flatHeaders.indexOf(header),
        });
    };
    const setOnDragColumnStyle = (event, position) => {
        const columnElement = event.currentTarget;
        columnElement.classList.remove('iui-table-reorder-column-right');
        columnElement.classList.remove('iui-table-reorder-column-left');
        if (position === 'left') {
            columnElement.classList.add('iui-table-reorder-column-left');
        }
        else if (position === 'right') {
            columnElement.classList.add('iui-table-reorder-column-right');
        }
    };
    const reorderColumns = (tableColumns, srcIndex, dstIndex) => {
        const newTableColumns = [...tableColumns];
        const [removed] = newTableColumns.splice(srcIndex, 1);
        newTableColumns.splice(dstIndex, 0, removed);
        return newTableColumns;
    };
    const onDragOver = (event) => {
        event.preventDefault();
        const headerIndex = instance.flatHeaders.indexOf(header);
        if (instance.state.columnReorderStartIndex !== headerIndex) {
            setOnDragColumnStyle(event, instance.state.columnReorderStartIndex > headerIndex ? 'left' : 'right');
        }
    };
    const onDragLeave = (event) => {
        setOnDragColumnStyle(event);
    };
    const onDrop = (event) => {
        event.preventDefault();
        setOnDragColumnStyle(event);
        const columnIds = instance.flatHeaders.map((x) => x.id);
        const srcIndex = instance.state.columnReorderStartIndex;
        const dstIndex = columnIds.findIndex((x) => x === header.id);
        if (srcIndex === dstIndex || srcIndex === -1 || dstIndex === -1) {
            return;
        }
        instance.setColumnOrder(reorderColumns(columnIds, srcIndex, dstIndex));
        instance.dispatch({
            type: REORDER_ACTIONS.columnDragEnd,
            columnIndex: -1,
        });
    };
    return [
        props,
        {
            draggable: true,
            onDragStart,
            onDragOver,
            onDragLeave,
            onDrop,
        },
    ];
};
const reducer$1 = (newState, action) => {
    switch (action.type) {
        case actions.init:
            return {
                ...newState,
                columnReorderStartIndex: -1,
            };
        case REORDER_ACTIONS.columnDragStart:
            return {
                ...newState,
                columnReorderStartIndex: action.columnIndex,
            };
        case REORDER_ACTIONS.columnDragEnd:
            return {
                ...newState,
                columnReorderStartIndex: -1,
            };
        default:
            return newState;
    }
};
const useInstance$1 = (instance) => {
    const { flatHeaders, getHooks } = instance;
    const getInstance = useGetLatest(instance);
    flatHeaders.forEach((header) => {
        header.getDragAndDropProps = makePropGetter(getHooks().getDragAndDropProps, {
            instance: getInstance(),
            header,
        });
    });
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
function useScrollToRow({ data, enableVirtualization, page, paginatorRenderer, scrollToRow, }) {
    const rowRefs = React__default.useRef({});
    // Refs prevents from having `page` and `data` as dependencies
    // therefore we avoid unnecessary scroll to row.
    const pageRef = React__default.useRef(page);
    pageRef.current = page;
    const dataRef = React__default.useRef(data);
    dataRef.current = data;
    // For virtualized tables, all we need to do is pass the index of the item
    // to the VirtualScroll component
    const scrollToIndex = React__default.useMemo(() => {
        if (!scrollToRow || paginatorRenderer) {
            return undefined;
        }
        const index = scrollToRow(pageRef.current, dataRef.current);
        return index < 0 ? undefined : index;
    }, [paginatorRenderer, scrollToRow]);
    // For non-virtualized tables, we need to add a ref to each row
    // and scroll to the element
    React__default.useEffect(() => {
        var _a;
        if (enableVirtualization ||
            scrollToIndex === undefined ||
            scrollToIndex === null ||
            scrollToIndex < 0) {
            return;
        }
        (_a = rowRefs.current[pageRef.current[scrollToIndex].id]) === null || _a === void 0 ? void 0 : _a.scrollIntoView();
    }, [enableVirtualization, scrollToIndex]);
    const tableRowRef = React__default.useCallback((row) => {
        return (element) => {
            rowRefs.current[row.id] = element;
        };
    }, []);
    return { scrollToIndex, tableRowRef };
}

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
actions.setScrolledLeft = 'setScrolledLeft';
actions.setScrolledRight = 'setScrolledRight';
const useStickyColumns = (hooks) => {
    hooks.stateReducers.push(reducer);
    hooks.useInstance.push(useInstance);
};
const reducer = (newState, action) => {
    var _a, _b;
    if (action.type === actions.init) {
        return {
            ...newState,
            sticky: {},
        };
    }
    if (action.type === actions.setScrolledLeft &&
        ((_a = newState.sticky) === null || _a === void 0 ? void 0 : _a.isScrolledToLeft) !== action.value // Prevents unnecessary re-render
    ) {
        return {
            ...newState,
            sticky: {
                ...newState.sticky,
                isScrolledToLeft: action.value,
            },
        };
    }
    if (action.type === actions.setScrolledRight &&
        ((_b = newState.sticky) === null || _b === void 0 ? void 0 : _b.isScrolledToRight) !== action.value // Prevents unnecessary re-render
    ) {
        return {
            ...newState,
            sticky: {
                ...newState.sticky,
                isScrolledToRight: action.value,
            },
        };
    }
    return newState;
};
const useInstance = (instance) => {
    const { flatHeaders } = instance;
    // Edge case. Saving original sticky state in case sticky columns are reordered.
    flatHeaders.forEach((header) => {
        var _a;
        if (!header.originalSticky) {
            header.originalSticky = (_a = header.sticky) !== null && _a !== void 0 ? _a : 'none';
        }
        header.sticky =
            header.originalSticky === 'none' ? undefined : header.originalSticky;
    });
    // If there is a column that is sticked to the left, make every column prior to that sticky too.
    let hasLeftStickyColumn = false;
    [...flatHeaders].reverse().forEach((header) => {
        if (header.sticky === 'left') {
            hasLeftStickyColumn = true;
        }
        if (hasLeftStickyColumn) {
            header.sticky = 'left';
        }
    });
    // If there is a column that is sticked to the right, make every column after to that sticky too.
    let hasRightStickyColumn = false;
    flatHeaders.forEach((header) => {
        if (header.sticky === 'right') {
            hasRightStickyColumn = true;
        }
        if (hasRightStickyColumn) {
            header.sticky = 'right';
        }
    });
};

const onExpandHandler = (newState, instance, onExpand) => {
    if (!(instance === null || instance === void 0 ? void 0 : instance.preFilteredFlatRows.length)) {
        onExpand === null || onExpand === void 0 ? void 0 : onExpand([], newState);
        return;
    }
    const expandedData = [];
    instance.preFilteredFlatRows.forEach((row) => {
        if (newState.expanded[row.id]) {
            expandedData.push(row.original);
        }
    });
    onExpand === null || onExpand === void 0 ? void 0 : onExpand(expandedData, newState);
};

const onFilterHandler = (newState, action, previousState, instance, onFilter) => {
    const previousFilter = previousState.filters.find((f) => f.id === action.columnId);
    if ((previousFilter === null || previousFilter === void 0 ? void 0 : previousFilter.value) != action.filterValue) {
        const filters = newState.filters.map((f) => {
            var _a, _b;
            const column = instance === null || instance === void 0 ? void 0 : instance.allColumns.find((c) => c.id === f.id);
            return {
                id: f.id,
                value: f.value,
                fieldType: (_a = column === null || column === void 0 ? void 0 : column.fieldType) !== null && _a !== void 0 ? _a : 'text',
                filterType: (_b = column === null || column === void 0 ? void 0 : column.filter) !== null && _b !== void 0 ? _b : 'text',
            };
        });
        onFilter === null || onFilter === void 0 ? void 0 : onFilter(filters, newState);
    }
};

/**
 * Handles selection when clicked on a checkbox.
 */
const onSelectHandler = (newState, instance, onSelect, isRowDisabled) => {
    if (!(instance === null || instance === void 0 ? void 0 : instance.rows.length)) {
        onSelect === null || onSelect === void 0 ? void 0 : onSelect([], newState);
        return;
    }
    const newSelectedRowIds = {};
    const handleRow = (row) => {
        if (isRowDisabled === null || isRowDisabled === void 0 ? void 0 : isRowDisabled(row.original)) {
            return false;
        }
        let isAllSubSelected = true;
        row.initialSubRows.forEach((subRow) => {
            const result = handleRow(subRow);
            if (!result) {
                isAllSubSelected = false;
            }
        });
        // If `selectSubRows` is false, then no need to select sub-rows and just check current selection state.
        // If a row doesn't have sub-rows then check its selection state.
        // If it has sub-rows then check whether all of them are selected.
        if ((!instance.selectSubRows && newState.selectedRowIds[row.id]) ||
            (!row.initialSubRows.length && newState.selectedRowIds[row.id]) ||
            (row.initialSubRows.length && isAllSubSelected)) {
            newSelectedRowIds[row.id] = true;
        }
        return !!newSelectedRowIds[row.id];
    };
    instance.initialRows.forEach((row) => handleRow(row));
    const selectedData = getSelectedData(newSelectedRowIds, instance);
    newState.selectedRowIds = newSelectedRowIds;
    onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectedData, newState);
};
/**
 * Handles selection when clicked on a row.
 */
const onSingleSelectHandler = (state, action, instance, onSelect, isRowDisabled) => {
    const selectedRowIds = { [action.id]: true };
    if (instance === null || instance === void 0 ? void 0 : instance.selectSubRows) {
        const handleRow = (row) => {
            selectedRowIds[row.id] = true;
            row.subRows.forEach((r) => handleRow(r));
        };
        handleRow(instance.rowsById[action.id]);
    }
    const newState = {
        ...state,
        lastSelectedRowId: action.id,
        selectedRowIds,
    };
    // Passing to `onSelectHandler` to handle filtered sub-rows
    onSelectHandler(newState, instance, onSelect, isRowDisabled);
    return newState;
};
/**
 * Handles selection when clicked on a row while shift key is pressed.
 */
const onShiftSelectHandler = (state, action, instance, onSelect, isRowDisabled) => {
    if (instance == null) {
        return state;
    }
    let startIndex = Math.max(0, instance.flatRows.findIndex((row) => row.id === state.lastSelectedRowId));
    let endIndex = Math.max(0, instance.flatRows.findIndex((row) => row.id === action.id));
    if (startIndex > endIndex) {
        const temp = startIndex;
        startIndex = endIndex;
        endIndex = temp;
    }
    const selectedRowIds = {};
    // 1. Select all rows between start and end
    instance.flatRows
        .slice(startIndex, endIndex + 1)
        .forEach((r) => (selectedRowIds[r.id] = true));
    // 2. Select all children of the last row (endIndex)
    // Since lastRow's children come after endIndex + 1 (not selected in step 1)
    const handleRow = (row) => {
        selectedRowIds[row.id] = true;
        row.subRows.forEach((r) => handleRow(r));
    };
    handleRow(instance.flatRows[endIndex]);
    const newState = {
        ...state,
        selectedRowIds,
    };
    // 3.1 Deselect all selected disabled rows and their children
    // 3.2 Convert all partially selected rows marked with tick mark to horizontal line
    onSelectHandler(newState, instance, onSelect, isRowDisabled);
    return newState;
};
const getSelectedData = (selectedRowIds, instance) => {
    const selectedData = [];
    const setSelectedData = (row) => {
        if (selectedRowIds[row.id]) {
            selectedData.push(row.original);
        }
        row.initialSubRows.forEach((subRow) => setSelectedData(subRow));
    };
    instance === null || instance === void 0 ? void 0 : instance.initialRows.forEach((row) => setSelectedData(row));
    return selectedData;
};

const onTableResizeStart = (state) => {
    return { ...state, isTableResizing: true };
};
const onTableResizeEnd = (state, action) => {
    return {
        ...state,
        isTableResizing: false,
        columnResizing: {
            ...state.columnResizing,
            columnWidths: {
                ...action.columnWidths,
            },
        },
    };
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const singleRowSelectedAction = 'singleRowSelected';
const shiftRowSelectedAction = 'shiftRowSelected';
const tableResizeStartAction = 'tableResizeStart';
const tableResizeEndAction = 'tableResizeEnd';
const flattenColumns = (columns) => {
    const flatColumns = [];
    columns.forEach((column) => {
        flatColumns.push(column);
        if (column.columns) {
            flatColumns.push(...flattenColumns(column.columns));
        }
    });
    return flatColumns;
};
/**
 * Table based on [react-table](https://react-table.tanstack.com/docs/api/overview).
 * @example
 * const columns = React.useMemo(() => [
 *   {
 *     id: 'name',
 *     Header: 'Name',
 *     accessor: 'name',
 *     width: 90,
 *   },
 *   {
 *     id: 'description',
 *     Header: 'description',
 *     accessor: 'description',
 *     maxWidth: 200,
 *   },
 *   {
 *     id: 'view',
 *     Header: 'view',
 *     Cell: () => {
 *       return <span onClick={onViewClick}>View</span>
 *     },
 *   },
 * ], [onViewClick])
 * const data = [
 *  { name: 'Name1', description: 'Description1' },
 *  { name: 'Name2', description: 'Description2' },
 *  { name: 'Name3', description: 'Description3' },
 * ]
 * <Table
 *   columns={columns}
 *   data={data}
 *   emptyTableContent='No data.'
 *   isLoading={false}
 *   isSortable={true}
 * />
 */
const Table = (props) => {
    const { data, columns, isLoading = false, emptyTableContent, className, style, id, isSelectable = false, onSelect, onRowClick, selectionMode = 'multi', isSortable = false, onSort, stateReducer, onBottomReached, onRowInViewport, intersectionMargin = 300, subComponent, onExpand, onFilter, globalFilterValue, emptyFilteredTableContent, filterTypes: filterFunctions, expanderCell, isRowDisabled, rowProps, density = 'default', selectSubRows = true, getSubRows, selectRowOnClick = true, paginatorRenderer, pageSize = 25, isResizable = false, columnResizeMode = 'fit', styleType = 'default', enableVirtualization = false, enableColumnReordering = false, ...rest } = props;
    useTheme();
    const ownerDocument = React__default.useRef();
    const defaultColumn = React__default.useMemo(() => ({
        maxWidth: 0,
        minWidth: 0,
        width: 0,
    }), []);
    // useRef prevents from rerendering when one of these callbacks changes
    const onBottomReachedRef = React__default.useRef(onBottomReached);
    const onRowInViewportRef = React__default.useRef(onRowInViewport);
    React__default.useEffect(() => {
        onBottomReachedRef.current = onBottomReached;
        onRowInViewportRef.current = onRowInViewport;
    }, [onBottomReached, onRowInViewport]);
    const hasManualSelectionColumn = React__default.useMemo(() => {
        const flatColumns = flattenColumns(columns);
        return flatColumns.some((column) => column.id === SELECTION_CELL_ID);
    }, [columns]);
    const disableUserSelect = React__default.useCallback((e) => {
        if (e.key === 'Shift') {
            ownerDocument.current &&
                (ownerDocument.current.documentElement.style.userSelect = 'none');
        }
    }, []);
    const enableUserSelect = React__default.useCallback((e) => {
        if (e.key === 'Shift') {
            ownerDocument.current &&
                (ownerDocument.current.documentElement.style.userSelect = '');
        }
    }, []);
    React__default.useEffect(() => {
        if (!isSelectable || selectionMode !== 'multi') {
            return;
        }
        const ownerDoc = ownerDocument.current;
        ownerDoc === null || ownerDoc === void 0 ? void 0 : ownerDoc.addEventListener('keydown', disableUserSelect);
        ownerDoc === null || ownerDoc === void 0 ? void 0 : ownerDoc.addEventListener('keyup', enableUserSelect);
        return () => {
            ownerDoc === null || ownerDoc === void 0 ? void 0 : ownerDoc.removeEventListener('keydown', disableUserSelect);
            ownerDoc === null || ownerDoc === void 0 ? void 0 : ownerDoc.removeEventListener('keyup', enableUserSelect);
        };
    }, [
        isSelectable,
        selectionMode,
        ownerDocument,
        disableUserSelect,
        enableUserSelect,
    ]);
    const tableStateReducer = React__default.useCallback((newState, action, previousState, instance) => {
        switch (action.type) {
            case actions.toggleSortBy:
                onSort === null || onSort === void 0 ? void 0 : onSort(newState);
                break;
            case actions.setFilter:
                onFilterHandler(newState, action, previousState, instance, onFilter);
                break;
            case actions.toggleRowExpanded:
            case actions.toggleAllRowsExpanded:
                onExpandHandler(newState, instance, onExpand);
                break;
            case singleRowSelectedAction: {
                newState = onSingleSelectHandler(newState, action, instance, onSelect, 
                // If it has manual selection column, then we can't check whether row is disabled
                hasManualSelectionColumn ? undefined : isRowDisabled);
                break;
            }
            case shiftRowSelectedAction: {
                newState = onShiftSelectHandler(newState, action, instance, onSelect, 
                // If it has manual selection column, then we can't check whether row is disabled
                hasManualSelectionColumn ? undefined : isRowDisabled);
                break;
            }
            case actions.toggleRowSelected:
            case actions.toggleAllRowsSelected:
            case actions.toggleAllPageRowsSelected: {
                onSelectHandler(newState, instance, onSelect, 
                // If it has manual selection column, then we can't check whether row is disabled
                hasManualSelectionColumn ? undefined : isRowDisabled);
                break;
            }
            case tableResizeStartAction: {
                newState = onTableResizeStart(newState);
                break;
            }
            case tableResizeEndAction: {
                newState = onTableResizeEnd(newState, action);
                break;
            }
        }
        return stateReducer
            ? stateReducer(newState, action, previousState, instance)
            : newState;
    }, [
        hasManualSelectionColumn,
        isRowDisabled,
        onExpand,
        onFilter,
        onSelect,
        onSort,
        stateReducer,
    ]);
    const filterTypes = React__default.useMemo(() => ({ ...customFilterFunctions, ...filterFunctions }), [filterFunctions]);
    const hasAnySubRows = React__default.useMemo(() => {
        return data.some((item, index) => getSubRows ? getSubRows(item, index) : item.subRows);
    }, [data, getSubRows]);
    const instance = useTable({
        manualPagination: !paginatorRenderer,
        paginateExpandedRows: false,
        ...props,
        columns,
        defaultColumn,
        disableSortBy: !isSortable,
        stateReducer: tableStateReducer,
        filterTypes,
        selectSubRows,
        data,
        getSubRows,
        initialState: { pageSize, ...props.initialState },
        columnResizeMode,
    }, useFlexLayout, useResizeColumns(ownerDocument), useFilters, useSubRowFiltering(hasAnySubRows), useGlobalFilter, useSortBy, useExpanded, usePagination, useRowSelect, useSubRowSelection, useExpanderCell(subComponent, expanderCell, isRowDisabled), useSelectionCell(isSelectable, selectionMode, isRowDisabled), useColumnOrder, useColumnDragAndDrop(enableColumnReordering), useStickyColumns);
    const { getTableProps, rows, headerGroups, getTableBodyProps, prepareRow, state, allColumns, dispatch, page, gotoPage, setPageSize, flatHeaders, visibleColumns, setGlobalFilter, } = instance;
    const ariaDataAttributes = Object.entries(rest).reduce((result, [key, value]) => {
        if (key.startsWith('data-') || key.startsWith('aria-')) {
            result[key] = value;
        }
        return result;
    }, {});
    const areFiltersSet = allColumns.some((column) => column.filterValue != null && column.filterValue !== '') || !!globalFilterValue;
    const showFilterButton = (column) => (data.length !== 0 || areFiltersSet) && column.canFilter;
    const showSortButton = (column) => data.length !== 0 && column.canSort;
    const onRowClickHandler = React__default.useCallback((event, row) => {
        const isDisabled = isRowDisabled === null || isRowDisabled === void 0 ? void 0 : isRowDisabled(row.original);
        if (!isDisabled) {
            onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(event, row);
        }
        if (isSelectable &&
            !isDisabled &&
            selectRowOnClick &&
            !event.isDefaultPrevented()) {
            if (selectionMode === 'multi' && event.shiftKey) {
                dispatch({
                    type: shiftRowSelectedAction,
                    id: row.id,
                });
            }
            else if (!row.isSelected &&
                (selectionMode === 'single' || !event.ctrlKey)) {
                dispatch({
                    type: singleRowSelectedAction,
                    id: row.id,
                });
            }
            else {
                row.toggleRowSelected(!row.isSelected);
            }
        }
    }, [
        isRowDisabled,
        isSelectable,
        selectRowOnClick,
        selectionMode,
        dispatch,
        onRowClick,
    ]);
    React__default.useEffect(() => {
        setGlobalFilter(globalFilterValue);
    }, [globalFilterValue, setGlobalFilter]);
    React__default.useEffect(() => {
        setPageSize(pageSize);
    }, [pageSize, setPageSize]);
    const paginatorRendererProps = React__default.useMemo(() => ({
        currentPage: state.pageIndex,
        pageSize: state.pageSize,
        totalRowsCount: rows.length,
        size: density !== 'default' ? 'small' : 'default',
        isLoading,
        onPageChange: gotoPage,
        onPageSizeChange: setPageSize,
        totalSelectedRowsCount: selectionMode === 'single' ? 0 : instance.selectedFlatRows.length, // 0 when selectionMode = 'single' since totalSelectedRowCount is for multi-selection mode only
    }), [
        density,
        gotoPage,
        isLoading,
        rows.length,
        setPageSize,
        state.pageIndex,
        state.pageSize,
        instance.selectedFlatRows,
        selectionMode,
    ]);
    const { scrollToIndex, tableRowRef } = useScrollToRow({ ...props, page });
    const columnRefs = React__default.useRef({});
    const previousTableWidth = React__default.useRef(0);
    const onTableResize = React__default.useCallback(({ width }) => {
        instance.tableWidth = width;
        if (width === previousTableWidth.current) {
            return;
        }
        previousTableWidth.current = width;
        // Update column widths when table was resized
        flatHeaders.forEach((header) => {
            if (columnRefs.current[header.id]) {
                header.resizeWidth =
                    columnRefs.current[header.id].getBoundingClientRect().width;
            }
        });
        // If no column was resized then leave table resize handling to the flexbox
        if (Object.keys(state.columnResizing.columnWidths).length === 0) {
            return;
        }
        dispatch({ type: tableResizeStartAction });
    }, [dispatch, state.columnResizing.columnWidths, flatHeaders, instance]);
    const [resizeRef] = useResizeObserver(onTableResize);
    // Flexbox handles columns resize so we take new column widths before browser repaints.
    React__default.useLayoutEffect(() => {
        if (state.isTableResizing) {
            const newColumnWidths = {};
            flatHeaders.forEach((column) => {
                if (columnRefs.current[column.id]) {
                    newColumnWidths[column.id] =
                        columnRefs.current[column.id].getBoundingClientRect().width;
                }
            });
            dispatch({ type: tableResizeEndAction, columnWidths: newColumnWidths });
        }
    });
    const headerRef = React__default.useRef(null);
    const bodyRef = React__default.useRef(null);
    const getPreparedRow = React__default.useCallback((index) => {
        const row = page[index];
        prepareRow(row);
        return (React__default.createElement(TableRowMemoized, { row: row, rowProps: rowProps, isLast: index === page.length - 1, onRowInViewport: onRowInViewportRef, onBottomReached: onBottomReachedRef, intersectionMargin: intersectionMargin, state: state, key: row.getRowProps().key, onClick: onRowClickHandler, subComponent: subComponent, isDisabled: !!(isRowDisabled === null || isRowDisabled === void 0 ? void 0 : isRowDisabled(row.original)), tableHasSubRows: hasAnySubRows, tableInstance: instance, expanderCell: expanderCell, bodyRef: bodyRef.current, tableRowRef: enableVirtualization ? undefined : tableRowRef(row) }));
    }, [
        page,
        prepareRow,
        rowProps,
        intersectionMargin,
        state,
        onRowClickHandler,
        subComponent,
        isRowDisabled,
        hasAnySubRows,
        instance,
        expanderCell,
        enableVirtualization,
        tableRowRef,
    ]);
    const virtualizedItemRenderer = React__default.useCallback((index) => getPreparedRow(index), [getPreparedRow]);
    const updateStickyState = () => {
        if (!bodyRef.current || flatHeaders.every((header) => !header.sticky)) {
            return;
        }
        if (bodyRef.current.scrollLeft !== 0) {
            dispatch({ type: actions.setScrolledRight, value: true });
        }
        else {
            dispatch({ type: actions.setScrolledRight, value: false });
        }
        // If scrolled a bit to the left looking from the right side
        if (bodyRef.current.scrollLeft !==
            bodyRef.current.scrollWidth - bodyRef.current.clientWidth) {
            dispatch({ type: actions.setScrolledLeft, value: true });
        }
        else {
            dispatch({ type: actions.setScrolledLeft, value: false });
        }
    };
    React__default.useEffect(() => {
        updateStickyState();
        // Call only on init
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    const isHeaderDirectClick = React__default.useRef(false);
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement("div", { ref: (element) => {
                ownerDocument.current = element === null || element === void 0 ? void 0 : element.ownerDocument;
                if (isResizable) {
                    resizeRef(element);
                }
            }, id: id, ...getTableProps({
                className: cx('iui-table', className),
                style: {
                    minWidth: 0,
                    ...style,
                },
            }), "data-iui-size": density === 'default' ? undefined : density, ...ariaDataAttributes },
            headerGroups.map((headerGroup) => {
                // There may be a better solution for this, but for now I'm filtering out the placeholder cells using header.id
                headerGroup.headers = headerGroup.headers.filter((header) => !header.id.includes('iui-table-checkbox-selector_placeholder') &&
                    !header.id.includes('iui-table-expander_placeholder'));
                const headerGroupProps = headerGroup.getHeaderGroupProps({
                    className: 'iui-table-row',
                });
                return (React__default.createElement("div", { className: 'iui-table-header-wrapper', ref: headerRef, onScroll: () => {
                        if (headerRef.current && bodyRef.current) {
                            bodyRef.current.scrollLeft = headerRef.current.scrollLeft;
                            updateStickyState();
                        }
                    }, key: headerGroupProps.key },
                    React__default.createElement("div", { className: 'iui-table-header' },
                        React__default.createElement("div", { ...headerGroupProps }, headerGroup.headers.map((column, index) => {
                            const { onClick, ...restSortProps } = column.getSortByToggleProps();
                            const columnProps = column.getHeaderProps({
                                ...restSortProps,
                                className: cx('iui-table-cell', {
                                    'iui-actionable': column.canSort,
                                    'iui-sorted': column.isSorted,
                                    'iui-table-cell-sticky': !!column.sticky,
                                }, column.columnClassName),
                                style: {
                                    ...getCellStyle(column, !!state.isTableResizing),
                                    ...getStickyStyle(column, visibleColumns),
                                    flexWrap: 'unset',
                                },
                            });
                            return (React__default.createElement("div", { ...columnProps, ...column.getDragAndDropProps(), key: columnProps.key, title: undefined, ref: (el) => {
                                    if (el) {
                                        columnRefs.current[column.id] = el;
                                        column.resizeWidth =
                                            el.getBoundingClientRect().width;
                                    }
                                }, onMouseDown: () => {
                                    isHeaderDirectClick.current = true;
                                }, onClick: (e) => {
                                    // Prevents from triggering sort when resizing and mouse is released in the middle of header
                                    if (isHeaderDirectClick.current) {
                                        onClick === null || onClick === void 0 ? void 0 : onClick(e);
                                        isHeaderDirectClick.current = false;
                                    }
                                }, tabIndex: showSortButton(column) ? 0 : undefined, onKeyDown: (e) => {
                                    if (e.key == 'Enter' && showSortButton(column)) {
                                        column.toggleSortBy();
                                    }
                                } },
                                column.render('Header'),
                                (showFilterButton(column) ||
                                    showSortButton(column)) && (React__default.createElement("div", { className: 'iui-table-header-actions-container' },
                                    showFilterButton(column) && (React__default.createElement(FilterToggle, { column: column })),
                                    showSortButton(column) && (React__default.createElement("div", { className: 'iui-table-cell-end-icon' }, column.isSortedDesc ||
                                        (!column.isSorted && column.sortDescFirst) ? (React__default.createElement(SvgSortDown, { className: 'iui-table-sort', "aria-hidden": true })) : (React__default.createElement(SvgSortUp, { className: 'iui-table-sort', "aria-hidden": true })))))),
                                isResizable &&
                                    column.isResizerVisible &&
                                    (index !== headerGroup.headers.length - 1 ||
                                        columnResizeMode === 'expand') && (React__default.createElement("div", { ...column.getResizerProps(), className: 'iui-table-resizer' },
                                    React__default.createElement("div", { className: 'iui-table-resizer-bar' }))),
                                enableColumnReordering &&
                                    !column.disableReordering && (React__default.createElement("div", { className: 'iui-table-reorder-bar' })),
                                column.sticky === 'left' &&
                                    state.sticky.isScrolledToRight && (React__default.createElement("div", { className: 'iui-table-cell-shadow-right' })),
                                column.sticky === 'right' &&
                                    state.sticky.isScrolledToLeft && (React__default.createElement("div", { className: 'iui-table-cell-shadow-left' }))));
                        })))));
            }),
            React__default.createElement("div", { ...getTableBodyProps({
                    className: cx('iui-table-body', {
                        'iui-zebra-striping': styleType === 'zebra-rows',
                    }),
                    style: { outline: 0 },
                }), ref: bodyRef, onScroll: () => {
                    if (headerRef.current && bodyRef.current) {
                        headerRef.current.scrollLeft = bodyRef.current.scrollLeft;
                        updateStickyState();
                    }
                }, tabIndex: -1, "aria-multiselectable": (isSelectable && selectionMode === 'multi') || undefined },
                data.length !== 0 && (React__default.createElement(React__default.Fragment, null, enableVirtualization ? (React__default.createElement(VirtualScroll$1, { itemsLength: page.length, itemRenderer: virtualizedItemRenderer, scrollToIndex: scrollToIndex })) : (page.map((_, index) => getPreparedRow(index))))),
                isLoading && data.length === 0 && (React__default.createElement("div", { className: 'iui-table-empty' },
                    React__default.createElement(ProgressRadial, { indeterminate: true }))),
                isLoading && data.length !== 0 && (React__default.createElement("div", { className: 'iui-table-row' },
                    React__default.createElement("div", { className: 'iui-table-cell', style: { justifyContent: 'center' } },
                        React__default.createElement(ProgressRadial, { indeterminate: true, size: 'small', style: { float: 'none', marginLeft: 0 } })))),
                !isLoading && data.length === 0 && !areFiltersSet && (React__default.createElement("div", { className: 'iui-table-empty' },
                    React__default.createElement("div", null, emptyTableContent))),
                !isLoading &&
                    (data.length === 0 || rows.length === 0) &&
                    areFiltersSet && (React__default.createElement("div", { className: 'iui-table-empty' },
                    React__default.createElement("div", null, emptyFilteredTableContent)))), paginatorRenderer === null || paginatorRenderer === void 0 ? void 0 :
            paginatorRenderer(paginatorRendererProps))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Tag for showing categories, filters etc.
 * @example
 * <Tag onRemove={() => alert('Closed a tag!')}>I'm a tag</Tag>
 * <Tag variant='basic'>Basic tag</Tag>
 */
const Tag = (props) => {
    const { className, variant = 'default', children, onRemove, ...rest } = props;
    useTheme();
    return (React__default.createElement("span", { className: cx({
            'iui-tag-basic': variant === 'basic',
            'iui-tag': variant === 'default',
        }, className), ...rest },
        variant === 'default' ? (React__default.createElement("span", { className: 'iui-tag-label' }, children)) : (children),
        onRemove && (React__default.createElement(IconButton, { styleType: 'borderless', size: 'small', onClick: onRemove, "aria-label": 'Delete tag', className: 'iui-tag-button' },
            React__default.createElement(SvgCloseSmall, { "aria-hidden": true })))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * TagContainer for grouping tags.
 * @example
 * <TagContainer><Tag>Tag 1</Tag><Tag>Tag 2</Tag></TagContainer>
 * <TagContainer><Tag variant='basic'>Basic tag</Tag><Tag variant='basic'>Basic tag 2</Tag></TagContainer>
 */
const TagContainer = (props) => {
    const { className, children, overflow, background = 'none', ...rest } = props;
    useTheme();
    return (React__default.createElement("div", { className: cx('iui-tag-container', {
            [`iui-${overflow}`]: !!overflow,
            'iui-visible': background !== 'none',
        }, className), ...rest }, children));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Tile component that displays content and actions in a card-like format.
 * @example
 * <Tile
 *  name='Tile name'
 *  description='Tile description that takes upto 3 lines'
 *  metadata={<TagContainer><Tag variant='basic'>Tag 1</Tag></TagContainer>}
 *  thumbnail='/url/to/image.jpg'
 *  badge={<Badge backgroundColor='blue'>Badge label</Badge>}
 *  buttons={[<Button>Button 1</Button>, <Button>Button 2</Button>]}
 *  moreOptions={[<MenuItem>Item 1</MenuItem>, <MenuItem>Item 2</MenuItem>]}
 *  leftIcon={<IconButton><SvgInfo /></IconButton>}
 *  rightIcon={<IconButton><SvgStar /></IconButton>}
 *  isSelected={true}
 *  isNew={false}
 * />
 */
const Tile = (props) => {
    const { className, name, description, metadata, thumbnail, buttons, leftIcon, rightIcon, badge, isNew, isSelected, moreOptions, variant = 'default', children, isActionable, status, isLoading = false, isDisabled = false, ...rest } = props;
    useTheme();
    const [isMenuVisible, setIsMenuVisible] = React__default.useState(false);
    const showMenu = React__default.useCallback(() => setIsMenuVisible(true), []);
    const hideMenu = React__default.useCallback(() => setIsMenuVisible(false), []);
    return (React__default.createElement("div", { className: cx('iui-tile', {
            'iui-folder': variant === 'folder',
            'iui-new': isNew,
            'iui-selected': isSelected,
            'iui-actionable': isActionable,
            [`iui-${status}`]: !!status,
            'iui-loading': isLoading,
        }, className), "aria-disabled": isDisabled, tabIndex: isActionable && !isDisabled ? 0 : undefined, ...rest },
        thumbnail && (React__default.createElement("div", { className: 'iui-tile-thumbnail' },
            typeof thumbnail === 'string' ? (React__default.createElement("div", { className: 'iui-tile-thumbnail-picture', style: { backgroundImage: `url(${thumbnail})` } })) : thumbnail && thumbnail.type === 'img' ? (React__default.cloneElement(thumbnail, {
                className: 'iui-tile-thumbnail-picture',
            })) : React__default.isValidElement(thumbnail) ? (React__default.cloneElement(thumbnail, {
                className: cx('iui-thumbnail-icon', thumbnail.props.className),
            })) : (thumbnail),
            leftIcon &&
                React__default.cloneElement(leftIcon, {
                    className: 'iui-tile-thumbnail-type-indicator',
                    'data-iui-size': 'small',
                }),
            rightIcon &&
                React__default.cloneElement(rightIcon, {
                    className: 'iui-tile-thumbnail-quick-action',
                    'data-iui-size': 'small',
                }),
            badge && (React__default.createElement("div", { className: 'iui-tile-thumbnail-badge-container' }, badge)))),
        React__default.createElement("div", { className: 'iui-tile-content' },
            React__default.createElement("div", { className: 'iui-tile-name' },
                React__default.createElement(TitleIcon, { isLoading: isLoading, isSelected: isSelected, isNew: isNew, status: status }),
                React__default.createElement("span", { className: 'iui-tile-name-label' }, name)),
            description != undefined && (React__default.createElement("div", { className: 'iui-tile-description' }, description)),
            metadata != undefined && (React__default.createElement("div", { className: 'iui-tile-metadata' }, metadata)),
            moreOptions && (React__default.createElement(DropdownMenu, { onShow: showMenu, onHide: hideMenu, menuItems: (close) => moreOptions.map((option) => React__default.cloneElement(option, {
                    onClick: (value) => {
                        var _a, _b;
                        close();
                        (_b = (_a = option.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, value);
                    },
                })) },
                React__default.createElement("div", { className: cx('iui-tile-more-options', {
                        'iui-visible': isMenuVisible,
                    }) },
                    React__default.createElement(IconButton, { styleType: 'borderless', size: 'small', "aria-label": 'More options' },
                        React__default.createElement(SvgMore$1, null))))),
            children),
        buttons && React__default.createElement("div", { className: 'iui-tile-buttons' }, buttons)));
};
const TitleIcon = ({ isLoading = false, isSelected = false, isNew = false, status, }) => {
    const StatusIcon = !!status && StatusIconMap[status];
    if (isLoading) {
        return (React__default.createElement(ProgressRadial, { className: 'iui-tile-status-icon', "aria-hidden": true, indeterminate: true }));
    }
    if (isSelected) {
        return React__default.createElement(SvgCheckmark$1, { className: 'iui-tile-status-icon', "aria-hidden": true });
    }
    if (isNew) {
        return React__default.createElement(SvgNew, { className: 'iui-tile-status-icon', "aria-hidden": true });
    }
    if (StatusIcon) {
        return React__default.createElement(StatusIcon, { className: 'iui-tile-status-icon' });
    }
    return null;
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Generic Toast Component
 * @example
 * <Toast type='persisting' content='Job processing completed.' category='positive' link={{onClick:() => {alert('Link callback')}, title:'View the report'}} />
 * <Toast type='temporary' content='Processing completed.' category='positive' />
 * <Toast type='temporary' content='26 files are available for synchronization.' category='informational' />
 * <Toast type='persisting' content='Job processing error.' category='negative' />
 */
const Toast = (props) => {
    const { content, category, type = 'temporary', isVisible, link, duration = 7000, hasCloseButton, onRemove, animateOutTo, placementPosition = 'top', } = props;
    const closeTimeout = React__default.useRef(0);
    const [visible, setVisible] = React__default.useState(isVisible);
    const [height, setHeight] = React__default.useState(0);
    const thisElement = React__default.useRef(null);
    const [margin, setMargin] = React__default.useState(0);
    const marginStyle = () => {
        if (placementPosition === 'top') {
            return { marginBottom: margin };
        }
        return { marginTop: margin };
    };
    React__default.useEffect(() => {
        if (type === 'temporary') {
            setCloseTimeout(duration);
        }
        return () => {
            clearCloseTimeout();
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [duration, type]);
    React__default.useEffect(() => {
        setVisible(isVisible);
    }, [isVisible]);
    React__default.useEffect(() => {
        // if we don't have animateOutTo point and not isVisible, set negative margin to move other toasts up.
        // Close all and close on toasts with no anchor.
        if (!isVisible && !animateOutTo) {
            setMargin(-height);
        }
    }, [isVisible, animateOutTo, setMargin, height]);
    const close = () => {
        clearCloseTimeout();
        // move element up when this element is closed.
        setMargin(-height);
        setVisible(false);
    };
    const setCloseTimeout = (timeout) => {
        const definedWindow = getWindow();
        if (!definedWindow) {
            return;
        }
        closeTimeout.current = definedWindow.setTimeout(() => {
            close();
        }, timeout);
    };
    const clearCloseTimeout = () => {
        var _a;
        (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.clearTimeout(closeTimeout.current);
    };
    const onRef = (ref) => {
        if (ref) {
            const { height } = ref.getBoundingClientRect();
            setHeight(height);
        }
    };
    const calculateOutAnimation = (node) => {
        // calculation translate x and y pixels.
        let translateX = 0;
        let translateY = 0;
        if (animateOutTo && node) {
            const { x: startX, y: startY } = node.getBoundingClientRect(); // current element
            const { x: endX, y: endY } = animateOutTo.getBoundingClientRect(); // anchor point
            translateX = endX - startX;
            translateY = endY - startY;
        }
        return { translateX, translateY };
    };
    return (React__default.createElement(Transition, { timeout: { enter: 240, exit: animateOutTo ? 400 : 120 }, in: visible, appear: true, unmountOnExit: true, onEnter: (node) => {
            node.style.transform = 'translateY(15%)';
            node.style.transitionTimingFunction = 'ease';
        }, onEntered: (node) => {
            node.style.transform = 'translateY(0)';
        }, onExiting: (node) => {
            const { translateX, translateY } = calculateOutAnimation(node);
            node.style.transform = animateOutTo
                ? `scale(0.9) translate(${translateX}px,${translateY}px)`
                : `scale(0.9)`;
            node.style.opacity = '0';
            node.style.transitionDuration = animateOutTo ? '400ms' : '120ms';
            node.style.transitionTimingFunction = 'cubic-bezier(0.4, 0, 1, 1)';
        }, onExited: onRemove }, React__default.createElement("div", { ref: thisElement, className: 'iui-toast-all', style: {
            height,
            ...marginStyle(),
        } },
        React__default.createElement("div", { ref: onRef },
            React__default.createElement(ToastPresentation, { category: category, content: content, link: link, type: type, hasCloseButton: hasCloseButton, onClose: close })))));
};
/**
 * The presentational part of a toast, without any animation or logic.
 * @private
 */
const ToastPresentation = (props) => {
    const { content, category, type = 'temporary', link, hasCloseButton, onClose, className, ...rest } = props;
    const StatusIcon = StatusIconMap[category];
    return (React__default.createElement("div", { className: cx(`iui-toast iui-${category}`, className), ...rest },
        React__default.createElement("div", { className: 'iui-status-area' }, React__default.createElement(StatusIcon, { className: 'iui-icon' })),
        React__default.createElement("div", { className: 'iui-message' }, content),
        link && (React__default.createElement("a", { className: 'iui-toast-anchor', onClick: link.onClick }, link.title)),
        (type === 'persisting' || hasCloseButton) && (React__default.createElement(IconButton, { size: 'small', styleType: 'borderless', onClick: onClose, "aria-label": 'Close' },
            React__default.createElement(SvgCloseSmall, null)))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const ToastWrapper = React__default.forwardRef((_, ref) => {
    const [toasts, setToasts] = React__default.useState([]);
    const [placement, setPlacement] = React__default.useState('top');
    const placementPosition = placement.startsWith('top') ? 'top' : 'bottom';
    React__default.useImperativeHandle(ref, () => ({
        setToasts,
        setPlacement,
    }), []);
    return (React__default.createElement("span", { className: cx(`iui-toast-wrapper`, `iui-placement-${placement}`) }, toasts.map((toastProps) => {
        return (React__default.createElement(Toast, { key: toastProps.id, placementPosition: placementPosition, ...toastProps }));
    })));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const TOASTS_CONTAINER_ID = 'iui-toasts-container';
class Toaster {
    constructor() {
        this.toasts = [];
        this.lastId = 0;
        this.settings = {
            order: 'descending',
            placement: 'top',
        };
        this.toastsRef = React__default.createRef();
        this.isInitialized = false;
        // Create container on demand.
        // Cannot do it in constructor, because SSG/SSR apps would fail.
        this.asyncInit = async () => {
            var _a, _b;
            if (this.isInitialized) {
                return;
            }
            const container = (_a = getContainer(TOASTS_CONTAINER_ID)) !== null && _a !== void 0 ? _a : (_b = getDocument()) === null || _b === void 0 ? void 0 : _b.body;
            if (!container) {
                return;
            }
            this.isInitialized = true;
            const toastWrapper = React__default.createElement(ToastWrapper, { ref: this.toastsRef });
            const _ReactDOM = ReactDOM; // eslint-disable-line @typescript-eslint/no-explicit-any
            // v18 mode
            if (_ReactDOM.createRoot) {
                const _ReactDOMInternals = _ReactDOM.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
                // suppress warning about importing createRoot from react-dom/client
                if (_ReactDOMInternals) {
                    _ReactDOMInternals.usingClientEntryPoint = true;
                }
                const root = _ReactDOM.createRoot(container);
                root.render(toastWrapper);
                // revert suppression, not to influence users app
                if (_ReactDOMInternals) {
                    _ReactDOMInternals.usingClientEntryPoint = false;
                }
            }
            else {
                // v17 and before
                ReactDOM.render(toastWrapper, container);
            }
        };
    }
    /**
     * Set global Toaster settings for toasts order and placement.
     * Settings will be applied to new toasts on the page.
     */
    setSettings(newSettings) {
        var _a, _b, _c;
        (_a = newSettings.placement) !== null && _a !== void 0 ? _a : (newSettings.placement = this.settings.placement);
        (_b = newSettings.order) !== null && _b !== void 0 ? _b : (newSettings.order = ((_c = newSettings.placement) === null || _c === void 0 ? void 0 : _c.startsWith('bottom'))
            ? 'ascending'
            : 'descending');
        this.settings = newSettings;
        this.asyncInit().then(() => {
            var _a, _b;
            (_a = this.toastsRef.current) === null || _a === void 0 ? void 0 : _a.setPlacement((_b = this.settings.placement) !== null && _b !== void 0 ? _b : 'top');
        });
    }
    positive(content, options) {
        return this.createToast(content, 'positive', options);
    }
    informational(content, options) {
        return this.createToast(content, 'informational', options);
    }
    negative(content, options) {
        return this.createToast(content, 'negative', options);
    }
    warning(content, options) {
        return this.createToast(content, 'warning', options);
    }
    createToast(content, category, options) {
        ++this.lastId;
        const currentId = this.lastId;
        this.toasts = [
            ...(this.settings.order === 'ascending' ? this.toasts : []),
            {
                ...options,
                content,
                category,
                onRemove: () => {
                    var _a;
                    this.removeToast(currentId);
                    (_a = options === null || options === void 0 ? void 0 : options.onRemove) === null || _a === void 0 ? void 0 : _a.call(options);
                },
                id: currentId,
                isVisible: true,
            },
            ...(this.settings.order === 'descending' ? this.toasts : []),
        ];
        this.updateView();
        return { close: () => this.closeToast(currentId) };
    }
    removeToast(id) {
        this.toasts = this.toasts.filter((toast) => toast.id !== id);
        this.updateView();
    }
    updateView() {
        this.asyncInit().then(() => {
            var _a;
            (_a = this.toastsRef.current) === null || _a === void 0 ? void 0 : _a.setToasts(this.toasts);
        });
    }
    closeToast(toastId) {
        this.toasts = this.toasts.map((toast) => {
            return {
                ...toast,
                isVisible: toast.id !== toastId,
            };
        });
        this.updateView();
    }
    closeAll() {
        this.toasts = this.toasts.map((toast) => {
            return {
                ...toast,
                isVisible: false,
            };
        });
        this.updateView();
    }
}

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const toaster = new Toaster();
const toaster$1 = toaster;

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * A switch for turning on and off.
 * @example
 * <caption>Basic toggle</caption>
 * <ToggleSwitch onChange={(e) => console.log(e.target.checked)} defaultChecked />
 * @example
 * <caption>Disabled toggle</caption>
 * <ToggleSwitch disabled />
 * @example
 * <caption>Right labeled toggle</caption>
 * <ToggleSwitch defaultChecked label='Right labeled' />
 * @example
 * <caption>Left labeled toggle</caption>
 * <ToggleSwitch defaultChecked label='Left labeled' labelPosition='left' />
 * @example
 * <caption>Toggle with icon</caption>
 * <ToggleSwitch label='With icon toggle' icon={<svg viewBox='0 0 16 16'><path d='M1 1v14h14V1H1zm13 1.7v10.6L8.7 8 14 2.7zM8 7.3L2.7 2h10.6L8 7.3zm-.7.7L2 13.3V2.7L7.3 8zm.7.7l5.3 5.3H2.7L8 8.7z' /></svg>} />
 */
const ToggleSwitch = React__default.forwardRef((props, ref) => {
    const { disabled = false, labelPosition = 'right', icon, label, setFocus = false, className, style, ...rest } = props;
    useTheme();
    const inputElementRef = React__default.useRef(null);
    const refs = useMergedRefs(inputElementRef, ref);
    const WrapperComponent = label ? 'label' : 'div';
    React__default.useEffect(() => {
        if (inputElementRef.current && setFocus) {
            inputElementRef.current.focus();
        }
    }, [setFocus]);
    return (React__default.createElement(WrapperComponent, { className: cx('iui-toggle-switch-wrapper', {
            'iui-disabled': disabled,
            'iui-label-on-right': label && labelPosition === 'right',
            'iui-label-on-left': label && labelPosition === 'left',
        }, className), style: style },
        React__default.createElement("input", { className: 'iui-toggle-switch', type: 'checkbox', role: 'switch', disabled: disabled, ref: refs, ...rest }),
        icon &&
            React__default.cloneElement(icon, {
                className: cx('iui-toggle-switch-icon', icon.props.className),
                'aria-hidden': true,
            }),
        label && React__default.createElement("span", { className: 'iui-toggle-switch-label' }, label)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const TreeContext = React__default.createContext(undefined);
const useTreeContext = () => {
    const context = React__default.useContext(TreeContext);
    if (context == undefined) {
        throw new Error('TreeContext must be used within a TreeContext.Provider');
    }
    return context;
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * Tree component used to display a hierarchical structure of `TreeNodes`.
 * User should control state of expanded, selected and disabled nodes using `getNode` prop.
 * @example
  type DemoData = {
    id: string;
    label: string;
    subItems: DemoData[];
  };

  const data: Array<DemoData> = [
    {
      id: 'Node-1',
      label: 'Facility 1',
      subItems: [{ id: 'Node-1-1', label: 'Unit 1', subItems: [] }],
    },
    {
      id: 'Node-2',
      label: 'Facility 2',
      subItems: [{ id: 'Node-2-1', label: 'Unit 2', subItems: [] }],
    },
  ];

  const [expandedNodes, setExpandedNodes] = React.useState<Record<string, boolean>>({});
  const onNodeExpanded = React.useCallback((nodeId: string, isExpanded: boolean) => {
    setExpandedNodes((oldExpanded) => ({ ...oldExpanded, [nodeId]: isExpanded }));
  }, []);

  const getNode = React.useCallback((node: DemoData): NodeData<DemoData> => {
    return {
      subNodes: node.subItems,
      nodeId: node.id,
      node,
      isExpanded: expandedNodes[node.id],
      hasSubNodes: node.subItems.length > 0,
    };
  }, [expandedNodes]);

  <Tree<DemoData>
    data={data}
    getNode={getNode}
    nodeRenderer={React.useCallback(({ node, ...rest }) => (
      <TreeNode
        label={node.label}
        onNodeExpanded={onNodeExpanded}
        {...rest}
      />
    ), [onNodeExpanded])}
  />
 */
const Tree = (props) => {
    const { data, className, nodeRenderer, getNode, enableVirtualization = false, style, ...rest } = props;
    useTheme();
    const treeRef = React__default.useRef(null);
    const focusedIndex = React__default.useRef(0);
    React__default.useEffect(() => {
        focusedIndex.current = 0;
    }, [data]);
    const getFocusableNodes = React__default.useCallback(() => {
        const focusableItems = getFocusableElements(treeRef.current);
        // Filter out focusable elements that are inside each node, e.g. checkbox
        return focusableItems.filter((i) => !focusableItems.some((p) => p.contains(i.parentElement)));
    }, []);
    const handleKeyDown = (event) => {
        const items = getFocusableNodes();
        if (!(items === null || items === void 0 ? void 0 : items.length)) {
            return;
        }
        const activeIndex = items.findIndex((el) => { var _a; return el.contains((_a = treeRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.activeElement); });
        const currentIndex = activeIndex > -1 ? activeIndex : 0;
        switch (event.key) {
            case 'ArrowUp': {
                event.preventDefault();
                const newIndex = Math.max(0, currentIndex - 1);
                items[newIndex].focus();
                focusedIndex.current = newIndex;
                break;
            }
            case 'ArrowDown': {
                event.preventDefault();
                const newIndex = Math.min(items.length - 1, currentIndex + 1);
                items[newIndex].focus();
                focusedIndex.current = newIndex;
                break;
            }
        }
    };
    const [flatNodesList, firstLevelNodesList] = React__default.useMemo(() => {
        const flatList = [];
        const firstLevelNodes = [];
        const flattenNodes = (nodes = [], depth = 0, parentNode) => {
            const nodeIdList = Array();
            nodes.forEach((element, index) => {
                const { subNodes, ...nodeProps } = getNode(element);
                const flatNode = {
                    nodeProps,
                    depth,
                    parentNode,
                    indexInGroup: index,
                };
                nodeIdList.push(flatNode.nodeProps.nodeId);
                flatList.push(flatNode);
                if (depth === 0) {
                    firstLevelNodes.push(flatNode);
                }
                if (flatNode.nodeProps.isExpanded) {
                    const subNodeIds = flattenNodes(subNodes, depth + 1, flatNode);
                    flatNode.subNodeIds = subNodeIds;
                }
            });
            return nodeIdList;
        };
        flattenNodes(data);
        return [flatList, firstLevelNodes];
    }, [data, getNode]);
    const itemRenderer = React__default.useCallback((index) => {
        var _a, _b, _c, _d;
        const node = flatNodesList[index];
        return (React__default.createElement(TreeContext.Provider, { key: node.nodeProps.nodeId, value: {
                nodeDepth: node.depth,
                subNodeIds: node.subNodeIds,
                groupSize: node.depth === 0
                    ? firstLevelNodesList.length
                    : (_c = (_b = (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.subNodeIds) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0,
                indexInGroup: node.indexInGroup,
                parentNodeId: (_d = node.parentNode) === null || _d === void 0 ? void 0 : _d.nodeProps.nodeId,
                scrollToParent: node.parentNode
                    ? () => {
                        var _a;
                        const parentNodeId = (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.nodeProps.nodeId;
                        const parentNodeIndex = flatNodesList.findIndex((n) => n.nodeProps.nodeId === parentNodeId);
                        setScrollToIndex(parentNodeIndex);
                    }
                    : undefined,
            } }, nodeRenderer(node.nodeProps)));
    }, [firstLevelNodesList.length, flatNodesList, nodeRenderer]);
    const [scrollToIndex, setScrollToIndex] = React__default.useState();
    const flatNodesListRef = React__default.useRef(flatNodesList);
    React__default.useEffect(() => {
        flatNodesListRef.current = flatNodesList;
    }, [flatNodesList]);
    React__default.useEffect(() => {
        setTimeout(() => {
            var _a;
            if (scrollToIndex !== undefined) {
                const nodeId = flatNodesListRef.current[scrollToIndex].nodeProps.nodeId;
                const nodeElement = (_a = treeRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.querySelector(`#${nodeId}`);
                nodeElement === null || nodeElement === void 0 ? void 0 : nodeElement.focus();
                // Need to reset that if navigating with mouse and keyboard,
                // e.g. pressing arrow left to go to parent node and then with mouse
                // clicking some other child node and then pressing arrow left
                setScrollToIndex(undefined);
            }
        });
    }, [scrollToIndex]);
    const handleFocus = (event) => {
        var _a, _b;
        if ((_a = treeRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget)) {
            return;
        }
        const items = getFocusableNodes();
        if (items.length > 0) {
            (_b = items[focusedIndex.current]) === null || _b === void 0 ? void 0 : _b.focus();
        }
    };
    return (React__default.createElement(React__default.Fragment, null, enableVirtualization ? (React__default.createElement(VirtualizedTree, { flatNodesList: flatNodesList, itemRenderer: itemRenderer, scrollToIndex: scrollToIndex, onFocus: handleFocus, onKeyDown: handleKeyDown, ref: treeRef, className: className, style: style, ...rest })) : (React__default.createElement(TreeElement, { onKeyDown: handleKeyDown, onFocus: handleFocus, className: className, style: style, ref: treeRef, ...rest }, flatNodesList.map((_, i) => itemRenderer(i))))));
};
const TreeElement = React__default.forwardRef(({ children, className, ...rest }, ref) => {
    return (React__default.createElement("ul", { className: cx('iui-tree', className), role: 'tree', ref: ref, tabIndex: 0, ...rest }, children));
});
// Having virtualized tree separately prevents from running all virtualization logic
const VirtualizedTree = React__default.forwardRef(({ flatNodesList, itemRenderer, scrollToIndex, className, style, ...rest }, ref) => {
    const { outerProps, innerProps, visibleChildren } = useVirtualization({
        itemsLength: flatNodesList.length,
        itemRenderer: itemRenderer,
        scrollToIndex,
    });
    return (React__default.createElement("div", { ...{
            ...outerProps,
            className: cx(className, outerProps.className),
            style: { ...style, ...outerProps.style },
        } },
        React__default.createElement(TreeElement, { ...innerProps, ...rest, ref: mergeRefs(ref, innerProps.ref) }, visibleChildren)));
});

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const TreeNodeExpander = (props) => {
    const { isExpanded, ...rest } = props;
    return (React__default.createElement(IconButton, { styleType: 'borderless', size: 'small', "aria-label": isExpanded ? 'Collapse' : 'Expand', ...rest },
        React__default.createElement(SvgChevronRight, { className: cx('iui-tree-node-content-expander-icon', {
                'iui-tree-node-content-expander-icon-expanded': isExpanded,
            }) })));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
/**
 * `TreeNode` component to display node content within a `Tree`.
 * Must be used inside `Tree` component to correctly set node `depth` and `subNodes`.
 * @example
  <TreeNode
    nodeId={props.nodeId}
    label={props.node.label}
    sublabel={props.node.sublabel}
    onExpanded={onExpanded}
    onSelected={onSelectedNodeChange}
    isDisabled={props.isDisabled}
    isExpanded={props.isExpanded}
    isSelected={props.isSelected}
    checkbox={
      <Checkbox variant='eyeball' disabled={props.isDisabled} />
    }
    icon={<SvgPlaceholder />}
  />
 */
const TreeNode = (props) => {
    const { nodeId, label, sublabel, children, className, icon, hasSubNodes = false, isDisabled = false, isExpanded = false, isSelected = false, onSelected, onExpanded, checkbox, expander, ...rest } = props;
    useTheme();
    const { nodeDepth, subNodeIds = [], parentNodeId, scrollToParent, groupSize, indexInGroup, } = useTreeContext();
    const [isFocused, setIsFocused] = React__default.useState(false);
    const nodeRef = React__default.useRef(null);
    const onKeyDown = (event) => {
        var _a, _b, _c, _d, _e, _f;
        const isNodeFocused = nodeRef.current === ((_a = nodeRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.activeElement);
        switch (event.key) {
            case 'ArrowLeft': {
                event.preventDefault();
                if (isNodeFocused) {
                    if (isExpanded) {
                        onExpanded(nodeId, false);
                        break;
                    }
                    if (parentNodeId) {
                        scrollToParent === null || scrollToParent === void 0 ? void 0 : scrollToParent();
                        break;
                    }
                    // If it is top level node (doesn't have parent node), then do nothing.
                    break;
                }
                const focusableElements = getFocusableElements(nodeRef.current);
                const currentIndex = focusableElements.indexOf((_b = nodeRef.current) === null || _b === void 0 ? void 0 : _b.ownerDocument.activeElement);
                if (currentIndex === 0) {
                    (_c = nodeRef.current) === null || _c === void 0 ? void 0 : _c.focus();
                }
                else {
                    (_d = focusableElements[currentIndex - 1]) === null || _d === void 0 ? void 0 : _d.focus();
                }
                break;
            }
            case 'ArrowRight': {
                event.preventDefault();
                const focusableElements = getFocusableElements(nodeRef.current);
                if (isNodeFocused) {
                    if (!isExpanded && hasSubNodes) {
                        onExpanded(nodeId, true);
                        break;
                    }
                    (_e = focusableElements[0]) === null || _e === void 0 ? void 0 : _e.focus();
                    break;
                }
                const currentIndex = focusableElements.indexOf((_f = nodeRef.current) === null || _f === void 0 ? void 0 : _f.ownerDocument.activeElement);
                if (currentIndex < focusableElements.length - 1) {
                    focusableElements[currentIndex + 1].focus();
                    break;
                }
                break;
            }
            case ' ':
            case 'Spacebar':
            case 'Enter': {
                // Ignore if it is called on the element inside, e.g. checkbox or expander
                if (event.target !== nodeRef.current) {
                    break;
                }
                event.preventDefault();
                if (!isDisabled) {
                    onSelected === null || onSelected === void 0 ? void 0 : onSelected(nodeId, !isSelected);
                }
                break;
            }
        }
    };
    const onExpanderClick = React__default.useCallback((event) => {
        onExpanded(nodeId, !isExpanded);
        event.stopPropagation();
    }, [isExpanded, nodeId, onExpanded]);
    return (React__default.createElement("li", { role: 'treeitem', className: cx('iui-tree-item', className), id: nodeId, "aria-expanded": hasSubNodes ? isExpanded : undefined, "aria-disabled": isDisabled, "aria-selected": isSelected, "aria-level": nodeDepth + 1, "aria-setsize": groupSize, "aria-posinset": indexInGroup + 1, tabIndex: -1, onFocus: (e) => {
            setIsFocused(true);
            // Prevents from triggering onFocus on parent Tree
            e.stopPropagation();
        }, onBlur: () => {
            setIsFocused(false);
        }, ref: nodeRef, onKeyDown: onKeyDown, ...rest },
        React__default.createElement("div", { className: cx('iui-tree-node', {
                'iui-active': isSelected,
                'iui-disabled': isDisabled,
            }), style: { '--level': nodeDepth }, onClick: () => !isDisabled && (onSelected === null || onSelected === void 0 ? void 0 : onSelected(nodeId, !isSelected)) },
            checkbox && React__default.isValidElement(checkbox)
                ? React__default.cloneElement(checkbox, {
                    className: cx('iui-tree-node-checkbox', checkbox.props.className),
                    tabIndex: isFocused ? 0 : -1,
                })
                : checkbox,
            React__default.createElement("div", { className: 'iui-tree-node-content' },
                hasSubNodes && expander,
                hasSubNodes && !expander && (React__default.createElement(TreeNodeExpander, { isExpanded: isExpanded, disabled: isDisabled, onClick: onExpanderClick, tabIndex: isFocused ? 0 : -1 })),
                icon &&
                    React__default.cloneElement(icon, {
                        className: cx('iui-tree-node-content-icon', icon.props.className),
                    }),
                React__default.createElement("span", { className: 'iui-tree-node-content-label' },
                    React__default.createElement("div", { className: 'iui-tree-node-content-title' }, label),
                    sublabel && (React__default.createElement("div", { className: 'iui-tree-node-content-caption' }, sublabel))),
                children)),
        hasSubNodes && (React__default.createElement("ul", { className: 'iui-sub-tree', role: 'group', "aria-owns": subNodeIds.join(',') }))));
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const StepperStep = (props) => {
    const { title, index, currentStepNumber, totalSteps, type, onClick, description, className, style, ...rest } = props;
    const isPast = currentStepNumber > index;
    const isActive = currentStepNumber === index;
    const isClickable = isPast && !!onClick;
    const onCompletedClick = () => {
        if (isClickable) {
            onClick === null || onClick === void 0 ? void 0 : onClick(index);
        }
    };
    const onKeyDown = (e) => {
        if (!isClickable) {
            return;
        }
        if (e.key === 'Enter' || e.key === 'Space' || e.key === ' ') {
            onCompletedClick();
        }
    };
    const stepShape = (React__default.createElement("li", { className: cx('iui-stepper-step', {
            'iui-current': isActive,
            'iui-clickable': isClickable,
        }, className), style: {
            width: type === 'default' ? `${100 / totalSteps}%` : undefined,
            ...style,
        }, onClick: onCompletedClick, onKeyDown: onKeyDown, "aria-current": isActive ? 'step' : undefined, tabIndex: isClickable ? 0 : undefined, ...rest },
        React__default.createElement("div", { className: 'iui-stepper-track-content' },
            React__default.createElement("span", { className: 'iui-stepper-circle' }, index + 1)),
        type === 'default' && (React__default.createElement("span", { className: 'iui-stepper-step-name' }, title))));
    return description ? (React__default.createElement(Tooltip, { content: description }, stepShape)) : (stepShape);
};

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
const defaultStepperLocalization = {
    stepsCountLabel: (currentStep, totalSteps) => `Step ${currentStep} of ${totalSteps}:`,
};
const Stepper = React__default.forwardRef((props, ref) => {
    const { currentStep, steps, type = 'default', localization = defaultStepperLocalization, onStepClick, ...rest } = props;
    const boundedCurrentStep = Math.min(Math.max(0, currentStep !== null && currentStep !== void 0 ? currentStep : 0), steps.length - 1);
    useTheme();
    return (React__default.createElement("div", { className: 'iui-stepper', ref: ref, ...rest },
        React__default.createElement("ol", null, steps.map((s, index) => (React__default.createElement(StepperStep, { key: index, index: index, title: type === 'long' ? '' : s.name, currentStepNumber: boundedCurrentStep, totalSteps: steps.length, type: type, onClick: onStepClick, description: s.description })))),
        type === 'long' && (React__default.createElement("div", { className: 'iui-stepper-steps-label' },
            React__default.createElement("span", { className: 'iui-stepper-steps-label-count' }, localization.stepsCountLabel(boundedCurrentStep + 1, steps.length)),
            steps[boundedCurrentStep].name))));
});

const _arrow_function$X = () => {
  return /* @__PURE__ */ jsx(Alert, {
    onClose: () => console.log("CLOSED"),
    clickableText: "Learn more",
    clickableTextProps: {
      onClick: () => console.log("Clicked more info!")
    },
    style: {
      minWidth: 350
    },
    children: "This is an alert"
  });
};
__astro_tag_component__(_arrow_function$X, "@astrojs/react");

const _arrow_function$W = () => {
  return /* @__PURE__ */ jsxs(UserIconGroup, {
    animated: true,
    iconSize: "medium",
    children: [/* @__PURE__ */ jsx(UserIcon, {
      abbreviation: "TR",
      backgroundColor: "#6AB9EC",
      title: "Terry Rivers"
    }), /* @__PURE__ */ jsx(UserIcon, {
      abbreviation: "RM",
      backgroundColor: "#C8C2B4",
      title: "Robin Mercer"
    }), /* @__PURE__ */ jsx(UserIcon, {
      abbreviation: "MV",
      backgroundColor: "#73C7C1",
      title: "Morgan Vera"
    }), /* @__PURE__ */ jsx(UserIcon, {
      abbreviation: "JM",
      backgroundColor: "#A3779F",
      title: "Jean Mullins"
    }), /* @__PURE__ */ jsx(UserIcon, {
      abbreviation: "AM",
      backgroundColor: "#73C7C1",
      title: "Ashley Miles"
    })]
  });
};
__astro_tag_component__(_arrow_function$W, "@astrojs/react");

const _arrow_function$V = () => {
  return /* @__PURE__ */ jsx(Anchor, {
    children: "This is anchor."
  });
};
__astro_tag_component__(_arrow_function$V, "@astrojs/react");

const _arrow_function$U = () => {
  return /* @__PURE__ */ jsx(Badge, {
    backgroundColor: "skyblue",
    children: "Badge"
  });
};
__astro_tag_component__(_arrow_function$U, "@astrojs/react");

const _arrow_function$T = () => {
  return /* @__PURE__ */ jsx("div", {
    style: {
      width: "80%"
    },
    children: /* @__PURE__ */ jsx(Blockquote, {
      cite: "https://www.bentley.com/en",
      footer: /* @__PURE__ */ jsxs(Fragment$1, {
        children: ["\u2014 Greg Bentley, ", /* @__PURE__ */ jsx("cite", {
          children: "NasdaqListed"
        })]
      }),
      children: /* @__PURE__ */ jsx("p", {
        children: "For 36 years we have served engineers with our software, passionately 35 believing that better performing and more resilient infrastructure is 36 essential to improve the quality of life for people everywhere, sustain 37 our environment, and grow our economies."
      })
    })
  });
};
__astro_tag_component__(_arrow_function$T, "@astrojs/react");

const _arrow_function$S = () => {
  return /* @__PURE__ */ jsxs("div", {
    children: [/* @__PURE__ */ jsxs("div", {
      style: {
        display: "flex",
        gap: "24px",
        flexWrap: "wrap",
        margin: "12px"
      },
      children: [/* @__PURE__ */ jsx(Button, {
        size: "small",
        children: "Default"
      }), /* @__PURE__ */ jsx(Button, {
        size: "small",
        styleType: "cta",
        children: "Call-to-action"
      }), /* @__PURE__ */ jsx(Button, {
        size: "small",
        styleType: "high-visibility",
        children: "High Visibility"
      }), /* @__PURE__ */ jsx(Button, {
        size: "small",
        styleType: "borderless",
        children: "Borderless"
      })]
    }), /* @__PURE__ */ jsxs("div", {
      style: {
        display: "flex",
        gap: "24px",
        flexWrap: "wrap",
        margin: "12px"
      },
      children: [/* @__PURE__ */ jsx(Button, {
        children: "Default"
      }), /* @__PURE__ */ jsx(Button, {
        styleType: "cta",
        children: "Call-to-action"
      }), /* @__PURE__ */ jsx(Button, {
        styleType: "high-visibility",
        children: "High Visibility"
      }), /* @__PURE__ */ jsx(Button, {
        styleType: "borderless",
        children: "Borderless"
      })]
    }), /* @__PURE__ */ jsxs("div", {
      style: {
        display: "flex",
        gap: "24px",
        flexWrap: "wrap",
        margin: "12px"
      },
      children: [/* @__PURE__ */ jsx(Button, {
        size: "large",
        children: "Default"
      }), /* @__PURE__ */ jsx(Button, {
        size: "large",
        styleType: "cta",
        children: "Call-to-action"
      }), /* @__PURE__ */ jsx(Button, {
        size: "large",
        styleType: "high-visibility",
        children: "High Visibility"
      }), /* @__PURE__ */ jsx(Button, {
        size: "large",
        styleType: "borderless",
        children: "Borderless"
      })]
    })]
  });
};
__astro_tag_component__(_arrow_function$S, "@astrojs/react");

var __assign$5P = (globalThis && globalThis.__assign) || function () {
    __assign$5P = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5P.apply(this, arguments);
};

var __assign$5O = (globalThis && globalThis.__assign) || function () {
    __assign$5O = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5O.apply(this, arguments);
};

var __assign$5N = (globalThis && globalThis.__assign) || function () {
    __assign$5N = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5N.apply(this, arguments);
};

var __assign$5M = (globalThis && globalThis.__assign) || function () {
    __assign$5M = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5M.apply(this, arguments);
};

var __assign$5L = (globalThis && globalThis.__assign) || function () {
    __assign$5L = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5L.apply(this, arguments);
};
function SvgAdd(props) {
    return (React.createElement("svg", __assign$5L({ xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 16 16' }, props),
        React.createElement("path", { d: 'M7,1v6H1v2h6v6h2V9h6V7H9V1H7z' })));
}

var __assign$5K = (globalThis && globalThis.__assign) || function () {
    __assign$5K = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5K.apply(this, arguments);
};

var __assign$5J = (globalThis && globalThis.__assign) || function () {
    __assign$5J = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5J.apply(this, arguments);
};

var __assign$5I = (globalThis && globalThis.__assign) || function () {
    __assign$5I = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5I.apply(this, arguments);
};

var __assign$5H = (globalThis && globalThis.__assign) || function () {
    __assign$5H = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5H.apply(this, arguments);
};

var __assign$5G = (globalThis && globalThis.__assign) || function () {
    __assign$5G = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5G.apply(this, arguments);
};

var __assign$5F = (globalThis && globalThis.__assign) || function () {
    __assign$5F = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5F.apply(this, arguments);
};

var __assign$5E = (globalThis && globalThis.__assign) || function () {
    __assign$5E = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5E.apply(this, arguments);
};

var __assign$5D = (globalThis && globalThis.__assign) || function () {
    __assign$5D = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5D.apply(this, arguments);
};

var __assign$5C = (globalThis && globalThis.__assign) || function () {
    __assign$5C = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5C.apply(this, arguments);
};

var __assign$5B = (globalThis && globalThis.__assign) || function () {
    __assign$5B = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5B.apply(this, arguments);
};

var __assign$5A = (globalThis && globalThis.__assign) || function () {
    __assign$5A = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5A.apply(this, arguments);
};

var __assign$5z = (globalThis && globalThis.__assign) || function () {
    __assign$5z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5z.apply(this, arguments);
};

var __assign$5y = (globalThis && globalThis.__assign) || function () {
    __assign$5y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5y.apply(this, arguments);
};

var __assign$5x = (globalThis && globalThis.__assign) || function () {
    __assign$5x = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5x.apply(this, arguments);
};

var __assign$5w = (globalThis && globalThis.__assign) || function () {
    __assign$5w = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5w.apply(this, arguments);
};

var __assign$5v = (globalThis && globalThis.__assign) || function () {
    __assign$5v = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5v.apply(this, arguments);
};

var __assign$5u = (globalThis && globalThis.__assign) || function () {
    __assign$5u = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5u.apply(this, arguments);
};

var __assign$5t = (globalThis && globalThis.__assign) || function () {
    __assign$5t = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5t.apply(this, arguments);
};

var __assign$5s = (globalThis && globalThis.__assign) || function () {
    __assign$5s = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5s.apply(this, arguments);
};

var __assign$5r = (globalThis && globalThis.__assign) || function () {
    __assign$5r = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5r.apply(this, arguments);
};

var __assign$5q = (globalThis && globalThis.__assign) || function () {
    __assign$5q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5q.apply(this, arguments);
};

var __assign$5p = (globalThis && globalThis.__assign) || function () {
    __assign$5p = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5p.apply(this, arguments);
};

var __assign$5o = (globalThis && globalThis.__assign) || function () {
    __assign$5o = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5o.apply(this, arguments);
};

var __assign$5n = (globalThis && globalThis.__assign) || function () {
    __assign$5n = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5n.apply(this, arguments);
};

var __assign$5m = (globalThis && globalThis.__assign) || function () {
    __assign$5m = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5m.apply(this, arguments);
};

var __assign$5l = (globalThis && globalThis.__assign) || function () {
    __assign$5l = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5l.apply(this, arguments);
};

var __assign$5k = (globalThis && globalThis.__assign) || function () {
    __assign$5k = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5k.apply(this, arguments);
};

var __assign$5j = (globalThis && globalThis.__assign) || function () {
    __assign$5j = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5j.apply(this, arguments);
};

var __assign$5i = (globalThis && globalThis.__assign) || function () {
    __assign$5i = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5i.apply(this, arguments);
};

var __assign$5h = (globalThis && globalThis.__assign) || function () {
    __assign$5h = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5h.apply(this, arguments);
};

var __assign$5g = (globalThis && globalThis.__assign) || function () {
    __assign$5g = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5g.apply(this, arguments);
};

var __assign$5f = (globalThis && globalThis.__assign) || function () {
    __assign$5f = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5f.apply(this, arguments);
};

var __assign$5e = (globalThis && globalThis.__assign) || function () {
    __assign$5e = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5e.apply(this, arguments);
};

var __assign$5d = (globalThis && globalThis.__assign) || function () {
    __assign$5d = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5d.apply(this, arguments);
};

var __assign$5c = (globalThis && globalThis.__assign) || function () {
    __assign$5c = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5c.apply(this, arguments);
};

var __assign$5b = (globalThis && globalThis.__assign) || function () {
    __assign$5b = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5b.apply(this, arguments);
};

var __assign$5a = (globalThis && globalThis.__assign) || function () {
    __assign$5a = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5a.apply(this, arguments);
};

var __assign$59 = (globalThis && globalThis.__assign) || function () {
    __assign$59 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$59.apply(this, arguments);
};

var __assign$58 = (globalThis && globalThis.__assign) || function () {
    __assign$58 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$58.apply(this, arguments);
};

var __assign$57 = (globalThis && globalThis.__assign) || function () {
    __assign$57 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$57.apply(this, arguments);
};
function SvgCheckmark(props) {
    return (React.createElement("svg", __assign$57({ xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 16 16' }, props),
        React.createElement("path", { d: 'M6,14L0,8l2-2l4,4l8-8l2,2L6,14z' })));
}

var __assign$56 = (globalThis && globalThis.__assign) || function () {
    __assign$56 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$56.apply(this, arguments);
};

var __assign$55 = (globalThis && globalThis.__assign) || function () {
    __assign$55 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$55.apply(this, arguments);
};

var __assign$54 = (globalThis && globalThis.__assign) || function () {
    __assign$54 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$54.apply(this, arguments);
};

var __assign$53 = (globalThis && globalThis.__assign) || function () {
    __assign$53 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$53.apply(this, arguments);
};

var __assign$52 = (globalThis && globalThis.__assign) || function () {
    __assign$52 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$52.apply(this, arguments);
};

var __assign$51 = (globalThis && globalThis.__assign) || function () {
    __assign$51 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$51.apply(this, arguments);
};

var __assign$50 = (globalThis && globalThis.__assign) || function () {
    __assign$50 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$50.apply(this, arguments);
};

var __assign$4$ = (globalThis && globalThis.__assign) || function () {
    __assign$4$ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4$.apply(this, arguments);
};

var __assign$4_ = (globalThis && globalThis.__assign) || function () {
    __assign$4_ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4_.apply(this, arguments);
};

var __assign$4Z = (globalThis && globalThis.__assign) || function () {
    __assign$4Z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4Z.apply(this, arguments);
};

var __assign$4Y = (globalThis && globalThis.__assign) || function () {
    __assign$4Y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4Y.apply(this, arguments);
};

var __assign$4X = (globalThis && globalThis.__assign) || function () {
    __assign$4X = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4X.apply(this, arguments);
};

var __assign$4W = (globalThis && globalThis.__assign) || function () {
    __assign$4W = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4W.apply(this, arguments);
};

var __assign$4V = (globalThis && globalThis.__assign) || function () {
    __assign$4V = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4V.apply(this, arguments);
};

var __assign$4U = (globalThis && globalThis.__assign) || function () {
    __assign$4U = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4U.apply(this, arguments);
};

var __assign$4T = (globalThis && globalThis.__assign) || function () {
    __assign$4T = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4T.apply(this, arguments);
};

var __assign$4S = (globalThis && globalThis.__assign) || function () {
    __assign$4S = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4S.apply(this, arguments);
};

var __assign$4R = (globalThis && globalThis.__assign) || function () {
    __assign$4R = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4R.apply(this, arguments);
};

var __assign$4Q = (globalThis && globalThis.__assign) || function () {
    __assign$4Q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4Q.apply(this, arguments);
};

var __assign$4P = (globalThis && globalThis.__assign) || function () {
    __assign$4P = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4P.apply(this, arguments);
};

var __assign$4O = (globalThis && globalThis.__assign) || function () {
    __assign$4O = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4O.apply(this, arguments);
};

var __assign$4N = (globalThis && globalThis.__assign) || function () {
    __assign$4N = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4N.apply(this, arguments);
};

var __assign$4M = (globalThis && globalThis.__assign) || function () {
    __assign$4M = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4M.apply(this, arguments);
};

var __assign$4L = (globalThis && globalThis.__assign) || function () {
    __assign$4L = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4L.apply(this, arguments);
};

var __assign$4K = (globalThis && globalThis.__assign) || function () {
    __assign$4K = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4K.apply(this, arguments);
};

var __assign$4J = (globalThis && globalThis.__assign) || function () {
    __assign$4J = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4J.apply(this, arguments);
};

var __assign$4I = (globalThis && globalThis.__assign) || function () {
    __assign$4I = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4I.apply(this, arguments);
};

var __assign$4H = (globalThis && globalThis.__assign) || function () {
    __assign$4H = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4H.apply(this, arguments);
};
function SvgDelete(props) {
    return (React.createElement("svg", __assign$4H({ xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 16 16' }, props),
        React.createElement("path", { d: 'M14,1V2H2V1H5L6,0h4l1,1ZM3,3H13V15a1,1,0,0,1-1,1H4a1,1,0,0,1-1-1ZM9,14h1V5H9ZM6,14H7V5H6Z' })));
}

var __assign$4G = (globalThis && globalThis.__assign) || function () {
    __assign$4G = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4G.apply(this, arguments);
};

var __assign$4F = (globalThis && globalThis.__assign) || function () {
    __assign$4F = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4F.apply(this, arguments);
};

var __assign$4E = (globalThis && globalThis.__assign) || function () {
    __assign$4E = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4E.apply(this, arguments);
};

var __assign$4D = (globalThis && globalThis.__assign) || function () {
    __assign$4D = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4D.apply(this, arguments);
};

var __assign$4C = (globalThis && globalThis.__assign) || function () {
    __assign$4C = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4C.apply(this, arguments);
};

var __assign$4B = (globalThis && globalThis.__assign) || function () {
    __assign$4B = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4B.apply(this, arguments);
};

var __assign$4A = (globalThis && globalThis.__assign) || function () {
    __assign$4A = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4A.apply(this, arguments);
};

var __assign$4z = (globalThis && globalThis.__assign) || function () {
    __assign$4z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4z.apply(this, arguments);
};

var __assign$4y = (globalThis && globalThis.__assign) || function () {
    __assign$4y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4y.apply(this, arguments);
};

var __assign$4x = (globalThis && globalThis.__assign) || function () {
    __assign$4x = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4x.apply(this, arguments);
};

var __assign$4w = (globalThis && globalThis.__assign) || function () {
    __assign$4w = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4w.apply(this, arguments);
};

var __assign$4v = (globalThis && globalThis.__assign) || function () {
    __assign$4v = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4v.apply(this, arguments);
};

var __assign$4u = (globalThis && globalThis.__assign) || function () {
    __assign$4u = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4u.apply(this, arguments);
};

var __assign$4t = (globalThis && globalThis.__assign) || function () {
    __assign$4t = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4t.apply(this, arguments);
};

var __assign$4s = (globalThis && globalThis.__assign) || function () {
    __assign$4s = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4s.apply(this, arguments);
};

var __assign$4r = (globalThis && globalThis.__assign) || function () {
    __assign$4r = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4r.apply(this, arguments);
};

var __assign$4q = (globalThis && globalThis.__assign) || function () {
    __assign$4q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4q.apply(this, arguments);
};

var __assign$4p = (globalThis && globalThis.__assign) || function () {
    __assign$4p = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4p.apply(this, arguments);
};

var __assign$4o = (globalThis && globalThis.__assign) || function () {
    __assign$4o = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4o.apply(this, arguments);
};

var __assign$4n = (globalThis && globalThis.__assign) || function () {
    __assign$4n = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4n.apply(this, arguments);
};

var __assign$4m = (globalThis && globalThis.__assign) || function () {
    __assign$4m = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4m.apply(this, arguments);
};

var __assign$4l = (globalThis && globalThis.__assign) || function () {
    __assign$4l = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4l.apply(this, arguments);
};

var __assign$4k = (globalThis && globalThis.__assign) || function () {
    __assign$4k = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4k.apply(this, arguments);
};

var __assign$4j = (globalThis && globalThis.__assign) || function () {
    __assign$4j = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4j.apply(this, arguments);
};
function SvgEdit(props) {
    return (React.createElement("svg", __assign$4j({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm8.8 2.8 4.4 4.4-8.8 8.8h-4.4v-4.4zm-5 11.8 1-1-2.5-2.5-1 1v1.1h1.4v1.4zm5.6-9.8c0-.2-.1-.2-.2-.2s-.1 0-.2.1l-5.7 5.7s-.1.1-.1.2c0 .2.1.2.2.2s.1 0 .2-.1l5.7-5.7s.1-.1.1-.2m6.6-1c0 .4-.1.7-.4 1l-1.8 1.8-4.3-4.5 1.8-1.7c.3-.3.6-.4 1-.4s.7.1 1 .4l2.5 2.5c.1.2.2.6.2.9' })));
}

var __assign$4i = (globalThis && globalThis.__assign) || function () {
    __assign$4i = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4i.apply(this, arguments);
};

var __assign$4h = (globalThis && globalThis.__assign) || function () {
    __assign$4h = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4h.apply(this, arguments);
};

var __assign$4g = (globalThis && globalThis.__assign) || function () {
    __assign$4g = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4g.apply(this, arguments);
};

var __assign$4f = (globalThis && globalThis.__assign) || function () {
    __assign$4f = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4f.apply(this, arguments);
};

var __assign$4e = (globalThis && globalThis.__assign) || function () {
    __assign$4e = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4e.apply(this, arguments);
};

var __assign$4d = (globalThis && globalThis.__assign) || function () {
    __assign$4d = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4d.apply(this, arguments);
};

var __assign$4c = (globalThis && globalThis.__assign) || function () {
    __assign$4c = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4c.apply(this, arguments);
};

var __assign$4b = (globalThis && globalThis.__assign) || function () {
    __assign$4b = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4b.apply(this, arguments);
};

var __assign$4a = (globalThis && globalThis.__assign) || function () {
    __assign$4a = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4a.apply(this, arguments);
};

var __assign$49 = (globalThis && globalThis.__assign) || function () {
    __assign$49 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$49.apply(this, arguments);
};

var __assign$48 = (globalThis && globalThis.__assign) || function () {
    __assign$48 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$48.apply(this, arguments);
};

var __assign$47 = (globalThis && globalThis.__assign) || function () {
    __assign$47 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$47.apply(this, arguments);
};

var __assign$46 = (globalThis && globalThis.__assign) || function () {
    __assign$46 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$46.apply(this, arguments);
};

var __assign$45 = (globalThis && globalThis.__assign) || function () {
    __assign$45 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$45.apply(this, arguments);
};

var __assign$44 = (globalThis && globalThis.__assign) || function () {
    __assign$44 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$44.apply(this, arguments);
};

var __assign$43 = (globalThis && globalThis.__assign) || function () {
    __assign$43 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$43.apply(this, arguments);
};

var __assign$42 = (globalThis && globalThis.__assign) || function () {
    __assign$42 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$42.apply(this, arguments);
};

var __assign$41 = (globalThis && globalThis.__assign) || function () {
    __assign$41 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$41.apply(this, arguments);
};

var __assign$40 = (globalThis && globalThis.__assign) || function () {
    __assign$40 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$40.apply(this, arguments);
};
function SvgFlag(props) {
    return (React.createElement("svg", __assign$40({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm5.47177 15.97791a.61572.61572 0 0 1 -.75573-.46548l-3.19473-12.66735a.66021.66021 0 0 1 .43622-.80286.61512.61512 0 0 1 .75538.46451l3.1936 12.66734a.66185.66185 0 0 1 -.43474.80384zm7.15877-8.08915a6.69438 6.69438 0 0 1 -1.834.18225c-.60181-.00853-1.19671-.05041-1.79938-.05734a6.74319 6.74319 0 0 0 -1.83156.18393 3.595 3.595 0 0 0 -1.871 1.15633c-.22644-.89736-.41478-1.64593-.5916-2.34475-.17727-.6976-.33923-1.34568-.51555-2.04355-.1752-.6985-.36519-1.44579-.59074-2.34315a3.59907 3.59907 0 0 1 1.8709-1.15731 6.64454 6.64454 0 0 1 1.83365-.18038c.60094.00667 1.19584.04721 1.79791.05352a6.608 6.608 0 0 0 1.83283-.18131 3.60578 3.60578 0 0 0 1.87123-1.157c.2265.89763.41623 1.64493.59169 2.34342.17485.69858.33949 1.34693.51581 2.04391.17485.69973.36459 1.4465.58927 2.346a3.61642 3.61642 0 0 1 -1.86946 1.15543z', fillRule: 'evenodd' })));
}

var __assign$3$ = (globalThis && globalThis.__assign) || function () {
    __assign$3$ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3$.apply(this, arguments);
};

var __assign$3_ = (globalThis && globalThis.__assign) || function () {
    __assign$3_ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3_.apply(this, arguments);
};

var __assign$3Z = (globalThis && globalThis.__assign) || function () {
    __assign$3Z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3Z.apply(this, arguments);
};

var __assign$3Y = (globalThis && globalThis.__assign) || function () {
    __assign$3Y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3Y.apply(this, arguments);
};

var __assign$3X = (globalThis && globalThis.__assign) || function () {
    __assign$3X = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3X.apply(this, arguments);
};

var __assign$3W = (globalThis && globalThis.__assign) || function () {
    __assign$3W = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3W.apply(this, arguments);
};

var __assign$3V = (globalThis && globalThis.__assign) || function () {
    __assign$3V = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3V.apply(this, arguments);
};

var __assign$3U = (globalThis && globalThis.__assign) || function () {
    __assign$3U = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3U.apply(this, arguments);
};

var __assign$3T = (globalThis && globalThis.__assign) || function () {
    __assign$3T = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3T.apply(this, arguments);
};
function SvgFolderOpened(props) {
    return (React.createElement("svg", __assign$3T({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm3.07 7h12.19a.7.7 0 0 1 .68 1l-1.66 5a1.53 1.53 0 0 1 -1.35 1h-12.19a.7.7 0 0 1 -.68-1l1.66-5a1.53 1.53 0 0 1 1.35-1z' }),
        React.createElement("path", { d: 'm.77 7.68a2.54 2.54 0 0 1 2.3-1.68h10.93v-1a1 1 0 0 0 -1-1h-7v-1a1 1 0 0 0 -1-1h-4a1 1 0 0 0 -1 1v7z' })));
}

var __assign$3S = (globalThis && globalThis.__assign) || function () {
    __assign$3S = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3S.apply(this, arguments);
};

var __assign$3R = (globalThis && globalThis.__assign) || function () {
    __assign$3R = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3R.apply(this, arguments);
};

var __assign$3Q = (globalThis && globalThis.__assign) || function () {
    __assign$3Q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3Q.apply(this, arguments);
};

var __assign$3P = (globalThis && globalThis.__assign) || function () {
    __assign$3P = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3P.apply(this, arguments);
};

var __assign$3O = (globalThis && globalThis.__assign) || function () {
    __assign$3O = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3O.apply(this, arguments);
};

var __assign$3N = (globalThis && globalThis.__assign) || function () {
    __assign$3N = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3N.apply(this, arguments);
};

var __assign$3M = (globalThis && globalThis.__assign) || function () {
    __assign$3M = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3M.apply(this, arguments);
};

var __assign$3L = (globalThis && globalThis.__assign) || function () {
    __assign$3L = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3L.apply(this, arguments);
};

var __assign$3K = (globalThis && globalThis.__assign) || function () {
    __assign$3K = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3K.apply(this, arguments);
};

var __assign$3J = (globalThis && globalThis.__assign) || function () {
    __assign$3J = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3J.apply(this, arguments);
};

var __assign$3I = (globalThis && globalThis.__assign) || function () {
    __assign$3I = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3I.apply(this, arguments);
};

var __assign$3H = (globalThis && globalThis.__assign) || function () {
    __assign$3H = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3H.apply(this, arguments);
};

var __assign$3G = (globalThis && globalThis.__assign) || function () {
    __assign$3G = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3G.apply(this, arguments);
};

var __assign$3F = (globalThis && globalThis.__assign) || function () {
    __assign$3F = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3F.apply(this, arguments);
};

var __assign$3E = (globalThis && globalThis.__assign) || function () {
    __assign$3E = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3E.apply(this, arguments);
};

var __assign$3D = (globalThis && globalThis.__assign) || function () {
    __assign$3D = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3D.apply(this, arguments);
};

var __assign$3C = (globalThis && globalThis.__assign) || function () {
    __assign$3C = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3C.apply(this, arguments);
};

var __assign$3B = (globalThis && globalThis.__assign) || function () {
    __assign$3B = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3B.apply(this, arguments);
};

var __assign$3A = (globalThis && globalThis.__assign) || function () {
    __assign$3A = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3A.apply(this, arguments);
};

var __assign$3z = (globalThis && globalThis.__assign) || function () {
    __assign$3z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3z.apply(this, arguments);
};

var __assign$3y = (globalThis && globalThis.__assign) || function () {
    __assign$3y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3y.apply(this, arguments);
};

var __assign$3x = (globalThis && globalThis.__assign) || function () {
    __assign$3x = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3x.apply(this, arguments);
};

var __assign$3w = (globalThis && globalThis.__assign) || function () {
    __assign$3w = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3w.apply(this, arguments);
};

var __assign$3v = (globalThis && globalThis.__assign) || function () {
    __assign$3v = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3v.apply(this, arguments);
};

var __assign$3u = (globalThis && globalThis.__assign) || function () {
    __assign$3u = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3u.apply(this, arguments);
};

var __assign$3t = (globalThis && globalThis.__assign) || function () {
    __assign$3t = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3t.apply(this, arguments);
};

var __assign$3s = (globalThis && globalThis.__assign) || function () {
    __assign$3s = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3s.apply(this, arguments);
};

var __assign$3r = (globalThis && globalThis.__assign) || function () {
    __assign$3r = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3r.apply(this, arguments);
};

var __assign$3q = (globalThis && globalThis.__assign) || function () {
    __assign$3q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3q.apply(this, arguments);
};

var __assign$3p = (globalThis && globalThis.__assign) || function () {
    __assign$3p = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3p.apply(this, arguments);
};

var __assign$3o = (globalThis && globalThis.__assign) || function () {
    __assign$3o = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3o.apply(this, arguments);
};

var __assign$3n = (globalThis && globalThis.__assign) || function () {
    __assign$3n = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3n.apply(this, arguments);
};

var __assign$3m = (globalThis && globalThis.__assign) || function () {
    __assign$3m = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3m.apply(this, arguments);
};

var __assign$3l = (globalThis && globalThis.__assign) || function () {
    __assign$3l = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3l.apply(this, arguments);
};

var __assign$3k = (globalThis && globalThis.__assign) || function () {
    __assign$3k = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3k.apply(this, arguments);
};
function SvgHome(props) {
    return (React.createElement("svg", __assign$3k({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm2 14.6s0 .4.3.4h4.7v-4h2v4h4.5c.5 0 .5-.4.5-.4v-6.1l-6-4.5-6 4.5zm12-9.3v-3.3h-2v1.8l-4-2.8-8 5.7 1 1.3 7-5 7 5 1-1.3z' })));
}

var __assign$3j = (globalThis && globalThis.__assign) || function () {
    __assign$3j = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3j.apply(this, arguments);
};

var __assign$3i = (globalThis && globalThis.__assign) || function () {
    __assign$3i = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3i.apply(this, arguments);
};

var __assign$3h = (globalThis && globalThis.__assign) || function () {
    __assign$3h = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3h.apply(this, arguments);
};

var __assign$3g = (globalThis && globalThis.__assign) || function () {
    __assign$3g = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3g.apply(this, arguments);
};

var __assign$3f = (globalThis && globalThis.__assign) || function () {
    __assign$3f = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3f.apply(this, arguments);
};

var __assign$3e = (globalThis && globalThis.__assign) || function () {
    __assign$3e = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3e.apply(this, arguments);
};

var __assign$3d = (globalThis && globalThis.__assign) || function () {
    __assign$3d = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3d.apply(this, arguments);
};

var __assign$3c = (globalThis && globalThis.__assign) || function () {
    __assign$3c = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3c.apply(this, arguments);
};

var __assign$3b = (globalThis && globalThis.__assign) || function () {
    __assign$3b = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3b.apply(this, arguments);
};

var __assign$3a = (globalThis && globalThis.__assign) || function () {
    __assign$3a = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3a.apply(this, arguments);
};

var __assign$39 = (globalThis && globalThis.__assign) || function () {
    __assign$39 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$39.apply(this, arguments);
};

var __assign$38 = (globalThis && globalThis.__assign) || function () {
    __assign$38 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$38.apply(this, arguments);
};

var __assign$37 = (globalThis && globalThis.__assign) || function () {
    __assign$37 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$37.apply(this, arguments);
};
function SvgInfo(props) {
    return (React.createElement("svg", __assign$37({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm10 0a1.53894 1.53894 0 0 1 1.6617 1.40548q.00393.04717.005.09452a2.18227 2.18227 0 0 1 -2.1667 2 1.57463 1.57463 0 0 1 -1.66667-1.66667 2.04692 2.04692 0 0 1 2.16667-1.83333m-3.333 16c-.833 0-1.5-.5-.833-2.833l1-4c.166-.667.166-.834-.001-.834-.333-.167-1.5.333-2.167.833l-.333-.833c2-1.667 4.333-2.667 5.5-2.667.833 0 1 1 .5 2.667l-1.166 4.334c-.167.833-.167 1 .167 1a3.33817 3.33817 0 0 0 1.83334-1l.5.667a9.61465 9.61465 0 0 1 -5.00067 2.666' })));
}

var __assign$36 = (globalThis && globalThis.__assign) || function () {
    __assign$36 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$36.apply(this, arguments);
};

var __assign$35 = (globalThis && globalThis.__assign) || function () {
    __assign$35 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$35.apply(this, arguments);
};

var __assign$34 = (globalThis && globalThis.__assign) || function () {
    __assign$34 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$34.apply(this, arguments);
};

var __assign$33 = (globalThis && globalThis.__assign) || function () {
    __assign$33 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$33.apply(this, arguments);
};

var __assign$32 = (globalThis && globalThis.__assign) || function () {
    __assign$32 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$32.apply(this, arguments);
};

var __assign$31 = (globalThis && globalThis.__assign) || function () {
    __assign$31 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$31.apply(this, arguments);
};

var __assign$30 = (globalThis && globalThis.__assign) || function () {
    __assign$30 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$30.apply(this, arguments);
};

var __assign$2$ = (globalThis && globalThis.__assign) || function () {
    __assign$2$ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2$.apply(this, arguments);
};

var __assign$2_ = (globalThis && globalThis.__assign) || function () {
    __assign$2_ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2_.apply(this, arguments);
};

var __assign$2Z = (globalThis && globalThis.__assign) || function () {
    __assign$2Z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2Z.apply(this, arguments);
};

var __assign$2Y = (globalThis && globalThis.__assign) || function () {
    __assign$2Y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2Y.apply(this, arguments);
};

var __assign$2X = (globalThis && globalThis.__assign) || function () {
    __assign$2X = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2X.apply(this, arguments);
};

var __assign$2W = (globalThis && globalThis.__assign) || function () {
    __assign$2W = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2W.apply(this, arguments);
};

var __assign$2V = (globalThis && globalThis.__assign) || function () {
    __assign$2V = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2V.apply(this, arguments);
};

var __assign$2U = (globalThis && globalThis.__assign) || function () {
    __assign$2U = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2U.apply(this, arguments);
};

var __assign$2T = (globalThis && globalThis.__assign) || function () {
    __assign$2T = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2T.apply(this, arguments);
};

var __assign$2S = (globalThis && globalThis.__assign) || function () {
    __assign$2S = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2S.apply(this, arguments);
};

var __assign$2R = (globalThis && globalThis.__assign) || function () {
    __assign$2R = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2R.apply(this, arguments);
};

var __assign$2Q = (globalThis && globalThis.__assign) || function () {
    __assign$2Q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2Q.apply(this, arguments);
};

var __assign$2P = (globalThis && globalThis.__assign) || function () {
    __assign$2P = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2P.apply(this, arguments);
};

var __assign$2O = (globalThis && globalThis.__assign) || function () {
    __assign$2O = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2O.apply(this, arguments);
};

var __assign$2N = (globalThis && globalThis.__assign) || function () {
    __assign$2N = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2N.apply(this, arguments);
};

var __assign$2M = (globalThis && globalThis.__assign) || function () {
    __assign$2M = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2M.apply(this, arguments);
};

var __assign$2L = (globalThis && globalThis.__assign) || function () {
    __assign$2L = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2L.apply(this, arguments);
};

var __assign$2K = (globalThis && globalThis.__assign) || function () {
    __assign$2K = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2K.apply(this, arguments);
};

var __assign$2J = (globalThis && globalThis.__assign) || function () {
    __assign$2J = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2J.apply(this, arguments);
};

var __assign$2I = (globalThis && globalThis.__assign) || function () {
    __assign$2I = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2I.apply(this, arguments);
};

var __assign$2H = (globalThis && globalThis.__assign) || function () {
    __assign$2H = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2H.apply(this, arguments);
};

var __assign$2G = (globalThis && globalThis.__assign) || function () {
    __assign$2G = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2G.apply(this, arguments);
};

var __assign$2F = (globalThis && globalThis.__assign) || function () {
    __assign$2F = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2F.apply(this, arguments);
};
function SvgMore(props) {
    return (React.createElement("svg", __assign$2F({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm4 8a2 2 0 1 1 -2-2 2 2 0 0 1 2 2zm4-2a2 2 0 1 0 2 2 2 2 0 0 0 -2-2zm6 0a2 2 0 1 0 2 2 2 2 0 0 0 -2-2z' })));
}

var __assign$2E = (globalThis && globalThis.__assign) || function () {
    __assign$2E = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2E.apply(this, arguments);
};

var __assign$2D = (globalThis && globalThis.__assign) || function () {
    __assign$2D = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2D.apply(this, arguments);
};

var __assign$2C = (globalThis && globalThis.__assign) || function () {
    __assign$2C = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2C.apply(this, arguments);
};

var __assign$2B = (globalThis && globalThis.__assign) || function () {
    __assign$2B = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2B.apply(this, arguments);
};

var __assign$2A = (globalThis && globalThis.__assign) || function () {
    __assign$2A = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2A.apply(this, arguments);
};

var __assign$2z = (globalThis && globalThis.__assign) || function () {
    __assign$2z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2z.apply(this, arguments);
};

var __assign$2y = (globalThis && globalThis.__assign) || function () {
    __assign$2y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2y.apply(this, arguments);
};
function SvgNetwork(props) {
    return (React.createElement("svg", __assign$2y({ xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 16 16' }, props),
        React.createElement("path", { d: 'm7.5 0c-4.1 0-7.5 3.4-7.5 7.5s3.4 7.5 7.5 7.5 7.5-3.4 7.5-7.5-3.4-7.5-7.5-7.5m-6.5 8h2c0 1 .2 2 .5 3h-1.5c-.6-.9-.9-1.9-1-3m7-5v-1.9c.9.4 1.6 1 2 1.9m.4 1c.4 1 .6 2 .6 3h-3v-3m-1-2.9v1.9h-2c.4-.9 1.1-1.6 2-1.9m0 2.9v3h-3c0-1 .2-2 .6-3m-1.6 3h-2c.1-1.1.4-2.1 1-3h1.5c-.3 1-.5 2-.5 3m1 1h3v3h-2.4c-.4-1-.6-2-.6-3m3 4v1.9c-.9-.4-1.6-1-2-1.9m3 1.9v-1.9h2c-.4.9-1.1 1.6-2 1.9m0-2.9v-3h3c0 1-.2 2-.6 3m1.6-3h2c-.1 1.1-.4 2.1-1 3h-1.5c.3-1 .5-2 .5-3m0-1c0-1-.2-2-.5-3h1.5c.6.9.9 1.9 1 3m-1.8-4h-1.1c-.2-.5-.5-.9-.8-1.4.7.4 1.3.8 1.9 1.4m-7.5-1.4c-.3.5-.6.9-.8 1.4h-1.1c.6-.6 1.2-1 1.9-1.4m-1.9 10.4h1.1c.2.5.5.9.8 1.4-.7-.4-1.3-.8-1.9-1.4m7.5 1.4c.3-.4.6-.9.8-1.4h1.1c-.6.6-1.2 1-1.9 1.4' })));
}

var __assign$2x = (globalThis && globalThis.__assign) || function () {
    __assign$2x = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2x.apply(this, arguments);
};

var __assign$2w = (globalThis && globalThis.__assign) || function () {
    __assign$2w = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2w.apply(this, arguments);
};

var __assign$2v = (globalThis && globalThis.__assign) || function () {
    __assign$2v = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2v.apply(this, arguments);
};

var __assign$2u = (globalThis && globalThis.__assign) || function () {
    __assign$2u = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2u.apply(this, arguments);
};

var __assign$2t = (globalThis && globalThis.__assign) || function () {
    __assign$2t = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2t.apply(this, arguments);
};

var __assign$2s = (globalThis && globalThis.__assign) || function () {
    __assign$2s = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2s.apply(this, arguments);
};

var __assign$2r = (globalThis && globalThis.__assign) || function () {
    __assign$2r = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2r.apply(this, arguments);
};

var __assign$2q = (globalThis && globalThis.__assign) || function () {
    __assign$2q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2q.apply(this, arguments);
};

var __assign$2p = (globalThis && globalThis.__assign) || function () {
    __assign$2p = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2p.apply(this, arguments);
};

var __assign$2o = (globalThis && globalThis.__assign) || function () {
    __assign$2o = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2o.apply(this, arguments);
};

var __assign$2n = (globalThis && globalThis.__assign) || function () {
    __assign$2n = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2n.apply(this, arguments);
};

var __assign$2m = (globalThis && globalThis.__assign) || function () {
    __assign$2m = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2m.apply(this, arguments);
};

var __assign$2l = (globalThis && globalThis.__assign) || function () {
    __assign$2l = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2l.apply(this, arguments);
};

var __assign$2k = (globalThis && globalThis.__assign) || function () {
    __assign$2k = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2k.apply(this, arguments);
};

var __assign$2j = (globalThis && globalThis.__assign) || function () {
    __assign$2j = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2j.apply(this, arguments);
};

var __assign$2i = (globalThis && globalThis.__assign) || function () {
    __assign$2i = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2i.apply(this, arguments);
};

var __assign$2h = (globalThis && globalThis.__assign) || function () {
    __assign$2h = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2h.apply(this, arguments);
};

var __assign$2g = (globalThis && globalThis.__assign) || function () {
    __assign$2g = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2g.apply(this, arguments);
};

var __assign$2f = (globalThis && globalThis.__assign) || function () {
    __assign$2f = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2f.apply(this, arguments);
};
function SvgPlaceholder(props) {
    return (React.createElement("svg", __assign$2f({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm0 0v16h16v-16zm14.85714 1.94286v12.11428l-6.05714-6.05714zm-6.85714 5.25714-6.05714-6.05714h12.11428zm-.8.8-6.05714 6.05714v-12.11428zm.8.8 6.05714 6.05714h-12.11428z' })));
}

var __assign$2e = (globalThis && globalThis.__assign) || function () {
    __assign$2e = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2e.apply(this, arguments);
};

var __assign$2d = (globalThis && globalThis.__assign) || function () {
    __assign$2d = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2d.apply(this, arguments);
};

var __assign$2c = (globalThis && globalThis.__assign) || function () {
    __assign$2c = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2c.apply(this, arguments);
};

var __assign$2b = (globalThis && globalThis.__assign) || function () {
    __assign$2b = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2b.apply(this, arguments);
};

var __assign$2a = (globalThis && globalThis.__assign) || function () {
    __assign$2a = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2a.apply(this, arguments);
};

var __assign$29 = (globalThis && globalThis.__assign) || function () {
    __assign$29 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$29.apply(this, arguments);
};

var __assign$28 = (globalThis && globalThis.__assign) || function () {
    __assign$28 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$28.apply(this, arguments);
};

var __assign$27 = (globalThis && globalThis.__assign) || function () {
    __assign$27 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$27.apply(this, arguments);
};

var __assign$26 = (globalThis && globalThis.__assign) || function () {
    __assign$26 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$26.apply(this, arguments);
};

var __assign$25 = (globalThis && globalThis.__assign) || function () {
    __assign$25 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$25.apply(this, arguments);
};

var __assign$24 = (globalThis && globalThis.__assign) || function () {
    __assign$24 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$24.apply(this, arguments);
};

var __assign$23 = (globalThis && globalThis.__assign) || function () {
    __assign$23 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$23.apply(this, arguments);
};

var __assign$22 = (globalThis && globalThis.__assign) || function () {
    __assign$22 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$22.apply(this, arguments);
};

var __assign$21 = (globalThis && globalThis.__assign) || function () {
    __assign$21 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$21.apply(this, arguments);
};

var __assign$20 = (globalThis && globalThis.__assign) || function () {
    __assign$20 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$20.apply(this, arguments);
};

var __assign$1$ = (globalThis && globalThis.__assign) || function () {
    __assign$1$ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1$.apply(this, arguments);
};

var __assign$1_ = (globalThis && globalThis.__assign) || function () {
    __assign$1_ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1_.apply(this, arguments);
};

var __assign$1Z = (globalThis && globalThis.__assign) || function () {
    __assign$1Z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1Z.apply(this, arguments);
};

var __assign$1Y = (globalThis && globalThis.__assign) || function () {
    __assign$1Y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1Y.apply(this, arguments);
};

var __assign$1X = (globalThis && globalThis.__assign) || function () {
    __assign$1X = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1X.apply(this, arguments);
};

var __assign$1W = (globalThis && globalThis.__assign) || function () {
    __assign$1W = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1W.apply(this, arguments);
};

var __assign$1V = (globalThis && globalThis.__assign) || function () {
    __assign$1V = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1V.apply(this, arguments);
};

var __assign$1U = (globalThis && globalThis.__assign) || function () {
    __assign$1U = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1U.apply(this, arguments);
};

var __assign$1T = (globalThis && globalThis.__assign) || function () {
    __assign$1T = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1T.apply(this, arguments);
};

var __assign$1S = (globalThis && globalThis.__assign) || function () {
    __assign$1S = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1S.apply(this, arguments);
};

var __assign$1R = (globalThis && globalThis.__assign) || function () {
    __assign$1R = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1R.apply(this, arguments);
};

var __assign$1Q = (globalThis && globalThis.__assign) || function () {
    __assign$1Q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1Q.apply(this, arguments);
};

var __assign$1P = (globalThis && globalThis.__assign) || function () {
    __assign$1P = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1P.apply(this, arguments);
};

var __assign$1O = (globalThis && globalThis.__assign) || function () {
    __assign$1O = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1O.apply(this, arguments);
};

var __assign$1N = (globalThis && globalThis.__assign) || function () {
    __assign$1N = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1N.apply(this, arguments);
};

var __assign$1M = (globalThis && globalThis.__assign) || function () {
    __assign$1M = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1M.apply(this, arguments);
};

var __assign$1L = (globalThis && globalThis.__assign) || function () {
    __assign$1L = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1L.apply(this, arguments);
};

var __assign$1K = (globalThis && globalThis.__assign) || function () {
    __assign$1K = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1K.apply(this, arguments);
};

var __assign$1J = (globalThis && globalThis.__assign) || function () {
    __assign$1J = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1J.apply(this, arguments);
};

var __assign$1I = (globalThis && globalThis.__assign) || function () {
    __assign$1I = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1I.apply(this, arguments);
};

var __assign$1H = (globalThis && globalThis.__assign) || function () {
    __assign$1H = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1H.apply(this, arguments);
};

var __assign$1G = (globalThis && globalThis.__assign) || function () {
    __assign$1G = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1G.apply(this, arguments);
};

var __assign$1F = (globalThis && globalThis.__assign) || function () {
    __assign$1F = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1F.apply(this, arguments);
};

var __assign$1E = (globalThis && globalThis.__assign) || function () {
    __assign$1E = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1E.apply(this, arguments);
};

var __assign$1D = (globalThis && globalThis.__assign) || function () {
    __assign$1D = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1D.apply(this, arguments);
};

var __assign$1C = (globalThis && globalThis.__assign) || function () {
    __assign$1C = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1C.apply(this, arguments);
};

var __assign$1B = (globalThis && globalThis.__assign) || function () {
    __assign$1B = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1B.apply(this, arguments);
};

var __assign$1A = (globalThis && globalThis.__assign) || function () {
    __assign$1A = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1A.apply(this, arguments);
};

var __assign$1z = (globalThis && globalThis.__assign) || function () {
    __assign$1z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1z.apply(this, arguments);
};

var __assign$1y = (globalThis && globalThis.__assign) || function () {
    __assign$1y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1y.apply(this, arguments);
};

var __assign$1x = (globalThis && globalThis.__assign) || function () {
    __assign$1x = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1x.apply(this, arguments);
};

var __assign$1w = (globalThis && globalThis.__assign) || function () {
    __assign$1w = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1w.apply(this, arguments);
};
function SvgSettings(props) {
    return (React.createElement("svg", __assign$1w({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm16 9.42256v-2.85566l-2.20352-.44435a6.05356 6.05356 0 0 0 -.37645-.903l1.2427-1.87048-2.01923-2.01931-1.86669 1.24016a6.047 6.047 0 0 0 -.91294-.38153l-.44131-2.18839h-2.85566l-.44131 2.18839a6.0501 6.0501 0 0 0 -.91778.38383l-1.85881-1.23495-2.01924 2.01923 1.2388 1.86464a6.05267 6.05267 0 0 0 -.38067.91511l-2.18789.44119v2.85566l2.20054.44373a6.059 6.059 0 0 0 .37924.90383l-1.24251 1.87034 2.01923 2.01924 1.88089-1.24959a6.049 6.049 0 0 0 .8949.372l.44515 2.20735h2.85566l.44683-2.21567a6.05213 6.05213 0 0 0 .88907-.37186l1.882 1.25026 2.01923-2.01923-1.25089-1.88287a6.04854 6.04854 0 0 0 .37291-.89285zm-8.0053 1.61456a3.04782 3.04782 0 1 1 3.04782-3.04782 3.04781 3.04781 0 0 1 -3.04782 3.04782z' })));
}

var __assign$1v = (globalThis && globalThis.__assign) || function () {
    __assign$1v = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1v.apply(this, arguments);
};

var __assign$1u = (globalThis && globalThis.__assign) || function () {
    __assign$1u = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1u.apply(this, arguments);
};

var __assign$1t = (globalThis && globalThis.__assign) || function () {
    __assign$1t = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1t.apply(this, arguments);
};

var __assign$1s = (globalThis && globalThis.__assign) || function () {
    __assign$1s = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1s.apply(this, arguments);
};

var __assign$1r = (globalThis && globalThis.__assign) || function () {
    __assign$1r = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1r.apply(this, arguments);
};

var __assign$1q = (globalThis && globalThis.__assign) || function () {
    __assign$1q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1q.apply(this, arguments);
};

var __assign$1p = (globalThis && globalThis.__assign) || function () {
    __assign$1p = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1p.apply(this, arguments);
};

var __assign$1o = (globalThis && globalThis.__assign) || function () {
    __assign$1o = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1o.apply(this, arguments);
};

var __assign$1n = (globalThis && globalThis.__assign) || function () {
    __assign$1n = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1n.apply(this, arguments);
};

var __assign$1m = (globalThis && globalThis.__assign) || function () {
    __assign$1m = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1m.apply(this, arguments);
};

var __assign$1l = (globalThis && globalThis.__assign) || function () {
    __assign$1l = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1l.apply(this, arguments);
};

var __assign$1k = (globalThis && globalThis.__assign) || function () {
    __assign$1k = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1k.apply(this, arguments);
};

var __assign$1j = (globalThis && globalThis.__assign) || function () {
    __assign$1j = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1j.apply(this, arguments);
};

var __assign$1i = (globalThis && globalThis.__assign) || function () {
    __assign$1i = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1i.apply(this, arguments);
};

var __assign$1h = (globalThis && globalThis.__assign) || function () {
    __assign$1h = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1h.apply(this, arguments);
};

var __assign$1g = (globalThis && globalThis.__assign) || function () {
    __assign$1g = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1g.apply(this, arguments);
};

var __assign$1f = (globalThis && globalThis.__assign) || function () {
    __assign$1f = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1f.apply(this, arguments);
};

var __assign$1e = (globalThis && globalThis.__assign) || function () {
    __assign$1e = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1e.apply(this, arguments);
};

var __assign$1d = (globalThis && globalThis.__assign) || function () {
    __assign$1d = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1d.apply(this, arguments);
};

var __assign$1c = (globalThis && globalThis.__assign) || function () {
    __assign$1c = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1c.apply(this, arguments);
};

var __assign$1b = (globalThis && globalThis.__assign) || function () {
    __assign$1b = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1b.apply(this, arguments);
};

var __assign$1a = (globalThis && globalThis.__assign) || function () {
    __assign$1a = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1a.apply(this, arguments);
};
function SvgStar(props) {
    return (React.createElement("svg", __assign$1a({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm10.7 5-2.1-4.4a.642.642 0 0 0 -1.2 0l-2.1 4.4-4.8.7c-.6.1-.6.7-.2 1.1l3.4 3.3-.9 4.8c-.1.7.5.8.9.6l4.3-2.2 4.3 2.2a.5811.5811 0 0 0 .9-.6l-.8-4.8 3.5-3.4a.66889.66889 0 0 0 -.4-1z' })));
}

var __assign$19 = (globalThis && globalThis.__assign) || function () {
    __assign$19 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$19.apply(this, arguments);
};

var __assign$18 = (globalThis && globalThis.__assign) || function () {
    __assign$18 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$18.apply(this, arguments);
};

var __assign$17 = (globalThis && globalThis.__assign) || function () {
    __assign$17 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$17.apply(this, arguments);
};

var __assign$16 = (globalThis && globalThis.__assign) || function () {
    __assign$16 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$16.apply(this, arguments);
};

var __assign$15 = (globalThis && globalThis.__assign) || function () {
    __assign$15 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$15.apply(this, arguments);
};

var __assign$14 = (globalThis && globalThis.__assign) || function () {
    __assign$14 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$14.apply(this, arguments);
};

var __assign$13 = (globalThis && globalThis.__assign) || function () {
    __assign$13 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$13.apply(this, arguments);
};

var __assign$12 = (globalThis && globalThis.__assign) || function () {
    __assign$12 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$12.apply(this, arguments);
};

var __assign$11 = (globalThis && globalThis.__assign) || function () {
    __assign$11 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$11.apply(this, arguments);
};

var __assign$10 = (globalThis && globalThis.__assign) || function () {
    __assign$10 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$10.apply(this, arguments);
};

var __assign$$ = (globalThis && globalThis.__assign) || function () {
    __assign$$ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$$.apply(this, arguments);
};

var __assign$_ = (globalThis && globalThis.__assign) || function () {
    __assign$_ = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$_.apply(this, arguments);
};

var __assign$Z = (globalThis && globalThis.__assign) || function () {
    __assign$Z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$Z.apply(this, arguments);
};

var __assign$Y = (globalThis && globalThis.__assign) || function () {
    __assign$Y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$Y.apply(this, arguments);
};

var __assign$X = (globalThis && globalThis.__assign) || function () {
    __assign$X = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$X.apply(this, arguments);
};

var __assign$W = (globalThis && globalThis.__assign) || function () {
    __assign$W = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$W.apply(this, arguments);
};

var __assign$V = (globalThis && globalThis.__assign) || function () {
    __assign$V = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$V.apply(this, arguments);
};

var __assign$U = (globalThis && globalThis.__assign) || function () {
    __assign$U = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$U.apply(this, arguments);
};

var __assign$T = (globalThis && globalThis.__assign) || function () {
    __assign$T = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$T.apply(this, arguments);
};

var __assign$S = (globalThis && globalThis.__assign) || function () {
    __assign$S = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$S.apply(this, arguments);
};

var __assign$R = (globalThis && globalThis.__assign) || function () {
    __assign$R = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$R.apply(this, arguments);
};

var __assign$Q = (globalThis && globalThis.__assign) || function () {
    __assign$Q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$Q.apply(this, arguments);
};

var __assign$P = (globalThis && globalThis.__assign) || function () {
    __assign$P = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$P.apply(this, arguments);
};

var __assign$O = (globalThis && globalThis.__assign) || function () {
    __assign$O = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$O.apply(this, arguments);
};

var __assign$N = (globalThis && globalThis.__assign) || function () {
    __assign$N = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$N.apply(this, arguments);
};

var __assign$M = (globalThis && globalThis.__assign) || function () {
    __assign$M = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$M.apply(this, arguments);
};

var __assign$L = (globalThis && globalThis.__assign) || function () {
    __assign$L = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$L.apply(this, arguments);
};

var __assign$K = (globalThis && globalThis.__assign) || function () {
    __assign$K = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$K.apply(this, arguments);
};

var __assign$J = (globalThis && globalThis.__assign) || function () {
    __assign$J = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$J.apply(this, arguments);
};

var __assign$I = (globalThis && globalThis.__assign) || function () {
    __assign$I = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$I.apply(this, arguments);
};

var __assign$H = (globalThis && globalThis.__assign) || function () {
    __assign$H = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$H.apply(this, arguments);
};

var __assign$G = (globalThis && globalThis.__assign) || function () {
    __assign$G = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$G.apply(this, arguments);
};

var __assign$F = (globalThis && globalThis.__assign) || function () {
    __assign$F = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$F.apply(this, arguments);
};

var __assign$E = (globalThis && globalThis.__assign) || function () {
    __assign$E = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$E.apply(this, arguments);
};

var __assign$D = (globalThis && globalThis.__assign) || function () {
    __assign$D = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$D.apply(this, arguments);
};

var __assign$C = (globalThis && globalThis.__assign) || function () {
    __assign$C = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$C.apply(this, arguments);
};

var __assign$B = (globalThis && globalThis.__assign) || function () {
    __assign$B = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$B.apply(this, arguments);
};

var __assign$A = (globalThis && globalThis.__assign) || function () {
    __assign$A = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$A.apply(this, arguments);
};
function SvgUndo(props) {
    return (React.createElement("svg", __assign$A({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm16 14c0-5.2-4.2-9.3-9-9.4v-2.6l-7 5.3 7 5.3v-2.6c4.3 0 6.7 1.8 9 4' })));
}

var __assign$z = (globalThis && globalThis.__assign) || function () {
    __assign$z = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$z.apply(this, arguments);
};

var __assign$y = (globalThis && globalThis.__assign) || function () {
    __assign$y = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$y.apply(this, arguments);
};

var __assign$x = (globalThis && globalThis.__assign) || function () {
    __assign$x = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$x.apply(this, arguments);
};

var __assign$w = (globalThis && globalThis.__assign) || function () {
    __assign$w = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$w.apply(this, arguments);
};

var __assign$v = (globalThis && globalThis.__assign) || function () {
    __assign$v = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$v.apply(this, arguments);
};

var __assign$u = (globalThis && globalThis.__assign) || function () {
    __assign$u = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$u.apply(this, arguments);
};

var __assign$t = (globalThis && globalThis.__assign) || function () {
    __assign$t = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$t.apply(this, arguments);
};

var __assign$s = (globalThis && globalThis.__assign) || function () {
    __assign$s = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$s.apply(this, arguments);
};

var __assign$r = (globalThis && globalThis.__assign) || function () {
    __assign$r = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$r.apply(this, arguments);
};

var __assign$q = (globalThis && globalThis.__assign) || function () {
    __assign$q = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$q.apply(this, arguments);
};

var __assign$p = (globalThis && globalThis.__assign) || function () {
    __assign$p = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$p.apply(this, arguments);
};

var __assign$o = (globalThis && globalThis.__assign) || function () {
    __assign$o = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$o.apply(this, arguments);
};

var __assign$n = (globalThis && globalThis.__assign) || function () {
    __assign$n = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$n.apply(this, arguments);
};

var __assign$m = (globalThis && globalThis.__assign) || function () {
    __assign$m = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$m.apply(this, arguments);
};

var __assign$l = (globalThis && globalThis.__assign) || function () {
    __assign$l = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$l.apply(this, arguments);
};

var __assign$k = (globalThis && globalThis.__assign) || function () {
    __assign$k = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$k.apply(this, arguments);
};

var __assign$j = (globalThis && globalThis.__assign) || function () {
    __assign$j = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$j.apply(this, arguments);
};

var __assign$i = (globalThis && globalThis.__assign) || function () {
    __assign$i = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$i.apply(this, arguments);
};

var __assign$h = (globalThis && globalThis.__assign) || function () {
    __assign$h = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$h.apply(this, arguments);
};

var __assign$g = (globalThis && globalThis.__assign) || function () {
    __assign$g = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$g.apply(this, arguments);
};

var __assign$f = (globalThis && globalThis.__assign) || function () {
    __assign$f = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$f.apply(this, arguments);
};

var __assign$e = (globalThis && globalThis.__assign) || function () {
    __assign$e = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$e.apply(this, arguments);
};

var __assign$d = (globalThis && globalThis.__assign) || function () {
    __assign$d = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$d.apply(this, arguments);
};

var __assign$c = (globalThis && globalThis.__assign) || function () {
    __assign$c = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$c.apply(this, arguments);
};

var __assign$b = (globalThis && globalThis.__assign) || function () {
    __assign$b = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$b.apply(this, arguments);
};

var __assign$a = (globalThis && globalThis.__assign) || function () {
    __assign$a = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$a.apply(this, arguments);
};

var __assign$9 = (globalThis && globalThis.__assign) || function () {
    __assign$9 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$9.apply(this, arguments);
};

var __assign$8 = (globalThis && globalThis.__assign) || function () {
    __assign$8 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$8.apply(this, arguments);
};

var __assign$7 = (globalThis && globalThis.__assign) || function () {
    __assign$7 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$7.apply(this, arguments);
};

var __assign$6 = (globalThis && globalThis.__assign) || function () {
    __assign$6 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$6.apply(this, arguments);
};

var __assign$5 = (globalThis && globalThis.__assign) || function () {
    __assign$5 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$5.apply(this, arguments);
};
function SvgWindows(props) {
    return (React.createElement("svg", __assign$5({ viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' }, props),
        React.createElement("path", { d: 'm0 2.042 6-.824v5.782h-5.999m5.999 1v5.782l-5.999-.832v-4.95zm1-6.899 8-1.101v7h-8m8 1v7l-8-1.111v-5.889z' })));
}

var __assign$4 = (globalThis && globalThis.__assign) || function () {
    __assign$4 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$4.apply(this, arguments);
};

var __assign$3 = (globalThis && globalThis.__assign) || function () {
    __assign$3 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$3.apply(this, arguments);
};

var __assign$2 = (globalThis && globalThis.__assign) || function () {
    __assign$2 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$2.apply(this, arguments);
};

var __assign$1 = (globalThis && globalThis.__assign) || function () {
    __assign$1 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign$1.apply(this, arguments);
};

var __assign = (globalThis && globalThis.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

const _arrow_function$R = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(IconButton, {
      onClick: () => {
      },
      children: /* @__PURE__ */ jsx(SvgAdd, {})
    })
  });
};
__astro_tag_component__(_arrow_function$R, "@astrojs/react");

const _arrow_function$Q = () => {
  const onClick = (index, close) => () => {
    close();
  };
  const buttonMenuItems = (close) => [/* @__PURE__ */ jsx(MenuItem, {
    onClick: onClick(1, close),
    children: "Item #1"
  }, 1), /* @__PURE__ */ jsx(MenuItem, {
    onClick: onClick(2, close),
    children: "Item #2"
  }, 2), /* @__PURE__ */ jsx(MenuItem, {
    onClick: onClick(3, close),
    children: "Item #3"
  }, 3)];
  return /* @__PURE__ */ jsx(DropdownButton, {
    menuItems: buttonMenuItems,
    styleType: "default",
    children: "Default"
  });
};
__astro_tag_component__(_arrow_function$Q, "@astrojs/react");

const _arrow_function$P = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsxs(ButtonGroup, {
      children: [/* @__PURE__ */ jsx(IconButton, {
        onClick: () => {
        },
        children: /* @__PURE__ */ jsx(SvgAdd, {})
      }), /* @__PURE__ */ jsx(IconButton, {
        onClick: () => {
        },
        isActive: true,
        children: /* @__PURE__ */ jsx(SvgEdit, {})
      }), /* @__PURE__ */ jsx(IconButton, {
        disabled: true,
        onClick: () => {
        },
        children: /* @__PURE__ */ jsx(SvgDelete, {})
      }), /* @__PURE__ */ jsx(IconButton, {
        onClick: () => {
        },
        children: /* @__PURE__ */ jsx(SvgUndo, {})
      })]
    })
  });
};
__astro_tag_component__(_arrow_function$P, "@astrojs/react");

const _arrow_function$O = () => {
  const onMenuItemClick = (index, close) => () => {
    close();
  };
  const buttonMenuItems = (close) => [/* @__PURE__ */ jsx(MenuItem, {
    onClick: onMenuItemClick(1, close),
    children: "Item #1"
  }, 1), /* @__PURE__ */ jsx(MenuItem, {
    onClick: onMenuItemClick(2, close),
    children: "Item #2"
  }, 2), /* @__PURE__ */ jsx(MenuItem, {
    onClick: onMenuItemClick(3, close),
    children: "Item #3"
  }, 3)];
  return /* @__PURE__ */ jsx(SplitButton, {
    onClick: () => {
    },
    menuItems: buttonMenuItems,
    styleType: "default",
    children: "Default"
  });
};
__astro_tag_component__(_arrow_function$O, "@astrojs/react");

const _arrow_function$N = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(IdeasButton, {
      onClick: () => {
      }
    })
  });
};
__astro_tag_component__(_arrow_function$N, "@astrojs/react");

const _arrow_function$M = () => {
  return /* @__PURE__ */ jsxs(Breadcrumbs, {
    children: [/* @__PURE__ */ jsx(Button, {
      onClick: () => {
      },
      children: "Root"
    }, 0), /* @__PURE__ */ jsx(Button, {
      onClick: () => {
      },
      children: "Item 1"
    }, 1), /* @__PURE__ */ jsx(Button, {
      onClick: () => {
      },
      children: "Item 2"
    }, 2)]
  });
};
__astro_tag_component__(_arrow_function$M, "@astrojs/react");

const _arrow_function$L = () => {
  return /* @__PURE__ */ jsxs("div", {
    style: {
      display: "flex",
      flexDirection: "column"
    },
    children: [/* @__PURE__ */ jsx(Checkbox, {
      label: "Basic"
    }), /* @__PURE__ */ jsx(Checkbox, {
      label: "Disabled",
      disabled: true
    }), /* @__PURE__ */ jsx(Checkbox, {
      label: "Loading",
      isLoading: true
    })]
  });
};
__astro_tag_component__(_arrow_function$L, "@astrojs/react");

const _arrow_function$K = () => {
  const gradients = [{
    from: "#cc2b5e",
    to: "#753a88"
  }, {
    from: "#00467f",
    to: "#a5cc82"
  }, {
    from: "#2193b0",
    to: "#6dd5ed"
  }, {
    from: "#ffe000",
    to: "#799f0c"
  }, {
    from: "#e65c00",
    to: "#f9d423"
  }, {
    from: "#1488cc",
    to: "#2b32b2"
  }, {
    from: "#bbd2c5",
    to: "#536976"
  }, {
    from: "#9796f0",
    to: "#fbc7d4"
  }, {
    from: "#b79891",
    to: "#94716b"
  }, {
    from: "#acb6e5",
    to: "#86fde8"
  }];
  return /* @__PURE__ */ jsxs(Carousel, {
    children: [/* @__PURE__ */ jsx(Carousel.Slider, {
      children: gradients.map(({
        from,
        to
      }, index) => /* @__PURE__ */ jsx(Carousel.Slide, {
        children: /* @__PURE__ */ jsx("div", {
          style: {
            background: `linear-gradient(to right, ${from}, ${to})`,
            height: "200px",
            width: "100%",
            display: "grid",
            placeItems: "center"
          },
          children: /* @__PURE__ */ jsx("div", {
            style: {
              fontSize: 48,
              color: "hsl(0deg 0% 100% / 0.7)"
            },
            children: index + 1
          })
        })
      }, index))
    }), /* @__PURE__ */ jsx(Carousel.Navigation, {})]
  });
};
__astro_tag_component__(_arrow_function$K, "@astrojs/react");

const _arrow_function$J = () => {
  const [activeColor, setActiveColor] = React.useState(ColorValue.create("#0073ba"));
  const onColorChanged = (color) => {
    setActiveColor(color);
  };
  return /* @__PURE__ */ jsxs(ColorPicker, {
    selectedColor: activeColor,
    onChangeComplete: onColorChanged,
    children: [/* @__PURE__ */ jsx(ColorBuilder, {}), /* @__PURE__ */ jsx(ColorInputPanel, {
      defaultColorFormat: "hsl"
    })]
  });
};
__astro_tag_component__(_arrow_function$J, "@astrojs/react");

const _arrow_function$I = () => {
  const [value, setValue] = React.useState("");
  const options = React.useMemo(() => [{
    label: "Apple",
    value: "apple"
  }, {
    label: "Banana",
    value: "banana"
  }, {
    label: "Grapefruit",
    value: "grapefruit"
  }], []);
  return /* @__PURE__ */ jsx(ComboBox, {
    options,
    value,
    onChange: setValue,
    inputProps: {
      placeholder: "Pick a fruit, any fruit"
    }
  });
};
__astro_tag_component__(_arrow_function$I, "@astrojs/react");

const _arrow_function$H = () => {
  return /* @__PURE__ */ jsx(Code, {
    children: "This is code block"
  });
};
__astro_tag_component__(_arrow_function$H, "@astrojs/react");

const _arrow_function$G = () => {
  const [currentDate, setCurrentDate] = React.useState(new Date(2022, 4, 11, 14, 55, 22));
  const onChange = (date) => {
    setCurrentDate(date);
  };
  return /* @__PURE__ */ jsx(DatePicker, {
    showYearSelection: true,
    date: currentDate,
    onChange
  });
};
__astro_tag_component__(_arrow_function$G, "@astrojs/react");

const _arrow_function$F = () => {
  const [isModalOpen, setIsModalOpen] = React.useState(true);
  const closeModal = () => setIsModalOpen(false);
  return /* @__PURE__ */ jsx(Fragment$1, {
    children: /* @__PURE__ */ jsxs(Dialog.Main, {
      isOpen: isModalOpen,
      onClose: () => closeModal(),
      style: {
        position: "static",
        transform: "none",
        maxWidth: "400px",
        minWidth: 0
      },
      trapFocus: false,
      children: [/* @__PURE__ */ jsx(Dialog.TitleBar, {
        isDismissible: true,
        children: "Dialog"
      }), /* @__PURE__ */ jsx(ModalContent, {
        children: "A dialog informs users about a task and can contain critical information, require decisions, or involve multiple tasks. Dialogs appear in front of app content to provide critical information or ask for a decision."
      }), /* @__PURE__ */ jsxs(ModalButtonBar, {
        children: [/* @__PURE__ */ jsx(Button, {
          styleType: "high-visibility",
          onClick: () => closeModal(),
          children: "Primary"
        }), /* @__PURE__ */ jsx(Button, {
          onClick: () => closeModal(),
          children: "Secondary"
        })]
      })]
    })
  });
};
__astro_tag_component__(_arrow_function$F, "@astrojs/react");

const _arrow_function$E = () => {
  const [isModalOpen, setIsModalOpen] = React.useState(false);
  const closeModal = () => setIsModalOpen(false);
  return /* @__PURE__ */ jsxs(Fragment$1, {
    children: [/* @__PURE__ */ jsx(Button, {
      styleType: "high-visibility",
      onClick: () => setIsModalOpen(true),
      children: "Open Modal"
    }), /* @__PURE__ */ jsxs(Modal, {
      isOpen: isModalOpen,
      title: "Dialog",
      onClose: () => closeModal(),
      children: [/* @__PURE__ */ jsx(ModalContent, {
        children: "A dialog informs users about a task and can contain critical information, require decisions, or involve multiple tasks. Dialogs appear in front of app content to provide critical information or ask for a decision."
      }), /* @__PURE__ */ jsxs(ModalButtonBar, {
        children: [/* @__PURE__ */ jsx(Button, {
          styleType: "high-visibility",
          onClick: () => closeModal(),
          children: "Primary"
        }), /* @__PURE__ */ jsx(Button, {
          onClick: () => closeModal(),
          children: "Secondary"
        })]
      })]
    })]
  });
};
__astro_tag_component__(_arrow_function$E, "@astrojs/react");

const _arrow_function$D = () => {
  const [userType, setUserType] = React.useState("User");
  const dropdownMenuItems = (close) => [/* @__PURE__ */ jsx(MenuExtraContent, {
    children: /* @__PURE__ */ jsxs(Fragment$1, {
      children: [/* @__PURE__ */ jsx(Text, {
        variant: "leading",
        children: "Terry Rivers"
      }), /* @__PURE__ */ jsx(Text, {
        isMuted: true,
        style: {
          marginBottom: 8
        },
        children: "terry.rivers@email.com"
      }), /* @__PURE__ */ jsx(Select, {
        options: [{
          value: "User",
          label: "User"
        }, {
          value: "Moderator",
          label: "Moderator"
        }, {
          value: "Administrator",
          label: "Administrator"
        }],
        value: userType,
        onChange: (type) => setUserType(type)
      })]
    })
  }, 0), /* @__PURE__ */ jsx(MenuDivider, {}, 1), /* @__PURE__ */ jsx(MenuItem, {
    onClick: close,
    children: "View profile"
  }, 2), /* @__PURE__ */ jsx(MenuItem, {
    onClick: close,
    children: "Sign out"
  }, 3)];
  return /* @__PURE__ */ jsx("div", {
    style: {
      height: "70%",
      width: "50%",
      display: "flex",
      alignItems: "flex-start"
    },
    children: /* @__PURE__ */ jsxs(ButtonGroup, {
      children: [/* @__PURE__ */ jsx(IconButton, {
        disabled: true,
        children: /* @__PURE__ */ jsx(SvgPlaceholder, {})
      }), /* @__PURE__ */ jsx(IconButton, {
        disabled: true,
        children: /* @__PURE__ */ jsx(SvgPlaceholder, {})
      }), /* @__PURE__ */ jsx(DropdownMenu, {
        menuItems: dropdownMenuItems,
        children: /* @__PURE__ */ jsx(IconButton, {
          children: /* @__PURE__ */ jsx(SvgMore, {})
        })
      })]
    })
  });
};
__astro_tag_component__(_arrow_function$D, "@astrojs/react");

const _arrow_function$C = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsxs("ul", {
      className: "iui-menu",
      role: "menu",
      children: [/* @__PURE__ */ jsxs("li", {
        className: "iui-menu-content",
        role: "presentation",
        children: [/* @__PURE__ */ jsx("div", {
          className: "iui-text-leading",
          children: "Terry Rivers"
        }), /* @__PURE__ */ jsx("div", {
          className: "iui-text-block iui-text-muted",
          style: {
            marginBottom: "8px;"
          },
          children: "terry.rivers@email.com"
        }), /* @__PURE__ */ jsxs("div", {
          className: "iui-input-with-icon",
          "aria-expanded": "false",
          "aria-haspopup": "listbox",
          children: [/* @__PURE__ */ jsx("div", {
            className: "iui-select-button",
            "tab-index": "0",
            "aria-expanded": "false",
            children: /* @__PURE__ */ jsx("span", {
              className: "iui-content",
              children: "User"
            })
          }), /* @__PURE__ */ jsx("span", {
            className: "iui-end-icon iui-actionable",
            children: /* @__PURE__ */ jsx("svg", {
              viewBox: "0 0 16 16",
              xmlns: "http://www.w3.org/2000/svg",
              "aria-hidden": "true",
              children: /* @__PURE__ */ jsx("path", {
                d: "m4.8067 6h6.3953a.27961.27961 0 0 1 .24043.44321l-3.1736 3.45707a.33969.33969 0 0 1 -.48085 0l-3.2217-3.45707a.26909.26909 0 0 1 .24042-.44321z"
              })
            })
          })]
        })]
      }), /* @__PURE__ */ jsx("li", {
        role: "separator",
        className: "iui-menu-divider"
      }), /* @__PURE__ */ jsx("li", {
        className: "iui-menu-item",
        role: "menuitem",
        "tab-index": "-1",
        "aria-haspopup": "false",
        children: /* @__PURE__ */ jsx("span", {
          className: "iui-content",
          children: /* @__PURE__ */ jsx("div", {
            className: "iui-menu-label",
            children: "View profile"
          })
        })
      }), /* @__PURE__ */ jsx("li", {
        className: "iui-menu-item",
        role: "menuitem",
        "tab-index": "-1",
        "aria-haspopup": "false",
        children: /* @__PURE__ */ jsx("span", {
          className: "iui-content",
          children: /* @__PURE__ */ jsx("div", {
            className: "iui-menu-label",
            children: "Sign out"
          })
        })
      })]
    })
  });
};
__astro_tag_component__(_arrow_function$C, "@astrojs/react");

const _arrow_function$B = () => {
  return /* @__PURE__ */ jsx(NonIdealState, {
    svg: /* @__PURE__ */ jsx(Svg404, {}),
    heading: "Page not found",
    description: /* @__PURE__ */ jsxs(Fragment$1, {
      children: ["We can not find the iModel that you are looking for or it does not exist.", /* @__PURE__ */ jsx("br", {}), "Visit the iModel HUB or contact our support team."]
    }),
    actions: /* @__PURE__ */ jsxs(Fragment$1, {
      children: [/* @__PURE__ */ jsx(Button, {
        styleType: "high-visibility",
        children: "Retry"
      }), /* @__PURE__ */ jsx(Button, {
        children: "Contact us"
      })]
    })
  });
};
__astro_tag_component__(_arrow_function$B, "@astrojs/react");

const _arrow_function$A = () => {
  return /* @__PURE__ */ jsxs("div", {
    children: [/* @__PURE__ */ jsx(ExpandableBlock, {
      title: "Basic Block #1",
      children: "Content in block!"
    }), /* @__PURE__ */ jsx(ExpandableBlock, {
      title: "Basic Block #2",
      children: "Content in block!"
    }), /* @__PURE__ */ jsx(ExpandableBlock, {
      title: "Basic Block #3",
      children: "Content in block!"
    })]
  });
};
__astro_tag_component__(_arrow_function$A, "@astrojs/react");

const _arrow_function$z = () => {
  React.useState(void 0);
  return /* @__PURE__ */ jsxs(Fieldset, {
    legend: "General Settings",
    style: {
      display: "flex",
      flexDirection: "column",
      gap: 11
    },
    children: [/* @__PURE__ */ jsxs(InputGroup, {
      label: "Color Theme",
      children: [/* @__PURE__ */ jsx(Radio, {
        name: "choice",
        value: "option1",
        label: "Light"
      }), /* @__PURE__ */ jsx(Radio, {
        name: "choice",
        value: "option2",
        label: "Dark"
      }), /* @__PURE__ */ jsx(Radio, {
        name: "choice",
        value: "option3",
        label: "Match device"
      })]
    }), /* @__PURE__ */ jsxs(InputGroup, {
      children: [/* @__PURE__ */ jsx(ToggleSwitch, {
        label: "Share crash logs"
      }), /* @__PURE__ */ jsx(ToggleSwitch, {
        disabled: true,
        label: "Advanced settings"
      })]
    })]
  });
};
__astro_tag_component__(_arrow_function$z, "@astrojs/react");

const _arrow_function$y = () => {
  const [files, setFiles] = React.useState([]);
  return /* @__PURE__ */ jsx(FileUpload, {
    onFileDropped: (files2) => {
      setFiles(Array.from(files2));
    },
    children: /* @__PURE__ */ jsx(FileUploadTemplate, {
      onChange: (e) => setFiles(Array.from(e.target.files || [])),
      children: files.map((f) => f.name).join(", ")
    })
  });
};
__astro_tag_component__(_arrow_function$y, "@astrojs/react");

const _arrow_function$x = () => {
  return /* @__PURE__ */ jsx(Footer, {});
};
__astro_tag_component__(_arrow_function$x, "@astrojs/react");

const _arrow_function$w = () => {
  const buildMenu = (menu) => (close) => [/* @__PURE__ */ jsxs(MenuItem, {
    value: "Item #1",
    onClick: close,
    children: [menu, " item #1"]
  }, 1), /* @__PURE__ */ jsxs(MenuItem, {
    value: "Item #2",
    onClick: close,
    children: [menu, " item #2"]
  }, 2), /* @__PURE__ */ jsxs(MenuItem, {
    value: "Item #3",
    onClick: close,
    children: [menu, " item #3"]
  }, 3)];
  return /* @__PURE__ */ jsx("div", {
    style: {
      padding: "0 8px",
      width: "100%"
    },
    children: /* @__PURE__ */ jsx(Header, {
      appLogo: /* @__PURE__ */ jsx(HeaderLogo, {
        logo: /* @__PURE__ */ jsx("svg", {
          viewBox: "0 0 16 16",
          xmlns: "http://www.w3.org/2000/svg",
          "aria-hidden": "true",
          children: /* @__PURE__ */ jsx("path", {
            d: `m12.6 13.4c-1.2-1.5-2.1-3.1-2.4-5.5-2.7 3.9-4.6 
                4.2-5.7 2.4l-1.2 5.7h-2.2l3.5-14.1 1.8-.4c-.1.5-1.4 
                6.2.6 7 2 .7 4.6-8.5 4.6-8.5l2.2.4c-1.6 3.7-1.6 7.6 1.1 10.9l-2.3 2.1`
          })
        })
      }),
      breadcrumbs: /* @__PURE__ */ jsx(HeaderBreadcrumbs, {
        items: [/* @__PURE__ */ jsx(HeaderButton, {
          name: "Project A (Super Size Edition)",
          description: "YJC-2249",
          onClick: () => {
          },
          menuItems: buildMenu("Project")
        }, "project"), /* @__PURE__ */ jsx(HeaderButton, {
          name: "iModel B",
          startIcon: /* @__PURE__ */ jsx("img", {
            src: "https://itwinplatformcdn.azureedge.net/iTwinUI/stadium.png",
            style: {
              objectFit: "cover"
            }
          }),
          onClick: () => {
          }
        }, "iModel"), /* @__PURE__ */ jsx(HeaderButton, {
          name: "Version C",
          menuItems: buildMenu("Version"),
          isActive: true
        }, "version")]
      }),
      userIcon: /* @__PURE__ */ jsx(IconButton, {
        styleType: "borderless",
        children: /* @__PURE__ */ jsx(UserIcon, {
          size: "medium",
          abbreviation: "TR",
          backgroundColor: "#6AB9EC",
          image: /* @__PURE__ */ jsx("img", {
            src: "https://itwinplatformcdn.azureedge.net/iTwinUI/user-placeholder.png"
          }),
          title: "Terry Rivers"
        })
      })
    })
  });
};
__astro_tag_component__(_arrow_function$w, "@astrojs/react");

const _arrow_function$v = () => {
  const [openRowIndex, setOpenRowIndex] = React.useState(1);
  const columns = React.useMemo(() => [{
    id: "name",
    Header: "Name",
    accessor: "name"
  }, {
    Header: "Details",
    Cell: ({
      row: {
        index
      }
    }) => /* @__PURE__ */ jsx(Button, {
      onClick: () => {
        setOpenRowIndex(index);
      },
      children: "Details"
    })
  }], []);
  const data = React.useMemo(() => [...Array(3).fill(null)].map((_, index) => ({
    name: `Row${index}`
  })), []);
  return /* @__PURE__ */ jsxs(InformationPanelWrapper, {
    children: [/* @__PURE__ */ jsx(Table, {
      columns,
      data,
      emptyTableContent: "No data.",
      style: {
        minWidth: "450px"
      }
    }), /* @__PURE__ */ jsxs(InformationPanel, {
      isOpen: openRowIndex != void 0 && openRowIndex !== -1,
      children: [/* @__PURE__ */ jsx(InformationPanelHeader, {
        onClose: () => {
          setOpenRowIndex(-1);
        },
        children: /* @__PURE__ */ jsxs(Text, {
          variant: "subheading",
          children: ["Row ", openRowIndex ?? 0]
        })
      }), /* @__PURE__ */ jsx(InformationPanelBody, {
        children: /* @__PURE__ */ jsxs(InformationPanelContent, {
          displayStyle: "inline",
          children: [/* @__PURE__ */ jsx(Label, {
            htmlFor: "name-input",
            children: "File name"
          }), /* @__PURE__ */ jsx(Input, {
            size: "small",
            id: "name-input",
            value: `Row ${openRowIndex ?? 0}`,
            readOnly: true
          }), /* @__PURE__ */ jsx(Label, {
            htmlFor: "author-input",
            children: "Author"
          }), /* @__PURE__ */ jsx(Input, {
            size: "small",
            id: "author-input",
            defaultValue: "DJ Terry",
            readOnly: true
          }), /* @__PURE__ */ jsx(Label, {
            htmlFor: "year-input",
            children: "Year"
          }), /* @__PURE__ */ jsx(Input, {
            size: "small",
            id: "year-input",
            defaultValue: "2021",
            readOnly: true
          })]
        })
      })]
    })]
  });
};
__astro_tag_component__(_arrow_function$v, "@astrojs/react");

const _arrow_function$u = () => {
  return /* @__PURE__ */ jsx(Kbd, {
    children: KbdKeys.Enter
  });
};
__astro_tag_component__(_arrow_function$u, "@astrojs/react");

const _arrow_function$t = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(Input, {
      placeholder: "Basic input"
    })
  });
};
__astro_tag_component__(_arrow_function$t, "@astrojs/react");

const _arrow_function$s = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(LabeledInput, {
      label: "Input label",
      message: "Help message",
      placeholder: "Labeled input"
    })
  });
};
__astro_tag_component__(_arrow_function$s, "@astrojs/react");

const _arrow_function$r = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(LabeledSelect, {
      label: "Select label",
      message: "Help message",
      placeholder: "Labeled select",
      options: [{
        value: 1,
        label: "Item #1"
      }, {
        value: 2,
        label: "Item #2"
      }, {
        value: 3,
        label: "Item #3"
      }]
    })
  });
};
__astro_tag_component__(_arrow_function$r, "@astrojs/react");

const _arrow_function$q = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(LabeledTextarea, {
      label: "Textarea label",
      message: "Help message",
      placeholder: "Labeled textarea"
    })
  });
};
__astro_tag_component__(_arrow_function$q, "@astrojs/react");

const _arrow_function$p = () => {
  return /* @__PURE__ */ jsx(Label, {
    children: "This is label."
  });
};
__astro_tag_component__(_arrow_function$p, "@astrojs/react");

const _arrow_function$o = () => {
  return /* @__PURE__ */ jsx("div", {
    style: {
      width: "80%"
    },
    children: /* @__PURE__ */ jsx(ProgressLinear, {
      indeterminate: true
    })
  });
};
__astro_tag_component__(_arrow_function$o, "@astrojs/react");

const _arrow_function$n = () => {
  return /* @__PURE__ */ jsx("div", {
    style: {
      width: "80%",
      display: "flex",
      justifyContent: "center"
    },
    children: /* @__PURE__ */ jsx(ProgressRadial, {
      indeterminate: true
    })
  });
};
__astro_tag_component__(_arrow_function$n, "@astrojs/react");

const _arrow_function$m = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(Radio, {
      label: "Radio button"
    })
  });
};
__astro_tag_component__(_arrow_function$m, "@astrojs/react");

const _arrow_function$l = () => {
  return /* @__PURE__ */ jsxs(RadioTileGroup, {
    children: [/* @__PURE__ */ jsx(RadioTile, {
      label: "Web",
      description: "Dimensions in px",
      icon: /* @__PURE__ */ jsx(SvgNetwork, {}),
      defaultChecked: true,
      name: "OS",
      value: "Web"
    }), /* @__PURE__ */ jsx(RadioTile, {
      label: "iOS",
      description: "Dimensions in pt",
      icon: /* @__PURE__ */ jsx("svg", {
        "aria-hidden": "true",
        viewBox: "0 0 16 16",
        children: /* @__PURE__ */ jsx("path", {
          d: "m14.38732 12.46864a8.67507 8.67507 0 0 1 -.85133 1.54667 7.83909 7.83909 0 0 1 -1.096 1.33933 2.11842 2.11842 0 0 1 -1.40933.62733 3.50824 3.50824 0 0 1 -1.30133-.314 3.7014 3.7014 0 0 0 -1.40133-.31333 3.82728 3.82728 0 0 0 -1.44066.31333 3.84425 3.84425 0 0 1 -1.24467.33067 1.98968 1.98968 0 0 1 -1.44066-.644 8.203 8.203 0 0 1 -1.14667-1.38664 9.61729 9.61729 0 0 1 -1.21266-2.43466 8.99338 8.99338 0 0 1 -.50933-2.90134 5.34287 5.34287 0 0 1 .68865-2.772 4.05969 4.05969 0 0 1 1.44134-1.474 3.84792 3.84792 0 0 1 1.94933-.556 4.55944 4.55944 0 0 1 1.50733.35466 4.79788 4.79788 0 0 0 1.196.35534 7.06478 7.06478 0 0 0 1.326-.41866 4.34039 4.34039 0 0 1 1.802-.32334 3.8146 3.8146 0 0 1 2.99733 1.59533 3.37671 3.37671 0 0 0 -1.768 3.062 3.3911 3.3911 0 0 0 1.09733 2.54467 3.59839 3.59839 0 0 0 1.096.72733q-.132.386-.27933.74133zm-3.05466-12.14864a3.43565 3.43565 0 0 1 -.86533 2.23866 2.93869 2.93869 0 0 1 -2.45 1.22267 2.58687 2.58687 0 0 1 -.018-.30334 3.63848 3.63848 0 0 1 2.03667-3.11132 3.30968 3.30968 0 0 1 1.28-.36667 2.86658 2.86658 0 0 1 .01667.32z"
        })
      }),
      name: "OS",
      value: "iOS"
    }), /* @__PURE__ */ jsx(RadioTile, {
      label: "Android",
      description: "Dimensions in dp/sp",
      icon: /* @__PURE__ */ jsx("svg", {
        "aria-hidden": "true",
        viewBox: "0 0 16 16",
        children: /* @__PURE__ */ jsx("path", {
          d: "m3.28467 6.184v4.122a.97577.97577 0 1 1 -1.95134 0v-4.122a.97576.97576 0 1 1 1.95134 0zm2.58133-4.71533-.688-1.25934a.14184.14184 0 0 1 .054-.19133.13814.13814 0 0 1 .18867.05467l.696 1.27333a4.63366 4.63366 0 0 1 3.76666 0l.696-1.27333a.1368.1368 0 0 1 .18867-.05467.14184.14184 0 0 1 .054.19133l-.688 1.25934a4.03915 4.03915 0 0 1 2.218 3.546h-8.704a4.03915 4.03915 0 0 1 2.218-3.546zm3.77933 1.56266a.36337.36337 0 1 0 .36334-.36866.36621.36621 0 0 0 -.36334.36866zm-4.01733 0a.36337.36337 0 1 0 .36333-.36866.3662.3662 0 0 0 -.36333.36866zm8.06267 2.16334a.98351.98351 0 0 0 -.97534.98933v4.122a.97577.97577 0 1 0 1.95134 0v-4.122a.98365.98365 0 0 0 -.976-.98933zm-10.04267.16933v6.39733a1.05948 1.05948 0 0 0 1.052 1.06667h.69867v2.18267a.97543.97543 0 1 0 1.95066 0v-2.18267h1.30134v2.18267a.97543.97543 0 1 0 1.95066 0v-2.18267h.69867a1.05948 1.05948 0 0 0 1.052-1.06667v-6.39733z"
        })
      }),
      name: "OS",
      value: "Android"
    }), /* @__PURE__ */ jsx(RadioTile, {
      label: "Windows",
      description: "Windows phone is no longer supported",
      icon: /* @__PURE__ */ jsx(SvgWindows, {}),
      disabled: true,
      name: "OS",
      value: "Windows"
    })]
  });
};
__astro_tag_component__(_arrow_function$l, "@astrojs/react");

const _arrow_function$k = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(Select, {
      placeholder: "Select",
      options: [{
        value: 1,
        label: "Item #1"
      }, {
        value: 2,
        label: "Item #2"
      }, {
        value: 3,
        label: "Item #3"
      }]
    })
  });
};
__astro_tag_component__(_arrow_function$k, "@astrojs/react");

const _arrow_function$j = () => {
  const [option1, setOption1] = React.useState(true);
  const [option2, setOption2] = React.useState(false);
  return /* @__PURE__ */ jsx(Surface, {
    children: /* @__PURE__ */ jsxs(InputGroup, {
      label: "Toggle group",
      style: {
        padding: "12px"
      },
      children: [/* @__PURE__ */ jsx(ToggleSwitch, {
        onChange: (event) => setOption1(event.target.checked),
        checked: option1,
        label: "Toggle feature No.1",
        icon: /* @__PURE__ */ jsx(SvgCheckmark, {})
      }), /* @__PURE__ */ jsx(ToggleSwitch, {
        checked: true,
        disabled: true,
        label: "This you cannot change"
      }), /* @__PURE__ */ jsx(ToggleSwitch, {
        onChange: (event) => setOption2(event.target.checked),
        label: "Toggle feature No.2",
        checked: option2
      })]
    })
  });
};
__astro_tag_component__(_arrow_function$j, "@astrojs/react");

const _arrow_function$i = () => {
  const [activeIndex, setActiveIndex] = React.useState(0);
  return /* @__PURE__ */ jsx(SideNavigation, {
    style: {
      height: "90%"
    },
    items: [/* @__PURE__ */ jsx(SidenavButton, {
      startIcon: /* @__PURE__ */ jsx(SvgHome, {}),
      isActive: activeIndex === 0,
      onClick: () => setActiveIndex(0),
      children: "Home"
    }, 0), /* @__PURE__ */ jsx(SidenavButton, {
      startIcon: /* @__PURE__ */ jsx(SvgFlag, {}),
      isActive: activeIndex === 1,
      onClick: () => setActiveIndex(1),
      children: "Issues"
    }, 1), /* @__PURE__ */ jsx(SidenavButton, {
      startIcon: /* @__PURE__ */ jsx(SvgFolderOpened, {}),
      disabled: true,
      children: "Documents"
    }, 2)],
    secondaryItems: [/* @__PURE__ */ jsx(SidenavButton, {
      startIcon: /* @__PURE__ */ jsx(SvgSettings, {}),
      isActive: activeIndex === 3,
      onClick: () => setActiveIndex(3),
      children: "Settings"
    }, 3)]
  });
};
__astro_tag_component__(_arrow_function$i, "@astrojs/react");

const _arrow_function$h = () => {
  return /* @__PURE__ */ jsx("div", {
    style: {
      width: "80%"
    },
    children: /* @__PURE__ */ jsx(Slider, {
      values: [50],
      min: 0,
      max: 100
    })
  });
};
__astro_tag_component__(_arrow_function$h, "@astrojs/react");

const _arrow_function$g = () => {
  return /* @__PURE__ */ jsx(Surface, {
    elevation: 4,
    style: {
      width: "50%",
      height: "50%",
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    },
    children: /* @__PURE__ */ jsx("span", {
      style: {
        padding: "12px"
      },
      children: "Change the elevation property of the component to adjust the shadow level."
    })
  });
};
__astro_tag_component__(_arrow_function$g, "@astrojs/react");

const _arrow_function$f = () => {
  return /* @__PURE__ */ jsxs("div", {
    style: {
      display: "flex",
      flexDirection: "column",
      alignItems: "center"
    },
    children: [/* @__PURE__ */ jsx(Headline, {
      children: "Headline"
    }), /* @__PURE__ */ jsx(Subheading, {
      children: "Subheading"
    }), /* @__PURE__ */ jsx(Title, {
      children: "Title"
    }), /* @__PURE__ */ jsx(Leading, {
      children: "Leading"
    }), /* @__PURE__ */ jsx(Body, {
      children: "Body"
    }), /* @__PURE__ */ jsx(Small, {
      children: "Small"
    })]
  });
};
__astro_tag_component__(_arrow_function$f, "@astrojs/react");

const _arrow_function$e = () => {
  return /* @__PURE__ */ jsx(Toast, {
    id: 0,
    isVisible: true,
    type: "persisting",
    content: "Job processing completed.",
    category: "positive",
    link: {
      onClick: () => {
        alert("Link callback");
      },
      title: "View the report"
    }
  });
};
__astro_tag_component__(_arrow_function$e, "@astrojs/react");

const _arrow_function$d = () => {
  const displayPositiveToast = () => {
    toaster$1.setSettings({
      placement: "top",
      order: "descending"
    });
    toaster$1.positive("Job processing completed.", {
      hasCloseButton: true,
      link: {
        onClick: () => {
          alert("Link callback");
        },
        title: "View the report"
      },
      type: "temporary"
    });
  };
  return /* @__PURE__ */ jsx(Button, {
    styleType: "high-visibility",
    onClick: displayPositiveToast,
    children: "Click to open toast"
  });
};
__astro_tag_component__(_arrow_function$d, "@astrojs/react");

const _arrow_function$c = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(ToggleSwitch, {
      onChange: () => {
      },
      label: "Toggle feature No.1",
      icon: /* @__PURE__ */ jsx(SvgCheckmark, {})
    })
  });
};
__astro_tag_component__(_arrow_function$c, "@astrojs/react");

const _arrow_function$b = () => {
  const generateItem = React.useCallback((index, parentRow = "", depth = 0) => {
    const keyValue = parentRow ? `${parentRow}.${index + 1}` : `${index + 1}`;
    const rating = Math.round(Math.random() * 5);
    return {
      product: `Product ${keyValue}`,
      price: (index % 10 + 1) * 15,
      quantity: (index % 10 + 1) * 150,
      rating,
      status: rating >= 4 ? "positive" : rating === 3 ? "warning" : "negative",
      subRows: depth < 1 ? Array(Math.round(index % 2)).fill(null).map((_, index2) => generateItem(index2, keyValue, depth + 1)) : []
    };
  }, []);
  const data = React.useMemo(() => Array(3).fill(null).map((_, index) => generateItem(index)), [generateItem]);
  const columns = React.useMemo(() => [{
    id: "product",
    Header: "Product",
    accessor: "product"
  }, {
    id: "price",
    Header: "Price",
    accessor: "price",
    Cell: (props) => {
      return /* @__PURE__ */ jsxs(Fragment$1, {
        children: ["$", props.value]
      });
    }
  }, {
    id: "quantity",
    Header: "Quantity",
    accessor: "quantity"
  }, {
    id: "rating",
    Header: "Rating",
    accessor: "rating",
    cellRenderer: (props) => {
      return /* @__PURE__ */ jsxs(DefaultCell, {
        ...props,
        status: props.cellProps.row.original.status,
        children: [props.cellProps.row.original.rating, "/5"]
      });
    }
  }], []);
  const rowProps = React.useCallback((row) => {
    return {
      status: row.original.status
    };
  }, []);
  return /* @__PURE__ */ jsx("div", {
    style: {
      width: "90%"
    },
    children: /* @__PURE__ */ jsx(Table, {
      columns,
      emptyTableContent: "No data.",
      data,
      style: {
        height: "100%"
      },
      rowProps,
      density: "condensed"
    })
  });
};
__astro_tag_component__(_arrow_function$b, "@astrojs/react");

const _arrow_function$a = () => {
  const [index, setIndex] = React.useState(0);
  const getContent = () => {
    switch (index) {
      case 0:
        return "Bentley Systems, Incorporated, is an American-based software development company that develops, manufactures, licenses, sells and supports computer software and services for the design, construction, and operation of infrastructure. The company's software serves the building, plant, civil, and geospatial markets in the areas of architecture, engineering, construction (AEC) and operations. Their software products are used to design, engineer, build, and operate large constructed assets such as roadways, railways, bridges, buildings, industrial plants, power plants, and utility networks. The company re-invests 20% of their revenues in research and development.";
      case 1:
        return "Bentley Systems is headquartered in Exton, Pennsylvania, United States, but has development, sales and other departments in over 50 countries. The company had revenues of $700 million in 2018.";
      default:
        return "Keith A. Bentley and Barry J. Bentley founded Bentley Systems in 1984. They introduced the commercial version of PseudoStation in 1985, which allowed users of Intergraphs VAX systems to use low-cost graphics terminals to view and modify the designs on their Intergraph IGDS (Interactive Graphics Design System) installations.";
    }
  };
  return /* @__PURE__ */ jsx("div", {
    style: {
      width: "70%"
    },
    children: /* @__PURE__ */ jsx(HorizontalTabs, {
      labels: [/* @__PURE__ */ jsx(Tab, {
        label: "Item1"
      }, 1), /* @__PURE__ */ jsx(Tab, {
        label: "Item2"
      }, 2), /* @__PURE__ */ jsx(Tab, {
        label: "Item3"
      }, 3)],
      onTabSelected: setIndex,
      children: getContent()
    })
  });
};
__astro_tag_component__(_arrow_function$a, "@astrojs/react");

const _arrow_function$9 = () => {
  return /* @__PURE__ */ jsx(Text, {
    variant: "body",
    children: "This is text"
  });
};
__astro_tag_component__(_arrow_function$9, "@astrojs/react");

const _arrow_function$8 = () => {
  return /* @__PURE__ */ jsxs(TagContainer, {
    children: [/* @__PURE__ */ jsx(Tag, {
      onRemove: () => {
      },
      children: "Tag 1"
    }), /* @__PURE__ */ jsx(Tag, {
      onRemove: () => {
      },
      children: "Tag 2"
    }), /* @__PURE__ */ jsx(Tag, {
      onRemove: () => {
      },
      children: "Tag 3"
    })]
  });
};
__astro_tag_component__(_arrow_function$8, "@astrojs/react");

const _arrow_function$7 = () => {
  return /* @__PURE__ */ jsx("div", {
    children: /* @__PURE__ */ jsx(Textarea, {
      placeholder: "This is a textarea"
    })
  });
};
__astro_tag_component__(_arrow_function$7, "@astrojs/react");

const _arrow_function$6 = () => {
  return /* @__PURE__ */ jsx(Tile, {
    name: "Tile name",
    description: "Tile description that takes upto 3 lines",
    metadata: /* @__PURE__ */ jsxs(TagContainer, {
      children: [/* @__PURE__ */ jsx(Tag, {
        variant: "basic",
        children: "Tag 1"
      }), /* @__PURE__ */ jsx(Tag, {
        variant: "basic",
        children: "Tag 2"
      })]
    }),
    thumbnail: /* @__PURE__ */ jsx(SvgPlaceholder, {}),
    moreOptions: [/* @__PURE__ */ jsx(MenuItem, {
      children: "Item 1"
    }), /* @__PURE__ */ jsx(MenuItem, {
      children: "Item 2"
    })],
    leftIcon: /* @__PURE__ */ jsx(IconButton, {
      styleType: "borderless",
      children: /* @__PURE__ */ jsx(SvgInfo, {})
    }),
    rightIcon: /* @__PURE__ */ jsx(IconButton, {
      styleType: "borderless",
      children: /* @__PURE__ */ jsx(SvgStar, {})
    }),
    isSelected: true,
    isNew: false
  });
};
__astro_tag_component__(_arrow_function$6, "@astrojs/react");

const _arrow_function$5 = () => {
  return /* @__PURE__ */ jsx(Tooltip, {
    placement: "top",
    content: "I am a tooltip",
    children: /* @__PURE__ */ jsx("span", {
      tabIndex: 0,
      children: "Please, try to hover me!"
    })
  });
};
__astro_tag_component__(_arrow_function$5, "@astrojs/react");

const _arrow_function$4 = () => {
  return /* @__PURE__ */ jsx("div", {
    className: "iui-tooltip",
    role: "tooltip",
    children: "I am a tooltip"
  });
};
__astro_tag_component__(_arrow_function$4, "@astrojs/react");

const _arrow_function$3 = () => {
  const [expandedNodes, setExpandedNodes] = React.useState({
    "Node-2": true,
    "Node-2-1": true,
    "Node-3": true
  });
  const onNodeExpanded = React.useCallback((nodeId, isExpanded) => {
    if (isExpanded) {
      setExpandedNodes((oldExpanded) => ({
        ...oldExpanded,
        [nodeId]: true
      }));
    } else {
      setExpandedNodes((oldExpanded) => ({
        ...oldExpanded,
        [nodeId]: false
      }));
    }
  }, []);
  const generateItem = React.useCallback((index, parentNode = "", depth = 0) => {
    const keyValue = parentNode ? `${parentNode}-${index}` : `${index}`;
    return {
      id: `Node-${keyValue}`,
      label: `Node ${keyValue}`,
      sublabel: `Sublabel for Node ${keyValue}`,
      subItems: depth < 10 ? Array(Math.round(index % 5)).fill(null).map((_, index2) => generateItem(index2, keyValue, depth + 1)) : []
    };
  }, []);
  const data = React.useMemo(() => Array(3).fill(null).map((_, index) => generateItem(index)), [generateItem]);
  const getNode = React.useCallback((node) => {
    return {
      subNodes: node.subItems,
      nodeId: node.id,
      node,
      isExpanded: expandedNodes[node.id],
      hasSubNodes: node.subItems.length > 0
    };
  }, [expandedNodes]);
  return /* @__PURE__ */ jsx(Tree, {
    data,
    getNode,
    nodeRenderer: React.useCallback(({
      node,
      ...rest
    }) => /* @__PURE__ */ jsx(TreeNode, {
      label: node.label,
      sublabel: node.sublabel,
      onExpanded: onNodeExpanded,
      icon: /* @__PURE__ */ jsx(SvgPlaceholder, {}),
      ...rest
    }), [onNodeExpanded])
  });
};
__astro_tag_component__(_arrow_function$3, "@astrojs/react");

const _arrow_function$2 = () => {
  const [currentStep, setCurrentStep] = React.useState(2);
  const steps = [{
    name: "First Step"
  }, {
    name: "Completed Step"
  }, {
    name: "Current Step"
  }, {
    name: "Next Step"
  }, {
    name: "Last Step"
  }];
  const onStepClick = (index) => {
    setCurrentStep(index);
  };
  const previousStepHandler = () => {
    if (currentStep !== 0)
      setCurrentStep(currentStep - 1);
  };
  const nextStepHandler = () => {
    if (currentStep !== steps.length)
      setCurrentStep(currentStep + 1);
  };
  return /* @__PURE__ */ jsxs("div", {
    style: {
      width: "90%"
    },
    children: [/* @__PURE__ */ jsx(Stepper, {
      currentStep,
      steps,
      onStepClick
    }), /* @__PURE__ */ jsxs("div", {
      style: {
        display: "flex",
        gap: "8px",
        justifyContent: "center",
        marginTop: "24px"
      },
      children: [/* @__PURE__ */ jsx(Button, {
        size: "small",
        onClick: previousStepHandler,
        children: "Previous"
      }), /* @__PURE__ */ jsx(Button, {
        styleType: "cta",
        size: "small",
        onClick: nextStepHandler,
        children: "Next"
      })]
    })]
  });
};
__astro_tag_component__(_arrow_function$2, "@astrojs/react");

const AllExamples = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	AlertMainExample: _arrow_function$X,
	AvatarMainExample: _arrow_function$W,
	AnchorMainExample: _arrow_function$V,
	BadgeMainExample: _arrow_function$U,
	BlockquoteMainExample: _arrow_function$T,
	ButtonMainExample: _arrow_function$S,
	IconButtonMainExample: _arrow_function$R,
	DropdownButtonMainExample: _arrow_function$Q,
	ButtonGroupMainExample: _arrow_function$P,
	SplitButtonMainExample: _arrow_function$O,
	IdeasButtonMainExample: _arrow_function$N,
	BreadcrumbsMainExample: _arrow_function$M,
	CheckboxMainExample: _arrow_function$L,
	CarouselMainExample: _arrow_function$K,
	ColorPickerMainExample: _arrow_function$J,
	ComboBoxMainExample: _arrow_function$I,
	CodeMainExample: _arrow_function$H,
	DatePickerMainExample: _arrow_function$G,
	DialogStaticExample: _arrow_function$F,
	DialogMainExample: _arrow_function$E,
	DropdownMenuMainExample: _arrow_function$D,
	DropdownMenuStaticExample: _arrow_function$C,
	NonIdealStateMainExample: _arrow_function$B,
	ExpandableBlockMainExample: _arrow_function$A,
	FieldsetMainExample: _arrow_function$z,
	FileUploadMainExample: _arrow_function$y,
	FooterMainExample: _arrow_function$x,
	HeaderMainExample: _arrow_function$w,
	InformationPanelMainExample: _arrow_function$v,
	KeyboardMainExample: _arrow_function$u,
	InputMainExample: _arrow_function$t,
	LabeledInputMainExample: _arrow_function$s,
	LabeledSelectMainExample: _arrow_function$r,
	LabeledTextareaMainExample: _arrow_function$q,
	LabelMainExample: _arrow_function$p,
	ProgressLinearMainExample: _arrow_function$o,
	ProgressRadialMainExample: _arrow_function$n,
	RadioMainExample: _arrow_function$m,
	RadioTileMainExample: _arrow_function$l,
	SelectMainExample: _arrow_function$k,
	InputGroupMainExample: _arrow_function$j,
	SideNavigationMainExample: _arrow_function$i,
	SliderMainExample: _arrow_function$h,
	SurfaceMainExample: _arrow_function$g,
	SubheadingMainExample: _arrow_function$f,
	ToastStaticExample: _arrow_function$e,
	ToastMainExample: _arrow_function$d,
	ToggleSwitchMainExample: _arrow_function$c,
	TableMainExample: _arrow_function$b,
	TabsMainExample: _arrow_function$a,
	TextMainExample: _arrow_function$9,
	TagMainExample: _arrow_function$8,
	TextareaMainExample: _arrow_function$7,
	TileMainExample: _arrow_function$6,
	TooltipMainExample: _arrow_function$5,
	TooltipStaticExample: _arrow_function$4,
	TreeMainExample: _arrow_function$3,
	StepperMainExample: _arrow_function$2
}, Symbol.toStringTag, { value: 'Module' }));

var g=class{constructor(e,t,n){this.type=e;this.handleMessage=t;this.protocol=n;this._disposeMessageListener=this.protocol.channelListen(async r=>{if(r.type===this.getTypeId()&&r.method){let i=r;try{let l=await this.handleMessage(i),o={type:this.getTypeId(),msgId:i.msgId,result:l};this.protocol.dispatch(o);}catch(l){let o={type:this.getTypeId(),msgId:i.msgId,error:{message:l.message}};this.protocol.dispatch(o);}}});}getTypeId(){return `protocol-${this.type}`}dispose(){this._disposeMessageListener();}};var m$1=class{constructor(e,t){this.globalListeners={};this.globalListenersCount=0;this.channelListeners={};this.channelListenersCount=0;this.channelId=Math.floor(Math.random()*1e6);this.frameWindow=e.contentWindow,this.origin=t,this.globalListeners=[],this.channelListeners=[],this.eventListener=this.eventListener.bind(this),typeof window!="undefined"&&window.addEventListener("message",this.eventListener);}cleanup(){window.removeEventListener("message",this.eventListener),this.globalListeners={},this.channelListeners={},this.globalListenersCount=0,this.channelListenersCount=0;}register(){!this.frameWindow||this.frameWindow.postMessage({type:"register-frame",origin:document.location.origin,id:this.channelId},this.origin);}dispatch(e){!this.frameWindow||this.frameWindow.postMessage({$id:this.channelId,codesandbox:!0,...e},this.origin);}globalListen(e){if(typeof e!="function")return ()=>{};let t=this.globalListenersCount;return this.globalListeners[t]=e,this.globalListenersCount++,()=>{delete this.globalListeners[t];}}channelListen(e){if(typeof e!="function")return ()=>{};let t=this.channelListenersCount;return this.channelListeners[t]=e,this.channelListenersCount++,()=>{delete this.channelListeners[t];}}eventListener(e){if(e.source!==this.frameWindow)return;let t=e.data;!t.codesandbox||(Object.values(this.globalListeners).forEach(n=>n(t)),t.$id===this.channelId&&Object.values(this.channelListeners).forEach(n=>n(t)));}};var f='[sandpack-client]: "dependencies" was not specified - provide either a package.json or a "dependencies" value',x$1='[sandpack-client]: "entry" was not specified - provide either a package.json with the "main" field or an "entry" value';function b(s={},e={},t="/index.js"){return JSON.stringify({name:"sandpack-project",main:t,dependencies:s,devDependencies:e},null,2)}function y(s,e,t,n){var l,o;let r=w(s),i=r["/package.json"];if(!i){if(!e)throw new Error(f);if(!n)throw new Error(x$1);return r["/package.json"]={code:b(e,t,n)},r}if(i){let a=JSON.parse(i.code);if(!e&&!a.dependencies)throw new Error(f);e&&(a.dependencies={...(l=a.dependencies)!=null?l:{},...e!=null?e:{}}),t&&(a.devDependencies={...(o=a.devDependencies)!=null?o:{},...t!=null?t:{}}),n&&(a.main=n),r["/package.json"]={code:JSON.stringify(a,null,2)};}return r}function S(s){if(s.title==="SyntaxError"){let{title:i,path:l,message:o,line:a,column:d}=s;return {title:i,path:l,message:o,line:a,column:d}}let e=M(s.payload.frames);if(!e)return {message:s.message};let t=E(e),n=v(e);return {message:R(e._originalFileName,s.message,n,t),title:s.title,path:e._originalFileName,line:e._originalLineNumber,column:e._originalColumnNumber}}function M(s){if(!!s)return s.find(e=>!!e._originalFileName)}function v(s){return s?` (${s._originalLineNumber}:${s._originalColumnNumber})`:""}function E(s){let t=s._originalScriptCode[s._originalScriptCode.length-1].lineNumber.toString().length,n=2,r=3,i=n+t+r+s._originalColumnNumber;return s._originalScriptCode.reduce((l,o)=>{let a=o.highlight?">":" ",d=o.lineNumber.toString().length===t?`${o.lineNumber}`:` ${o.lineNumber}`,u=o.highlight?`
`+" ".repeat(i)+"^":"";return l+`
`+a+" "+d+" | "+o.content+u},"")}function R(s,e,t,n){return `${s}: ${e}${t}
${n}`}var w=s=>{if(typeof s=="string")return s.startsWith("/")?s:`/${s}`;if(Array.isArray(s))return s.map(e=>e.startsWith("/")?e:`/${e}`);if(typeof s=="object"&&s!==null)return Object.entries(s).reduce((e,[t,n])=>{let r=t.startsWith("/")?t:`/${t}`;return e[r]=n,e},{})};var k=`https://${"1.12.1".replace(/\./g,"-")}-sandpack.codesandbox.io/`,I=class{constructor(e,t,n={}){this.getTranspilerContext=()=>new Promise(e=>{let t=this.listen(n=>{n.type==="transpiler-context"&&(e(n.data),t());});this.dispatch({type:"get-transpiler-context"});});if(this.options=n,this.sandboxInfo=t,this.bundlerURL=n.bundlerURL||k,this.bundlerState=void 0,this.errors=[],this.status="initializing",typeof e=="string"){this.selector=e;let r=document.querySelector(e);if(!r)throw new Error(`[sandpack-client]: the element '${e}' was not found`);this.element=r,this.iframe=document.createElement("iframe"),this.initializeElement();}else this.element=e,this.iframe=e;this.iframe.getAttribute("sandbox")||this.iframe.setAttribute("sandbox","allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"),this.setLocationURLIntoIFrame(),this.iframeProtocol=new m$1(this.iframe,this.bundlerURL),this.unsubscribeGlobalListener=this.iframeProtocol.globalListen(r=>{r.type!=="initialized"||!this.iframe.contentWindow||(this.iframeProtocol.register(),this.options.fileResolver&&(this.fileResolverProtocol=new g("fs",async i=>{if(i.method==="isFile")return this.options.fileResolver.isFile(i.params[0]);if(i.method==="readFile")return this.options.fileResolver.readFile(i.params[0]);throw new Error("Method not supported")},this.iframeProtocol)),this.updatePreview(this.sandboxInfo,!0));}),this.unsubscribeChannelListener=this.iframeProtocol.channelListen(r=>{switch(r.type){case"start":{this.errors=[];break}case"status":{this.status=r.status;break}case"action":{r.action==="show-error"&&(this.errors=[...this.errors,S(r)]);break}case"state":{this.bundlerState=r.state;break}}});}setLocationURLIntoIFrame(){var t;let e=this.options.startRoute?new URL(this.options.startRoute,this.bundlerURL).toString():this.bundlerURL;(t=this.iframe.contentWindow)==null||t.location.replace(e);}cleanup(){this.unsubscribeChannelListener(),this.unsubscribeGlobalListener(),this.iframeProtocol.cleanup();}updateOptions(e){rt(this.options,e)||(this.options=e,this.updatePreview());}updatePreview(e=this.sandboxInfo,t){var o,a,d,u;this.sandboxInfo={...this.sandboxInfo,...e};let n=this.getFiles(),r=Object.keys(n).reduce((p,c)=>({...p,[c]:{code:n[c].code,path:c}}),{}),i=JSON.parse(b(this.sandboxInfo.dependencies,this.sandboxInfo.devDependencies,this.sandboxInfo.entry));try{i=JSON.parse(n["/package.json"].code);}catch(p){console.error("[sandpack-client]: could not parse package.json file: "+p.message);}let l=Object.keys(n).reduce((p,c)=>({...p,[c]:{content:n[c].code,path:c}}),{});this.dispatch({type:"compile",codesandbox:!0,version:3,isInitializationCompile:t,modules:r,reactDevTools:this.options.reactDevTools,externalResources:this.options.externalResources||[],hasFileResolver:Boolean(this.options.fileResolver),disableDependencyPreprocessing:this.sandboxInfo.disableDependencyPreprocessing,template:this.sandboxInfo.template||getTemplate(i,l),showOpenInCodeSandbox:(o=this.options.showOpenInCodeSandbox)!=null?o:!0,showErrorScreen:(a=this.options.showErrorScreen)!=null?a:!0,showLoadingScreen:(d=this.options.showLoadingScreen)!=null?d:!0,skipEval:this.options.skipEval||!1,clearConsoleDisabled:!this.options.clearConsoleOnFirstCompile,logLevel:(u=this.options.logLevel)!=null?u:h$1.Info,customNpmRegistries:this.options.customNpmRegistries});}dispatch(e){e.type==="refresh"&&this.setLocationURLIntoIFrame(),this.iframeProtocol.dispatch(e);}listen(e){return this.iframeProtocol.channelListen(e)}getCodeSandboxURL(){let e=this.getFiles(),t=Object.keys(e).reduce((n,r)=>({...n,[r.replace("/","")]:{content:e[r].code,isBinary:!1}}),{});return fetch("https://codesandbox.io/api/v1/sandboxes/define?json=1",{method:"POST",body:JSON.stringify({files:t}),headers:{Accept:"application/json","Content-Type":"application/json"}}).then(n=>n.json()).then(n=>({sandboxId:n.sandbox_id,editorUrl:`https://codesandbox.io/s/${n.sandbox_id}`,embedUrl:`https://codesandbox.io/embed/${n.sandbox_id}`}))}getFiles(){let{sandboxInfo:e}=this;return e.files["/package.json"]===void 0?y(e.files,e.dependencies,e.devDependencies,e.entry):this.sandboxInfo.files}initializeElement(){if(this.iframe.style.border="0",this.iframe.style.width=this.options.width||"100%",this.iframe.style.height=this.options.height||"100%",this.iframe.style.overflow="hidden",!this.element.parentNode)throw new Error("[sandpack-client]: the given iframe does not have a parent.");this.element.parentNode.replaceChild(this.iframe,this.element);}};var h$1;(function(i){i[i.None=0]="None",i[i.Error=10]="Error",i[i.Warning=20]="Warning",i[i.Info=30]="Info",i[i.Debug=40]="Debug";})(h$1||(h$1={}));

var Q=e=>createElement("svg",{fill:"currentColor",height:"16",viewBox:"0 0 16 16",width:"16",xmlns:"http://www.w3.org/2000/svg",...e}),Ke=()=>createElement(Q,null,createElement("title",null,"Run sandbox"),createElement("path",{d:"M11.0792 8.1078C11.2793 8.25007 11.27 8.55012 11.0616 8.67981L6.02535 11.8135C5.79638 11.956 5.5 11.7913 5.5 11.5216L5.5 8.40703L5.5 4.80661C5.5 4.52735 5.81537 4.36463 6.04296 4.52647L11.0792 8.1078Z"})),Lo=()=>createElement(Q,null,createElement("title",null,"Click to go back"),createElement("path",{d:"M9.64645 12.3536C9.84171 12.5488 10.1583 12.5488 10.3536 12.3536C10.5488 12.1583 10.5488 11.8417 10.3536 11.6464L9.64645 12.3536ZM10.3536 4.35355C10.5488 4.15829 10.5488 3.84171 10.3536 3.64644C10.1583 3.45118 9.84171 3.45118 9.64645 3.64644L10.3536 4.35355ZM6.07072 7.92929L5.71716 7.57573L6.07072 7.92929ZM10.3536 11.6464L6.42427 7.71716L5.71716 8.42426L9.64645 12.3536L10.3536 11.6464ZM6.42427 8.28284L10.3536 4.35355L9.64645 3.64644L5.71716 7.57573L6.42427 8.28284ZM6.42427 7.71716C6.58048 7.87337 6.58048 8.12663 6.42427 8.28284L5.71716 7.57573C5.48285 7.81005 5.48285 8.18995 5.71716 8.42426L6.42427 7.71716Z"})),wo=()=>createElement(Q,null,createElement("title",null,"Click to go forward"),createElement("path",{d:"M6.35355 3.64645C6.15829 3.45118 5.84171 3.45118 5.64645 3.64645C5.45118 3.84171 5.45118 4.15829 5.64645 4.35355L6.35355 3.64645ZM5.64645 11.6464C5.45118 11.8417 5.45118 12.1583 5.64645 12.3536C5.84171 12.5488 6.15829 12.5488 6.35355 12.3536L5.64645 11.6464ZM9.92929 8.07071L10.2828 8.42426L9.92929 8.07071ZM5.64645 4.35355L9.57574 8.28284L10.2828 7.57574L6.35355 3.64645L5.64645 4.35355ZM9.57574 7.71716L5.64645 11.6464L6.35355 12.3536L10.2828 8.42426L9.57574 7.71716ZM9.57574 8.28284C9.41952 8.12663 9.41953 7.87337 9.57574 7.71716L10.2828 8.42426C10.5172 8.18995 10.5172 7.81005 10.2828 7.57574L9.57574 8.28284Z"})),Qe=()=>createElement(Q,null,createElement("title",null,"Refresh preview"),createElement("path",{clipRule:"evenodd",d:"M3.83325 7.99992C3.83325 5.69867 5.69853 3.83325 7.99934 3.83325C9.81246 3.83325 11.3563 4.99195 11.9285 6.61097C11.9396 6.6425 11.9536 6.67221 11.97 6.69992H8.80005C8.52391 6.69992 8.30005 6.92378 8.30005 7.19992C8.30005 7.47606 8.52391 7.69992 8.80005 7.69992H12.5667C12.8981 7.69992 13.1667 7.43129 13.1667 7.09992V3.33325C13.1667 3.05711 12.9429 2.83325 12.6667 2.83325C12.3906 2.83325 12.1667 3.05711 12.1667 3.33325V4.94608C11.2268 3.66522 9.7106 2.83325 7.99934 2.83325C5.14613 2.83325 2.83325 5.14651 2.83325 7.99992C2.83325 10.8533 5.14613 13.1666 7.99934 13.1666C9.91218 13.1666 11.5815 12.1266 12.474 10.5836C12.6123 10.3446 12.5306 10.0387 12.2915 9.90044C12.0525 9.76218 11.7466 9.84387 11.6084 10.0829C10.8873 11.3296 9.54072 12.1666 7.99934 12.1666C5.69853 12.1666 3.83325 10.3012 3.83325 7.99992Z",fillRule:"evenodd"})),Fo=()=>createElement(Q,{fill:"none",stroke:"currentColor"},createElement("title",null,"Clean"),createElement("circle",{cx:"7.99998",cy:"8.00004",r:"4.66667",strokeLinecap:"round"}),createElement("path",{d:"M4.66669 4.66663L11.3334 11.3333"})),Ao=()=>createElement(Q,{fill:"none",stroke:"currentColor"},createElement("title",null,"Open on CodeSandbox"),createElement("path",{d:"M6.66665 3.33337H4.33331C3.78103 3.33337 3.33331 3.78109 3.33331 4.33337V11.6667C3.33331 12.219 3.78103 12.6667 4.33331 12.6667H11.6666C12.2189 12.6667 12.6666 12.219 12.6666 11.6667V9.33337",strokeLinecap:"round"}),createElement("path",{d:"M10 3.33337H12.5667C12.6219 3.33337 12.6667 3.37815 12.6667 3.43337V6.00004",strokeLinecap:"round"}),createElement("path",{d:"M7.33331 8.66668L12.5333 3.46667",strokeLinecap:"round"})),Po=()=>createElement(Q,null,createElement("title",null,"Directory"),createElement("path",{d:"M12.5526 12.6667H3.66675C3.2922 12.6667 2.96575 12.4608 2.79442 12.156L3.81072 8.0908C3.92201 7.64563 4.32199 7.33333 4.78086 7.33333H13.386C14.0365 7.33333 14.5139 7.94472 14.3561 8.57587L13.5228 11.9092C13.4115 12.3544 13.0115 12.6667 12.5526 12.6667Z",fill:"currentColor"}),createElement("path",{d:"M13.3334 6.63333V6.33333C13.3334 5.78105 12.8857 5.33333 12.3334 5.33333H8.30286C8.10543 5.33333 7.91242 5.2749 7.74816 5.16538L6.25201 4.16795C6.08774 4.05844 5.89473 4 5.69731 4H3.66675C3.11446 4 2.66675 4.44772 2.66675 5L2.66675 11.6667C2.66675 12.219 3.11446 12.6667 3.66675 12.6667H12.5526C13.0115 12.6667 13.4115 12.3544 13.5228 11.9092L14.3561 8.57587C14.5139 7.94472 14.0365 7.33333 13.386 7.33333H4.78086C4.32199 7.33333 3.92201 7.64563 3.81072 8.0908L2.75008 12.3333",fill:"none",stroke:"currentColor",strokeLinecap:"round"})),Io=()=>createElement(Q,null,createElement("title",null,"Directory"),createElement("path",{d:"M12.3334 12.6667H3.66675C3.11446 12.6667 2.66675 12.219 2.66675 11.6667V5C2.66675 4.44772 3.11446 4 3.66675 4H5.69731C5.89473 4 6.08774 4.05844 6.25201 4.16795L7.74816 5.16538C7.91242 5.2749 8.10543 5.33333 8.30286 5.33333H12.3334C12.8857 5.33333 13.3334 5.78105 13.3334 6.33333V11.6667C13.3334 12.219 12.8857 12.6667 12.3334 12.6667Z",fill:"currentColor",stroke:"currentColor",strokeLinecap:"round"})),Oo=()=>createElement(Q,{fill:"currentColor"},createElement("title",null,"File"),createElement("path",{clipRule:"evenodd",d:"M4.5 4.33325C4.5 4.05711 4.72386 3.83325 5 3.83325H8.16675V6.56659C8.16675 6.89795 8.43538 7.16658 8.76675 7.16658H11.5V12.3333C11.5 12.6094 11.2761 12.8333 11 12.8333H5C4.72386 12.8333 4.5 12.6094 4.5 12.3333V4.33325ZM12.5 6.67568C12.5001 6.67265 12.5001 6.66962 12.5001 6.66658C12.5001 6.66355 12.5001 6.66052 12.5 6.65749V6.41413C12.5 6.01631 12.342 5.63478 12.0607 5.35347L9.97978 3.27259C9.69848 2.99129 9.31694 2.83325 8.91912 2.83325H8.66675H5C4.17157 2.83325 3.5 3.50483 3.5 4.33325V12.3333C3.5 13.1617 4.17157 13.8333 5 13.8333H11C11.8284 13.8333 12.5 13.1617 12.5 12.3333V6.67568ZM9.16675 3.89888C9.20518 3.92078 9.24085 3.94787 9.27267 3.9797L11.3536 6.06058C11.3854 6.09243 11.4125 6.12813 11.4344 6.16658H9.16675V3.89888Z",fillRule:"evenodd"})),Do=()=>createElement(Q,{stroke:"currentColor"},createElement("title",null,"Close file"),createElement("path",{d:"M12 4L4 12",strokeLinecap:"round"}),createElement("path",{d:"M4 4L12 12",strokeLinecap:"round"})),Se=()=>createElement(Q,null,createElement("title",null,"Open browser console"),createElement("path",{d:"M5.65871 3.62037C5.44905 3.44066 5.1334 3.46494 4.95368 3.6746C4.77397 3.88427 4.79825 4.19992 5.00792 4.37963L5.65871 3.62037ZM5.00792 11.6204C4.79825 11.8001 4.77397 12.1157 4.95368 12.3254C5.1334 12.5351 5.44905 12.5593 5.65871 12.3796L5.00792 11.6204ZM9.9114 7.92407L10.2368 7.54445L9.9114 7.92407ZM5.00792 4.37963L9.586 8.3037L10.2368 7.54445L5.65871 3.62037L5.00792 4.37963ZM9.586 7.6963L5.00792 11.6204L5.65871 12.3796L10.2368 8.45555L9.586 7.6963ZM9.586 8.3037C9.39976 8.14407 9.39976 7.85594 9.586 7.6963L10.2368 8.45555C10.5162 8.2161 10.5162 7.7839 10.2368 7.54445L9.586 8.3037Z"}),createElement("path",{d:"M10 11.5C9.72386 11.5 9.5 11.7239 9.5 12C9.5 12.2761 9.72386 12.5 10 12.5V11.5ZM14.6667 12.5C14.9428 12.5 15.1667 12.2761 15.1667 12C15.1667 11.7239 14.9428 11.5 14.6667 11.5V12.5ZM10 12.5H14.6667V11.5H10V12.5Z"}));var ce={colors:{surface1:"#ffffff",surface2:"#EFEFEF",surface3:"#F3F3F3",disabled:"#C5C5C5",base:"#323232",clickable:"#808080",hover:"#4D4D4D",accent:"#3973E0",error:"#EA3323",errorSurface:"#FCF1F0",warning:"#6A4516",warningSurface:"#FEF2C0"},syntax:{plain:"#151515",comment:{color:"#999",fontStyle:"italic"},keyword:"#7C5AE3",tag:"#0971F1",punctuation:"#3B3B3B",definition:"#85A600",property:"#3B3B3B",static:"#3B3B3B",string:"#2E6BD0"},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}},et={colors:{surface1:"#151515",surface2:"#252525",surface3:"#2F2F2F",disabled:"#4D4D4D",base:"#808080",clickable:"#999999",hover:"#C5C5C5",accent:"#E5E5E5",error:"#FFB4A6",errorSurface:"#690000",warning:"#E7C400",warningSurface:"#3A3000"},syntax:{plain:"#FFFFFF",comment:{color:"#757575",fontStyle:"italic"},keyword:"#77B7D7",tag:"#DFAB5C",punctuation:"#ffffff",definition:"#86D9CA",property:"#77B7D7",static:"#C64640",string:"#977CDC"},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}},Bo,Ho={light:ce,dark:et,auto:typeof window!="undefined"&&((Bo=window==null?void 0:window.matchMedia)==null?void 0:Bo.call(window,"(prefers-color-scheme: dark)").matches)?et:ce};var l=(...e)=>e.filter(Boolean).join(" ");var ve=e=>{let t=e.lastIndexOf("/");return e.slice(t+1)},_o=(e,t)=>{let o=(e[0]==="/"?e.slice(1):e).split("/"),s=[];if(o.length===1)s.unshift(o[0]);else for(let r=0;r<t.length;r++){let n=t[r].split("/");for(let c=1;c<=o.length;c++){let a=o[o.length-c],p=n[n.length-c];if(s.length<c&&s.unshift(a),a!==p)break}}return s.length<o.length&&s.unshift(".."),s.join("/")};var jo=e=>{let t=0,o=0,s=0;if(e.startsWith("#")){if(e.length<7)return !0;t=parseInt(e.substr(1,2),16),o=parseInt(e.substr(3,2),16),s=parseInt(e.substr(5,2),16);}else {let n=e.replace("rgb(","").replace("rgba(","").replace(")","").split(",");if(n.length<3)return !0;t=parseInt(n[0],10),o=parseInt(n[1],10),s=parseInt(n[2],10);}return (t*299+o*587+s*114)/1e3<128},Ae=()=>Math.floor(Math.random()*1e4).toString();var Pe=()=>"",It=()=>Pe,Uo=Object.getOwnPropertyDescriptors({toString:Pe});Object.defineProperties(Pe,Uo);Object.defineProperties(It,Uo);var zo={createTheme:Pe,css:It,getCssText:Pe,keyframes:It};var h="sp",pr=()=>typeof process!="undefined"?process.env.SANDPACK_BARE_COMPONENTS:!1,{createTheme:Vo,css:m,getCssText:dr,keyframes:tt}=pr()?zo:createStitches({prefix:h}),mr={space:new Array(11).fill(" ").reduce((e,t,o)=>({...e,[o+1]:`${(o+1)*4}px`}),{}),border:{radius:"4px"},layout:{height:"300px",headerHeight:"40px"},transitions:{default:"150ms ease"},zIndices:{base:"1",overlay:"2",top:"3"}},Xo=e=>{let o=Object.entries(e.syntax).reduce((s,[r,n])=>{let c={[`color-${r}`]:n};return typeof n=="object"&&(c=Object.entries(n).reduce((a,[p,d])=>({...a,[`${p}-${r}`]:d}),{})),{...s,...c}},{});return {...mr,colors:e.colors,font:e.font,syntax:o}},Wo=(e="light")=>{var d,u,f,b,g;let t="default";if(typeof e=="string"){let y=Ho[e];if(!y)throw new Error(`[sandpack-react]: invalid theme '${e}' provided.`);return {theme:y,id:e,mode:"light"}}let o=jo((u=(d=e==null?void 0:e.colors)==null?void 0:d.surface1)!=null?u:ce.colors.surface1)?"dark":"light",s=o==="dark"?et:ce,r={...s.colors,...(f=e==null?void 0:e.colors)!=null?f:{}},n={...s.syntax,...(b=e==null?void 0:e.syntax)!=null?b:{}},c={...s.font,...(g=e==null?void 0:e.font)!=null?g:{}},a={colors:r,syntax:n,font:c},p=e?ur(JSON.stringify(a)):t;return {theme:a,id:`sp-${p}`,mode:o}},ur=e=>{let t=0;for(let o=0;o<e.length;t&=t)t=31*t+e.charCodeAt(o++);return Math.abs(t)};var hr=m({all:"initial",fontSize:"$font$size",fontFamily:"$font$body",display:"block",boxSizing:"border-box",textRendering:"optimizeLegibility",WebkitTapHighlightColor:"transparent",WebkitFontSmoothing:"subpixel-antialiased",variants:{variant:{dark:{colorScheme:"dark"},light:{colorScheme:"light"}}},"@media screen and (min-resolution: 2dppx)":{WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale"},"*":{boxSizing:"border-box"},".sp-wrapper:focus":{outline:"0"}}),ot=createContext({theme:ce,id:"light",mode:"light"}),Go=({theme:e,children:t,className:o,...s})=>{let{theme:r,id:n,mode:c}=Wo(e),a=useClasser(h),p=useMemo(()=>Vo(n,Xo(r)),[r,n]);return createElement(ot.Provider,{value:{theme:r,id:n,mode:c}},createElement("div",{className:l(a("wrapper"),p.toString(),hr({variant:c}),o),...s},t))},Ci=ot.Consumer;var Ot={files:{"/src/app/app.component.css":{code:`div {
  text-align: center;
}        
`},"/src/app/app.component.html":{code:`<div>
<h1>{{ helloWorld }}</h1>
</div>     
`},"/src/app/app.component.ts":{code:`import { Component } from "@angular/core";

@Component({
  selector: "app-root",
  templateUrl: "./app.component.html",
  styleUrls: ["./app.component.css"]
})
export class AppComponent {
  helloWorld = "Hello World";
}           
`},"/src/app/app.module.ts":{code:`import { BrowserModule } from "@angular/platform-browser";
import { NgModule } from "@angular/core";
      
import { AppComponent } from "./app.component";
      
@NgModule({
  declarations: [AppComponent],
  imports: [BrowserModule],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule {}       
`},"/src/index.html":{code:`<!doctype html>
<html lang="en">
      
<head>
  <meta charset="utf-8">
  <title>Angular</title>
  <base href="/">
      
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
</head>
      
<body>
   <app-root></app-root>
</body>
      
</html>
`},"/src/main.ts":{code:`import { enableProdMode } from "@angular/core";
import { platformBrowserDynamic } from "@angular/platform-browser-dynamic";
      
import { AppModule } from "./app/app.module";      

platformBrowserDynamic()
  .bootstrapModule(AppModule)
  .catch(err => console.log(err));
      
`},"/src/polyfills.ts":{code:`import "core-js/proposals/reflect-metadata";   
      import "zone.js/dist/zone";
`},"/package.json":{code:JSON.stringify({dependencies:{"@angular/core":"^11.2.0","@angular/platform-browser":"^11.2.0","@angular/platform-browser-dynamic":"^11.2.0","@angular/common":"^11.2.0","@angular/compiler":"^11.2.0","zone.js":"0.11.3","core-js":"3.8.3",rxjs:"6.6.3"},main:"/src/main.ts"})}},main:"/src/app/app.component.ts",environment:"angular-cli"};var Dt={files:{"/App.js":{code:`export default function App() {
  return <h1>Hello World</h1>
}
`},"/index.js":{code:`import React, { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import "./styles.css";

import App from "./App";

const root = createRoot(document.getElementById("root"));
root.render(
  <StrictMode>
    <App />
  </StrictMode>
);`},"/styles.css":{code:`body {
  font-family: sans-serif;
  -webkit-font-smoothing: auto;
  -moz-font-smoothing: auto;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: auto;
  text-rendering: optimizeLegibility;
  font-smooth: always;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

h1 {
  font-size: 1.5rem;
}`},"/public/index.html":{code:`<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
  </head>
  <body>
    <div id="root"></div>
  </body>
</html>`},"/package.json":{code:JSON.stringify({dependencies:{react:"^18.0.0","react-dom":"^18.0.0","react-scripts":"^4.0.0"},main:"/index.js"})}},main:"/App.js",environment:"create-react-app"};var Ht={files:{"tsconfig.json":{code:`{
  "include": [
    "./**/*"
  ],
  "compilerOptions": {
    "strict": true,
    "esModuleInterop": true,
    "lib": [ "dom", "es2015" ],
    "jsx": "react-jsx"
  }
}`},"/App.tsx":{code:`export default function App(): JSX.Element {
  return <h1>Hello World</h1>
}
`},"/index.tsx":{code:`import React, { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import "./styles.css";

import App from "./App";

const root = createRoot(document.getElementById("root"));
root.render(
  <StrictMode>
    <App />
  </StrictMode>
);`},"/styles.css":{code:`body {
  font-family: sans-serif;
  -webkit-font-smoothing: auto;
  -moz-font-smoothing: auto;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: auto;
  text-rendering: optimizeLegibility;
  font-smooth: always;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

h1 {
  font-size: 1.5rem;
}`},"/public/index.html":{code:`<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
  </head>
  <body>
    <div id="root"></div>
  </body>
</html>`},"/package.json":{code:JSON.stringify({dependencies:{react:"^18.0.0","react-dom":"^18.0.0","react-scripts":"^4.0.0"},devDependencies:{"@types/react":"^18.0.0","@types/react-dom":"^18.0.0",typescript:"^4.0.0"},main:"/index.tsx"})}},main:"/App.tsx",environment:"create-react-app"};var Bt={files:{"/App.tsx":{code:`import { Component } from "solid-js";

const App: Component = () => {
  return <h1>Hello World</h1>;
};

export default App;`},"/index.tsx":{code:`import { render } from "solid-js/web";
import App from "./App";

import "./styles.css";

render(() => <App />, document.getElementById("app"));`},"/styles.css":{code:`body {
  font-family: sans-serif;
  -webkit-font-smoothing: auto;
  -moz-font-smoothing: auto;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: auto;
  text-rendering: optimizeLegibility;
  font-smooth: always;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

h1 {
  font-size: 1.5rem;
}`},"/index.html":{code:`<html>
<head>
  <title>Parcel Sandbox</title>
  <meta charset="UTF-8" />
</head>
<body>
  <div id="app"></div>
  <script src="src/index.tsx"><\/script>
</body>
</html>`},"/package.json":{code:JSON.stringify({dependencies:{"solid-js":"1.3.15"},main:"/index.tsx"})}},main:"/App.tsx",environment:"solid"};var _t={files:{"/App.svelte":{code:`<style>
  main {
    font-family: sans-serif;
    text-align: center;
  }
</style>

<script>
  let name = 'World';
<\/script>

<main>
  <h1>Hello {name}</h1>
</main>`},"/index.js":{code:`import App from "./App.svelte";

const app = new App({
  target: document.body
});

export default app;
      `},"/public/index.html":{code:`<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf8" />
    <meta name="viewport" content="width=device-width" />

    <title>Svelte app</title>

    <link rel="stylesheet" href="public/bundle.css" />
  </head>

  <body>
    <script src="bundle.js"><\/script>
  </body>
</html>`},"/package.json":{code:JSON.stringify({dependencies:{svelte:"^3.0.0"},main:"/index.js"})}},main:"/index.js",environment:"svelte"};var jt={files:{"tsconfig.json":{code:`{
  "include": [
    "./**/*"
  ],
  "compilerOptions": {
    "strict": true,
    "esModuleInterop": true,
    "lib": [ "dom", "es2015" ],
    "jsx": "react-jsx"
  }
}`},"/add.ts":{code:"export const add = (a: number, b: number): number => a + b;"},"/add.test.ts":{code:`import { add } from './add';

describe('add', () => {
  test('Commutative Law of Addition', () => {
    expect(add(1, 2)).toBe(add(2, 1));
  });
});`},"package.json":{code:JSON.stringify({dependencies:{},devDependencies:{typescript:"^4.0.0"},main:"/add.ts"})}},main:"/add.test.ts",environment:"parcel",mode:"tests"};var Ut={files:{"/src/index.js":{code:`import "./styles.css";

document.getElementById("app").innerHTML = \`
<h1>Hello World</h1>
<div>
  We use the same configuration as Parcel to bundle this sandbox, you can find more
  info about Parcel 
  <a href="https://parceljs.org" target="_blank" rel="noopener noreferrer">here</a>.
</div>
\`;
`},"/src/styles.css":{code:`body {
  font-family: sans-serif;
}
      `},"/index.html":{code:`<!DOCTYPE html>
<html>

<head>
  <title>Parcel Sandbox</title>
  <meta charset="UTF-8" />
</head>

<body>
  <div id="app"></div>

  <script src="src/index.js">
  <\/script>
</body>

</html>`},"/package.json":{code:JSON.stringify({dependencies:{},main:"/src/index.js"})}},main:"/src/index.js",environment:"parcel"};var zt={files:{"tsconfig.json":{code:`{
  "compilerOptions": {
    "strict": true,
    "module": "commonjs",
    "jsx": "preserve",
    "esModuleInterop": true,
    "sourceMap": true,
    "allowJs": true,
    "lib": [
      "es6",
      "dom"
    ],
    "rootDir": "src",
    "moduleResolution": "node"
  }
}`},"/src/index.ts":{code:`import "./styles.css";

document.getElementById("app").innerHTML = \`
<h1>Hello World</h1>
<div>
  We use the same configuration as Parcel to bundle this sandbox, you can find more
  info about Parcel 
  <a href="https://parceljs.org" target="_blank" rel="noopener noreferrer">here</a>.
</div>
\`;
`},"/src/styles.css":{code:`body {
  font-family: sans-serif;
}
      `},"/index.html":{code:`<!DOCTYPE html>
<html>

<head>
  <title>Parcel Sandbox</title>
  <meta charset="UTF-8" />
</head>

<body>
  <div id="app"></div>

  <script src="src/index.ts">
  <\/script>
</body>

</html>`},"/package.json":{code:JSON.stringify({dependencies:{},devDependencies:{typescript:"^4.0.0"},main:"/src/index.ts"})}},main:"/src/index.ts",environment:"parcel"};var Vt={files:{"/src/App.vue":{code:`<template>
  <main id="app">
    <h1>Hello World</h1>
  </main>
</template>

<script>
export default {
  name: "App",
};
<\/script>

<style>
#app {
  font-family: "Avenir", Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
</style>
`},"/src/main.js":{code:`import Vue from "vue";
import App from "./App.vue";

Vue.config.productionTip = false;

new Vue({
  render: h => h(App)
}).$mount("#app");
`},"/public/index.html":{code:`<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <link rel="icon" href="<%= BASE_URL %>favicon.ico" />
    <title>codesandbox</title>
  </head>
  <body>
    <noscript>
      <strong
        >We're sorry but codesandbox doesn't work properly without JavaScript
        enabled. Please enable it to continue.</strong
      >
    </noscript>
    <div id="app"></div>
    <!-- built files will be auto injected -->
  </body>
</html>
`},"/package.json":{code:JSON.stringify({dependencies:{vue:"^2.6.11","@vue/cli-plugin-babel":"4.1.1"},main:"/src/main.js"})}},main:"/src/App.vue",environment:"vue-cli"};var Xt={files:{"/src/App.vue":{code:`<template>
  <main id="app">
    <h1>{{ helloWorld }}</h1>
  </main>
</template>
                             
<script>
import { ref } from "vue";
export default {
   name: "App",
   setup() {
      const helloWorld = ref("Hello World");
      return { helloWorld };
   }
};
<\/script>
                             
<style>
#app {
font-family: Avenir, Helvetica, Arial, sans-serif;
-webkit-font-smoothing: antialiased;
-moz-osx-font-smoothing: grayscale;
text-align: center;
color: #2c3e50;
margin-top: 60px;
}
</style>   
`},"/src/main.js":{code:`import { createApp } from 'vue'
import App from './App.vue'
            
createApp(App).mount('#app')            
`},"/public/index.html":{code:`<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <title>codesandbox</title>
  </head>
  <body>
    <noscript>
      <strong
        >We're sorry but codesandbox doesn't work properly without JavaScript
        enabled. Please enable it to continue.</strong
      >
    </noscript>
    <div id="app"></div>
    <!-- built files will be auto injected -->
  </body>
</html>
`},"/package.json":{code:JSON.stringify({dependencies:{"core-js":"^3.6.5",vue:"^3.0.0-0","@vue/cli-plugin-babel":"4.5.0"},main:"/src/main.js"})}},main:"/src/App.vue",environment:"vue-cli"};var Ie={react:Dt,"react-ts":Ht,vue:Vt,vanilla:Ut,"vanilla-ts":zt,vue3:Xt,angular:Ot,svelte:_t,solid:Bt,"test-ts":jt};var De=e=>{var a,p,d,u,f,b;let t=w(e.files),o=Sr({template:e.template,customSetup:e.customSetup,files:t}),s=w((p=(a=e.options)==null?void 0:a.visibleFiles)!=null?p:[]),r=((d=e.options)==null?void 0:d.activeFile)?Yo((u=e.options)==null?void 0:u.activeFile,t||{}):void 0;s.length===0&&t&&Object.keys(t).forEach(g=>{let y=t[g];if(typeof y=="string"){s.push(g);return}!r&&y.active&&(r=g,y.hidden===!0&&s.push(g)),y.hidden||s.push(g);}),s.length===0&&(s=[o.main]),o.files[o.entry]||(o.entry=Yo(o.entry,o.files)),!r&&o.main&&(r=o.main),(!r||!o.files[r])&&(r=s[0]),s.includes(r)||s.push(r);let n=y(o.files,(f=o.dependencies)!=null?f:{},(b=o.devDependencies)!=null?b:{},o.entry);return {visibleFiles:s.filter(g=>n[g]),activeFile:r,files:n,environment:o.environment}},Yo=(e,t)=>{let o=w(t),s=w(e);if(s in o)return s;if(!e)return null;let r=null,n=0,c=[".js",".jsx",".ts",".tsx"];for(;!r&&n<c.length;){let p=`${s.split(".")[0]}${c[n]}`;o[p]!==void 0&&(r=p),n++;}return r},Sr=({files:e,template:t,customSetup:o})=>{if(!t){if(!o)return Ie.vanilla;if(!e||Object.keys(e).length===0)throw new Error("[sandpack-react]: without a template, you must pass at least one file");return {...o,files:st(e)}}let s=Ie[t];if(!s)throw new Error(`[sandpack-react]: invalid template "${t}" provided`);return !o&&!e?s:{files:st({...s.files,...e}),dependencies:{...s.dependencies,...o==null?void 0:o.dependencies},devDependencies:{...s.devDependencies,...o==null?void 0:o.devDependencies},entry:w((o==null?void 0:o.entry)||s.entry),main:s.main,environment:(o==null?void 0:o.environment)||s.environment}},st=e=>e?Object.keys(e).reduce((t,o)=>(typeof e[o]=="string"?t[o]={code:e[o]}:t[o]=e[o],t),{}):{};var nt=createContext(null),Rr=3e4,Jo=class extends PureComponent{constructor(t){super(t);this.timeoutHook=null;this.initializeSandpackIframeHook=null;this.handleMessage=t=>{this.timeoutHook&&clearTimeout(this.timeoutHook),t.type==="state"?this.setState({bundlerState:t.state}):t.type==="done"&&!t.compilatonError?this.setState({error:null}):t.type==="action"&&t.action==="show-error"?this.setState({error:S(t)}):t.type==="action"&&t.action==="notification"&&t.notificationType==="error"&&this.setState({error:{message:t.title}});};this.registerReactDevTools=t=>{this.setState({reactDevTools:t});};this.updateCurrentFile=t=>{this.updateFile(this.state.activeFile,t);};this.updateFile=(t,o)=>{var r;let s=this.state.files;if(typeof t=="string"&&o){if(o===((r=this.state.files[t])==null?void 0:r.code))return;s={...s,[t]:{code:o}};}else typeof t=="object"&&(s={...s,...st(t)});this.setState({files:w(s)},this.updateClients);};this.updateClients=()=>{var n,c,a,p;let{files:t,sandpackStatus:o}=this.state,s=(c=(n=this.props.options)==null?void 0:n.recompileMode)!=null?c:"delayed",r=(p=(a=this.props.options)==null?void 0:a.recompileDelay)!=null?p:500;o==="running"&&(s==="immediate"&&Object.values(this.clients).forEach(d=>{d.updatePreview({files:t});}),s==="delayed"&&(window.clearTimeout(this.debounceHook),this.debounceHook=window.setTimeout(()=>{Object.values(this.clients).forEach(d=>{d.updatePreview({files:this.state.files});});},r)));};this.createClient=(t,o)=>{var n,c,a,p,d,u,f,b,g;let s=new I(t,{files:this.state.files,template:this.state.environment},{externalResources:(n=this.props.options)==null?void 0:n.externalResources,bundlerURL:(c=this.props.options)==null?void 0:c.bundlerURL,startRoute:(a=this.props.options)==null?void 0:a.startRoute,fileResolver:(p=this.props.options)==null?void 0:p.fileResolver,skipEval:(u=(d=this.props.options)==null?void 0:d.skipEval)!=null?u:!1,logLevel:(f=this.props.options)==null?void 0:f.logLevel,showOpenInCodeSandbox:!this.openInCSBRegistered.current,showErrorScreen:!this.errorScreenRegistered.current,showLoadingScreen:!this.loadingScreenRegistered.current,reactDevTools:this.state.reactDevTools,customNpmRegistries:(g=(b=this.props.customSetup)==null?void 0:b.npmRegistries)==null?void 0:g.map(y=>({...y,proxyEnabled:!1}))});return typeof this.unsubscribe!="function"&&(this.unsubscribe=s.listen(this.handleMessage),this.timeoutHook=setTimeout(()=>{this.setState({sandpackStatus:"timeout"});},Rr)),this.unsubscribeClientListeners[o]=this.unsubscribeClientListeners[o]||{},this.queuedListeners[o]&&(Object.keys(this.queuedListeners[o]).forEach(y=>{let R=this.queuedListeners[o][y],N=s.listen(R);this.unsubscribeClientListeners[o][y]=N;}),this.queuedListeners[o]={}),Object.entries(this.queuedListeners.global).forEach(([y,R])=>{let N=s.listen(R);this.unsubscribeClientListeners[o][y]=N;}),s};this.runSandpack=()=>{Object.keys(this.preregisteredIframes).forEach(t=>{let o=this.preregisteredIframes[t];this.clients[t]=this.createClient(o,t);}),this.setState({sandpackStatus:"running"});};this.registerBundler=(t,o)=>{this.state.sandpackStatus==="running"?this.clients[o]=this.createClient(t,o):this.preregisteredIframes[o]=t;};this.unregisterBundler=t=>{var r;let o=this.clients[t];o?(o.cleanup(),(r=o.iframe.contentWindow)==null||r.location.replace("about:blank"),delete this.clients[t]):delete this.preregisteredIframes[t],this.timeoutHook&&clearTimeout(this.timeoutHook),Object.values(this.unsubscribeClientListeners).forEach(n=>{Object.values(n).forEach(a=>a());}),this.setState({sandpackStatus:"idle"});};this.unregisterAllClients=()=>{Object.keys(this.clients).map(this.unregisterBundler),typeof this.unsubscribe=="function"&&(this.unsubscribe(),this.unsubscribe=void 0);};this.setActiveFile=t=>{this.setState({activeFile:t});};this.openFile=t=>{this.setState(({visibleFiles:o})=>{let s=o.includes(t)?o:[...o,t];return {activeFile:t,visibleFiles:s}});};this.closeFile=t=>{this.state.visibleFiles.length!==1&&this.setState(({visibleFiles:o,activeFile:s})=>{let r=o.indexOf(t),n=o.filter(c=>c!==t);return {activeFile:t===s?r===0?o[1]:o[r-1]:s,visibleFiles:n}});};this.deleteFile=t=>{this.setState(({visibleFiles:o,files:s})=>{let r={...s};return delete r[t],{visibleFiles:o.filter(n=>n!==t),files:r}},this.updateClients);};this.addFile=this.updateFile;this.dispatchMessage=(t,o)=>{if(this.state.sandpackStatus!=="running"){console.warn("[sandpack-react]: dispatch cannot be called while in idle mode");return}o?this.clients[o].dispatch(t):Object.values(this.clients).forEach(s=>{s.dispatch(t);});};this.addListener=(t,o)=>{if(o){if(this.clients[o])return this.clients[o].listen(t);{let s=Ae();return this.queuedListeners[o]=this.queuedListeners[o]||{},this.unsubscribeClientListeners[o]=this.unsubscribeClientListeners[o]||{},this.queuedListeners[o][s]=t,()=>{this.queuedListeners[o][s]?delete this.queuedListeners[o][s]:this.unsubscribeClientListeners[o][s]&&(this.unsubscribeClientListeners[o][s](),delete this.unsubscribeClientListeners[o][s]);}}}else {let s=Ae();this.queuedListeners.global[s]=t;let n=Object.values(this.clients).map(a=>a.listen(t));return ()=>{n.forEach(a=>a());}}};this.resetFile=t=>{let{files:o}=De({template:this.props.template,files:this.props.files,customSetup:this.props.customSetup,options:this.props.options});this.setState(s=>({files:{...s.files,[t]:o[t]}}),this.updateClients);};this.resetAllFiles=()=>{let{files:t}=De({template:this.props.template,files:this.props.files,customSetup:this.props.customSetup,options:this.props.options});this.setState({files:t},this.updateClients);};this._getSandpackState=()=>{let{files:t,activeFile:o,visibleFiles:s,visibleFilesFromProps:r,startRoute:n,bundlerState:c,editorState:a,error:p,sandpackStatus:d,environment:u,initMode:f}=this.state;return {files:t,environment:u,visibleFiles:s,visibleFilesFromProps:r,activeFile:o,startRoute:n,error:p,bundlerState:c,status:d,editorState:a,initMode:f,clients:this.clients,dispatch:this.dispatchMessage,errorScreenRegisteredRef:this.errorScreenRegistered,lazyAnchorRef:this.lazyAnchorRef,listen:this.addListener,loadingScreenRegisteredRef:this.loadingScreenRegistered,openInCSBRegisteredRef:this.openInCSBRegistered,registerBundler:this.registerBundler,runSandpack:this.runSandpack,unregisterBundler:this.unregisterBundler,registerReactDevTools:this.registerReactDevTools,openFile:this.openFile,resetFile:this.resetFile,resetAllFiles:this.resetAllFiles,setActiveFile:this.setActiveFile,updateCurrentFile:this.updateCurrentFile,updateFile:this.updateFile,addFile:this.addFile,closeFile:this.closeFile,deleteFile:this.deleteFile}};var c,a,p,d;let{activeFile:o,visibleFiles:s,files:r,environment:n}=De({template:t.template,files:t.files,customSetup:t.customSetup,options:t.options});this.state={files:r,environment:n,visibleFiles:s,visibleFilesFromProps:s,activeFile:o,startRoute:(c=this.props.options)==null?void 0:c.startRoute,bundlerState:void 0,error:null,sandpackStatus:((p=(a=this.props.options)==null?void 0:a.autorun)!=null?p:!0)?"initial":"idle",editorState:"pristine",initMode:((d=this.props.options)==null?void 0:d.initMode)||"lazy",reactDevTools:void 0},this.queuedListeners={global:{}},this.unsubscribeClientListeners={},this.preregisteredIframes={},this.clients={},this.lazyAnchorRef=createRef(),this.errorScreenRegistered=createRef(),this.openInCSBRegistered=createRef(),this.loadingScreenRegistered=createRef();}initializeSandpackIframe(){var s,r,n,c,a;if(!((r=(s=this.props.options)==null?void 0:s.autorun)!=null?r:!0))return;let o=(c=(n=this.props.options)==null?void 0:n.initModeObserverOptions)!=null?c:{rootMargin:"1000px 0px"};this.intersectionObserver&&this.lazyAnchorRef.current&&((a=this.intersectionObserver)==null||a.unobserve(this.lazyAnchorRef.current)),this.lazyAnchorRef.current&&this.state.initMode==="lazy"?(this.intersectionObserver=new IntersectionObserver(p=>{var d;p.some(u=>u.isIntersecting)&&(this.initializeSandpackIframeHook=setTimeout(()=>{this.runSandpack();},50),this.lazyAnchorRef.current&&((d=this.intersectionObserver)==null||d.unobserve(this.lazyAnchorRef.current)));},o),this.intersectionObserver.observe(this.lazyAnchorRef.current)):this.lazyAnchorRef.current&&this.state.initMode==="user-visible"?(this.intersectionObserver=new IntersectionObserver(p=>{p.some(d=>d.isIntersecting)?this.initializeSandpackIframeHook=setTimeout(()=>{this.runSandpack();},50):(this.initializeSandpackIframeHook&&clearTimeout(this.initializeSandpackIframeHook),Object.keys(this.clients).map(this.unregisterBundler),this.unregisterAllClients());},o),this.intersectionObserver.observe(this.lazyAnchorRef.current)):this.initializeSandpackIframeHook=setTimeout(()=>this.runSandpack(),50);}componentDidMount(){this.initializeSandpackIframe();}componentDidUpdate(t){var a,p,d,u;((a=t.options)==null?void 0:a.initMode)!==((p=this.props.options)==null?void 0:p.initMode)&&((d=this.props.options)==null?void 0:d.initMode)&&this.setState({initMode:(u=this.props.options)==null?void 0:u.initMode},this.initializeSandpackIframe);let{activeFile:o,visibleFiles:s,files:r,environment:n}=De({template:this.props.template,files:this.props.files,customSetup:this.props.customSetup,options:this.props.options});if(t.template!==this.props.template||!rt(t.options,this.props.options)||!rt(t.customSetup,this.props.customSetup)||!rt(t.files,this.props.files)){if(this.setState({activeFile:o,visibleFiles:s,visibleFilesFromProps:s,files:r,environment:n}),this.state.sandpackStatus!=="running")return;Object.values(this.clients).forEach(f=>f.updatePreview({files:r,template:n}));}let c=rt(r,this.state.files)?"pristine":"dirty";c!==this.state.editorState&&this.setState({editorState:c});}componentWillUnmount(){typeof this.unsubscribe=="function"&&this.unsubscribe(),this.timeoutHook&&clearTimeout(this.timeoutHook),this.debounceHook&&clearTimeout(this.debounceHook),this.initializeSandpackIframeHook&&clearTimeout(this.initializeSandpackIframeHook),this.intersectionObserver&&this.intersectionObserver.disconnect();}render(){var n;let{children:t,theme:o,className:s,style:r}=this.props;return createElement(nt.Provider,{value:this._getSandpackState()},createElement(ClasserProvider,{classes:(n=this.props.options)==null?void 0:n.classes},createElement(Go,{className:s,style:r,theme:o},t)))}},qo=Jo,dc=nt.Consumer;function x(){let e=useContext(nt);if(e===null)throw new Error('[sandpack-react]: "useSandpack" must be wrapped by a "SandpackProvider"');let{dispatch:t,listen:o,...s}=e;return {sandpack:{...s},dispatch:t,listen:o}}var it=()=>{var t,o,s;let{sandpack:e}=x();return {code:(t=e.files[e.activeFile])==null?void 0:t.code,readOnly:(s=(o=e.files[e.activeFile])==null?void 0:o.readOnly)!=null?s:!1,updateCode:e.updateCurrentFile}};var ee=m({svg:{margin:"auto"}}),T=m({appearance:"none",border:"0",outline:"none",display:"flex",alignItems:"center",fontSize:"inherit",fontFamily:"inherit",backgroundColor:"transparent",transition:"color $default, background $default",cursor:"pointer",color:"$colors$clickable","&:disabled":{color:"$colors$disabled"},"&:hover:not(:disabled,[data-active='true'])":{color:"$colors$hover"},'&[data-active="true"]':{color:"$colors$accent"},svg:{minWidth:"$space$4",width:"$space$4",height:"$space$4"},[`&.${ee}`]:{padding:"$space$1",width:"$space$7",height:"$space$7",display:"flex"}}),z=m({backgroundColor:"$colors$surface2",borderRadius:"99999px",'&[data-active="true"]':{color:"$colors$surface1",background:"$colors$accent"},"&:hover:not(:disabled,[data-active='true'])":{backgroundColor:"$colors$surface3"}}),Ko=m({padding:0}),$r=tt({"0%":{opacity:0,transform:"translateY(4px)"},"100%":{opacity:1,transform:"translateY(0)"}}),He=m({position:"absolute",bottom:"0",left:"0",right:"0",top:"0",margin:"0",overflow:"auto",height:"100%",zIndex:"$top"}),ct=m({padding:"$space$4",whiteSpace:"pre-wrap",fontFamily:"$font$mono",backgroundColor:"$colors$errorSurface"}),ke=m({animation:`${$r} 150ms ease`,color:"$colors$error"});var Lr=m({borderBottom:"1px solid $colors$surface2",background:"$colors$surface1"}),wr=m({padding:"0 $space$2",overflow:"auto",display:"flex",flexWrap:"nowrap",alignItems:"stretch",minHeight:"40px",marginBottom:"-1px"}),Qo=m({padding:"0 $space$1 0 $space$1",borderRadius:"$border$radius",marginLeft:"$space$1",width:"$space$5",visibility:"hidden",svg:{width:"$space$3",height:"$space$3",display:"block",position:"relative",top:1}}),Fr=m({padding:"0 $space$2",height:"$layout$headerHeight",whiteSpace:"nowrap","&:focus":{outline:"none"},[`&:hover > .${Qo}`]:{visibility:"unset"}}),lt=({closableTabs:e,className:t,...o})=>{let{sandpack:s}=x(),r=useClasser(h),{activeFile:n,visibleFiles:c,setActiveFile:a}=s,p=u=>{u.stopPropagation();let f=u.target.closest("[data-active]"),b=f==null?void 0:f.getAttribute("title");!b||s.closeFile(b);},d=u=>{let f=ve(u),b=c.reduce((g,y)=>(y===u||ve(y)===f&&g.push(y),g),[]);return b.length===0?f:_o(u,b)};return createElement("div",{className:l(r("tabs"),Lr,t),translate:"no",...o},createElement("div",{"aria-label":"Select active file",className:l(r("tabs-scrollable-container"),wr),role:"tablist"},c.map(u=>createElement("button",{key:u,"aria-selected":u===n,className:l(r("tab-button"),T,Fr),"data-active":u===n,onClick:()=>a(u),role:"tab",title:u,type:"button"},d(u),e&&c.length>1&&createElement("span",{className:l(r("close-button"),Qo),onClick:p},createElement(Do,null))))))};var Pr=m({position:"absolute",bottom:"$space$2",right:"$space$2",paddingRight:"$space$3"}),pt=({className:e,onClick:t,...o})=>{let s=useClasser(h),{sandpack:r}=x();return createElement("button",{className:l(s("button"),T,z,Pr,e),onClick:n=>{r.runSandpack(),t==null||t(n);},type:"button",...o},createElement(Ke,null),"Run")};var me=m({display:"flex",flexDirection:"column",width:"100%",position:"relative",backgroundColor:"$colors$surface1",transition:"flex $transitions$default",gap:1,[`&:has(.${h}-stack)`]:{backgroundColor:"$colors$surface2"}}),Y=({className:e,...t})=>{let o=useClasser(h);return createElement("div",{className:l(o("stack"),me,e),...t})};var Ce=()=>{let{theme:e,id:t,mode:o}=useContext(ot);return {theme:e,themeId:t,themeMode:o}};var Gt=(e,t)=>{if(e.length!==t.length)return !1;let o=!0;for(let s=0;s<e.length;s++)if(e[s]!==t[s]){o=!1;break}return o};var _e=(e,{line:t,column:o})=>e.line(t).from+(o!=null?o:0)-1,os=()=>EditorView.theme({"&":{backgroundColor:`var(--${h}-colors-surface1)`,color:`var(--${h}-syntax-color-plain)`,height:"100%"},".cm-matchingBracket, .cm-nonmatchingBracket, &.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket":{color:"inherit",backgroundColor:"rgba(128,128,128,.25)",backgroundBlendMode:"difference"},"&.cm-editor.cm-focused":{outline:"none"},".cm-activeLine":{backgroundColor:`var(--${h}-colors-surface3)`,borderRadius:`var(--${h}-border-radius)`},".cm-errorLine":{backgroundColor:`var(--${h}-colors-errorSurface)`,borderRadius:`var(--${h}-border-radius)`},".cm-content":{caretColor:`var(--${h}-colors-accent)`,padding:`0 var(--${h}-space-4)`},".cm-scroller":{fontFamily:`var(--${h}-font-mono)`,lineHeight:`var(--${h}-font-lineHeight)`},".cm-gutters":{backgroundColor:`var(--${h}-colors-surface1)`,color:`var(--${h}-colors-disabled)`,border:"none",paddingLeft:`var(--${h}-space-1)`},".cm-gutter.cm-lineNumbers":{fontSize:".6em"},".cm-lineNumbers .cm-gutterElement":{lineHeight:`var(--${h}-font-lineHeight)`,minWidth:`var(--${h}-space-5)`},".cm-content .cm-line":{paddingLeft:`var(--${h}-space-1)`},".cm-content.cm-readonly .cm-line":{paddingLeft:0}}),te=e=>`${h}-syntax-${e}`,ss=()=>["string","plain","comment","keyword","definition","punctuation","property","tag","static"].reduce((t,o)=>({...t,[`.${te(o)}`]:{color:`$syntax$color$${o}`,fontStyle:`$syntax$fontStyle$${o}`}}),{}),rs=e=>HighlightStyle.define([{tag:tags.link,textDecoration:"underline"},{tag:tags.emphasis,fontStyle:"italic"},{tag:tags.strong,fontWeight:"bold"},{tag:tags.keyword,class:te("keyword")},{tag:[tags.atom,tags.number,tags.bool],class:te("static")},{tag:tags.tagName,class:te("tag")},{tag:tags.variableName,class:te("plain")},{tag:tags.function(tags.variableName),class:te("definition")},{tag:tags.definition(tags.function(tags.variableName)),class:te("definition")},{tag:tags.propertyName,class:te("property")},{tag:[tags.literal,tags.inserted],class:te(e.syntax.string?"string":"static")},{tag:tags.punctuation,class:te("punctuation")},{tag:[tags.comment,tags.quote],class:te("comment")}]),ns=(e,t,o)=>{if(!e&&!t)return "javascript";let s=t;if(!s&&e){let r=e.lastIndexOf(".");s=e.slice(r+1);}for(let r of o)if(s===r.name||r.extensions.includes(s||""))return r.name;switch(s){case"ts":case"tsx":return "typescript";case"html":case"svelte":case"vue":return "html";case"css":case"less":case"scss":return "css";case"js":case"jsx":case"json":default:return "javascript"}},as=(e,t)=>{let o={javascript:javascript({jsx:!0,typescript:!1}),typescript:javascript({jsx:!0,typescript:!0}),html:html(),css:css()};for(let s of t)if(e===s.name)return s.language;return o[e]},dt=(...e)=>useCallback(t=>e.forEach(o=>{if(!!o){if(typeof o=="function")return o(t);o.current=t;}}),e);function is(e){return ViewPlugin.fromClass(class{constructor(t){this.decorations=this.getDecoration(t);}update(t){}getDecoration(t){if(!e)return Decoration.none;let o=e.map(s=>{var a,p,d;let r=Decoration.line({attributes:{class:(a=s.className)!=null?a:""}}),n=Decoration.mark({class:(p=s.className)!=null?p:"",attributes:(d=s.elementAttributes)!=null?d:void 0}),c=_e(t.state.doc,{line:s.line,column:s.startColumn})+1;if(s.startColumn&&s.endColumn){let u=_e(t.state.doc,{line:s.line,column:s.endColumn})+1;return n.range(c,u)}return r.range(c)});return Decoration.set(o)}},{decorations:t=>t.decorations})}function cs(){return Wr}var Xr=Decoration.line({attributes:{class:"cm-errorLine"}}),Wr=ViewPlugin.fromClass(class{constructor(){this.decorations=Decoration.none;}update(e){e.transactions.forEach(t=>{let o=t.annotation("show-error");if(o!==void 0){let s=_e(e.view.state.doc,{line:o})+1;this.decorations=Decoration.set([Xr.range(s)]);}else t.annotation("remove-errors")&&(this.decorations=Decoration.none);});}},{decorations:e=>e.decorations});var ft=m({margin:"0",display:"block",fontFamily:"$font$mono",fontSize:"$font$size",color:"$syntax$color$plain",lineHeight:"$font$lineHeight"}),Zt=m(ss()),ht=m({flex:1,position:"relative",overflow:"auto",background:"$colors$surface1",".cm-scroller":{padding:"$space$4 0"},[`.${ft}`]:{padding:"$space$4 0"}}),Yt=m({margin:"0",outline:"none",height:"100%"}),ls=m({fontFamily:"$font$mono",fontSize:"0.8em",position:"absolute",right:"$space$2",bottom:"$space$2",zIndex:"$top",color:"$colors$clickable",backgroundColor:"$colors$surface2",borderRadius:"99999px",padding:"calc($space$1 / 2) $space$2",[`& + .${T}`]:{right:"calc($space$11 * 2)"}});var ps=({langSupport:e,highlightTheme:t,code:o=""})=>{let s=e.language.parser.parse(o),r=0,n=[],c=(a,p)=>{if(a>r){let d=o.slice(r,a);n.push(p?createElement("span",{children:d,className:p,key:`${a}${r}`}):d),r=a;}};return highlightTree(s,t.match,(a,p,d)=>{c(a,""),c(p,d);}),r<o.length&&n.push(`

`),n};var xe=forwardRef$1(({code:e,filePath:t,fileType:o,onCodeUpdate:s,showLineNumbers:r=!1,showInlineErrors:n=!1,wrapContent:c=!1,editorState:a="pristine",readOnly:p=!1,showReadOnly:d=!0,decorators:u,initMode:f="lazy",id:b,extensions:g=[],extensionsKeymap:y=[],additionalLanguages:R=[]},N)=>{let F=useRef(null),X=dt(F,N),E=useRef(),{theme:_,themeId:B}=Ce(),[j,v]=useState(e),[$,q]=useState(f==="immediate"),S=useClasser(h),{listen:k}=x(),I=useRef([]),M=useRef([]),{isIntersecting:O}=mn(F,{rootMargin:"600px 0px",threshold:.2});useImperativeHandle(N,()=>({getCodemirror:()=>E.current})),useEffect(()=>{(f==="lazy"||f==="user-visible")&&O&&q(!0);},[f,O]);let G=ns(t,o,R),$e=as(G,R),Me=rs(_),Le=ps({langSupport:$e,highlightTheme:Me,code:e}),he=useMemo(()=>u&&u.sort((L,D)=>L.line-D.line),[u]);useEffect(()=>{if(!F.current||!$)return;let L=setTimeout(function(){let U=[{key:"Tab",run:Z=>{var ie;indentMore(Z);let K=y.find(({key:de})=>de==="Tab");return (ie=K==null?void 0:K.run(Z))!=null?ie:!0}},{key:"Shift-Tab",run:({state:Z,dispatch:K})=>{var de;indentLess({state:Z,dispatch:K});let ie=y.find(({key:qe})=>qe==="Shift-Tab");return (de=ie==null?void 0:ie.run(oe))!=null?de:!0}},{key:"Escape",run:()=>(p||F.current&&F.current.focus(),!0)},{key:"mod-Backspace",run:deleteGroupBackward}],w=[highlightSpecialChars(),history(),closeBrackets(),...g,keymap.of([...closeBracketsKeymap,...defaultKeymap,...historyKeymap,...commentKeymap,...U,...y]),$e,defaultHighlightStyle.fallback,os(),Me];p?(w.push(EditorState.readOnly.of(!0)),w.push(EditorView.editable.of(!1))):(w.push(bracketMatching()),w.push(highlightActiveLine())),he&&w.push(is(he)),c&&w.push(EditorView.lineWrapping),r&&w.push(lineNumbers()),n&&w.push(cs());let ge=EditorState.create({doc:e,extensions:w}),be=F.current,Fe=be.querySelector(".sp-pre-placeholder");Fe&&be.removeChild(Fe);let oe=new EditorView({state:ge,parent:be,dispatch:Z=>{if(oe.update([Z]),Z.docChanged){let K=Z.newDoc.sliceString(0,Z.newDoc.length);v(K),s==null||s(K);}}});oe.contentDOM.setAttribute("data-gramm","false"),oe.contentDOM.setAttribute("aria-label",t?`Code Editor for ${ve(t)}`:"Code Editor"),p?oe.contentDOM.classList.add("cm-readonly"):oe.contentDOM.setAttribute("tabIndex","-1"),E.current=oe;},0);return ()=>{var D;(D=E.current)==null||D.destroy(),clearTimeout(L);}},[$,r,c,B,he,p]),useEffect(function(){let D=E.current,U=!Gt(g,I.current)||!Gt(y,M.current);D&&U&&(D.dispatch({effects:StateEffect.appendConfig.of(g)}),D.dispatch({effects:StateEffect.appendConfig.of(keymap.of([...y]))}),I.current=g,M.current=y);},[g,y]),useEffect(()=>{E.current&&a==="dirty"&&window.matchMedia("(min-width: 768px)").matches&&E.current.contentDOM.focus();},[]),useEffect(()=>{if(E.current&&e!==j){let L=E.current,D=L.state.selection.ranges.some(({to:w,from:ge})=>w>e.length||ge>e.length)?EditorSelection.cursor(e.length):L.state.selection,U={from:0,to:L.state.doc.length,insert:e};L.dispatch({changes:U,selection:D});}},[e]),useEffect(function(){if(!n)return;let D=k(U=>{let w=E.current;U.type==="success"?w==null||w.dispatch({annotations:[new Annotation("remove-errors",!0)]}):U.type==="action"&&U.action==="show-error"&&U.line&&(w==null||w.dispatch({annotations:[new Annotation("show-error",U.line)]}));});return ()=>D()},[k,n]);let Je=L=>{L.key==="Enter"&&E.current&&(L.preventDefault(),E.current.contentDOM.focus());},we=()=>{let L=4;return r&&(L+=6),p||(L+=1),`var(--${h}-space-${L})`};return p?createElement(Fragment$2,null,createElement("pre",{ref:X,className:l(S("cm",a,G),Yt,Zt),translate:"no"},createElement("code",{className:l(S("pre-placeholder"),ft),style:{marginLeft:we()}},Le)),p&&d&&createElement("span",{className:l(S("read-only"),ls),...{}},"Read-only")):createElement("div",{ref:X,"aria-autocomplete":"list","aria-label":t?`Code Editor for ${ve(t)}`:"Code Editor","aria-multiline":"true",className:l(S("cm",a,G),Yt,Zt),onKeyDown:Je,role:"textbox",tabIndex:0,translate:"no",suppressHydrationWarning:!0},createElement("pre",{className:l(S("pre-placeholder"),ft),style:{marginLeft:we()}},Le))});var gs=forwardRef$1(({style:e,showTabs:t,showLineNumbers:o=!1,showInlineErrors:s=!1,showRunButton:r=!0,wrapContent:n=!1,closableTabs:c=!1,initMode:a,extensions:p,extensionsKeymap:d,id:u,readOnly:f,showReadOnly:b,additionalLanguages:g},y)=>{let{sandpack:R}=x(),{code:N,updateCode:F,readOnly:X}=it(),{activeFile:E,status:_,editorState:B}=R,j=t!=null?t:R.visibleFiles.length>1,v=useClasser(h),$=q=>{F(q);};return createElement(Y,{className:v("editor"),style:e},j&&createElement(lt,{closableTabs:c}),createElement("div",{className:l(v("code-editor"),ht)},createElement(xe,{key:E,ref:y,additionalLanguages:g,code:N,editorState:B,extensions:p,extensionsKeymap:d,filePath:E,id:u,initMode:a||R.initMode,onCodeUpdate:$,readOnly:f||X,showInlineErrors:s,showLineNumbers:o,showReadOnly:b,wrapContent:n}),r&&_==="idle"?createElement(pt,null):null))});var bs=forwardRef$1(({showTabs:e,showLineNumbers:t,decorators:o,code:s,initMode:r,wrapContent:n,...c},a)=>{let{sandpack:p}=x(),{code:d}=it(),u=useClasser(h),f=e!=null?e:p.visibleFiles.length>1;return createElement(Y,{...c},f?createElement(lt,null):null,createElement("div",{className:l(u("code-editor"),ht)},createElement(xe,{ref:a,code:s!=null?s:d,decorators:o,filePath:p.activeFile,initMode:r||p.initMode,showLineNumbers:t,showReadOnly:!1,wrapContent:n,readOnly:!0})),p.status==="idle"?createElement(pt,null):null)});var Cn=m({borderRadius:"0",width:"100%",padding:0,marginBottom:"$space$2",span:{textOverflow:"ellipsis",whiteSpace:"nowrap",overflow:"hidden"},svg:{marginRight:"$space$1"}}),bt=({selectFile:e,path:t,active:o,onClick:s,depth:r,isDirOpen:n})=>{let c=useClasser(h),a=u=>{e&&e(t),s==null||s(u);},p=t.split("/").filter(Boolean).pop(),d=()=>e?createElement(Oo,null):n?createElement(Po,null):createElement(Io,null);return createElement("button",{className:l(c("button","explorer"),T,Cn),"data-active":o,onClick:a,style:{paddingLeft:18*r+"px"},title:p,type:"button"},d(),createElement("span",null,p))};var ys=({prefixedPath:e,files:t,selectFile:o,activeFile:s,depth:r,autoHiddenFiles:n,visibleFiles:c})=>{let[a,p]=useState(!0);return createElement("div",{key:e},createElement(bt,{depth:r,isDirOpen:a,onClick:()=>p(u=>!u),path:e+"/"}),a&&createElement(yt,{activeFile:s,autoHiddenFiles:n,depth:r+1,files:t,prefixedPath:e,selectFile:o,visibleFiles:c}))};var Ss=({autoHiddenFiles:e,visibleFiles:t,files:o,prefixedPath:s})=>{let r=t.length>0,n=e&&!r,c=e&&!!r,a=Object.keys(o).filter(u=>{var b;let f=u.startsWith(s);return c?f&&t.includes(u):n?f&&!((b=o[u])==null?void 0:b.hidden):f}).map(u=>u.substring(s.length)),p=new Set(a.filter(u=>u.includes("/")).map(u=>`${s}${u.split("/")[0]}/`)),d=a.filter(u=>!u.includes("/")).map(u=>`${s}${u}`);return {directories:Array.from(p),modules:d}};var yt=({depth:e=0,activeFile:t,selectFile:o,prefixedPath:s,files:r,autoHiddenFiles:n,visibleFiles:c})=>{let{directories:a,modules:p}=Ss({visibleFiles:c,autoHiddenFiles:n,prefixedPath:s,files:r});return createElement("div",null,a.map(d=>createElement(ys,{key:d,activeFile:t,autoHiddenFiles:n,depth:e,files:r,prefixedPath:d,selectFile:o,visibleFiles:c})),p.map(d=>createElement(bt,{key:d,active:t===d,depth:e,path:d,selectFile:o})))};var Rn=m({padding:"$space$3",overflow:"auto",height:"100%"}),wp=({className:e,autoHiddenFiles:t=!1,...o})=>{let{sandpack:s}=x();return createElement("div",{className:l(me,Rn,`${h}-file-explorer`,e),...o},createElement(yt,{activeFile:s.activeFile,autoHiddenFiles:t,files:s.files,prefixedPath:"/",selectFile:s.openFile,visibleFiles:s.visibleFilesFromProps}))};var ks=e=>{let t=e.match(/(https?:\/\/.*?)\//);return t&&t[1]?[t[1],e.replace(t[1],"")]:[e,"/"]};var Tn=m({display:"flex",alignItems:"center",height:"$layout$headerHeight",borderBottom:"1px solid $colors$surface2",padding:"$space$3 $space$2",background:"$colors$surface1"}),Nn=m({backgroundColor:"$colors$surface2",color:"$colors$clickable",padding:"$space$1 $space$3",borderRadius:"99999px",border:"1px solid $colors$surface2",height:"24px",lineHeight:"24px",fontSize:"inherit",outline:"none",flex:1,marginLeft:"$space$4",width:"0",transition:"background $transitions$default","&:hover":{backgroundColor:"$colors$surface3"},"&:focus":{backgroundColor:"$surface1",border:"1px solid $colors$accent",color:"$colors$base"}}),Cs=({clientId:e,onURLChange:t,className:o,...s})=>{var j;let[r,n]=useState(""),{sandpack:c,dispatch:a,listen:p}=x(),[d,u]=useState((j=c.startRoute)!=null?j:"/"),[f,b]=useState(!1),[g,y]=useState(!1),R=useClasser(h);useEffect(()=>{let v=p($=>{if($.type==="urlchange"){let{url:q,back:S,forward:k}=$,[I,M]=ks(q);n(I),u(M),b(S),y(k);}},e);return ()=>v()},[]);let N=v=>{let $=v.target.value.startsWith("/")?v.target.value:`/${v.target.value}`;u($);},F=v=>{v.code==="Enter"&&(v.preventDefault(),v.stopPropagation(),typeof t=="function"&&t(r+v.currentTarget.value));},X=()=>{a({type:"refresh"});},E=()=>{a({type:"urlback"});},_=()=>{a({type:"urlforward"});},B=l(R("button","icon"),T,Ko,m({minWidth:"$space$6",justifyContent:"center"}));return createElement("div",{className:l(R("navigator"),Tn,o),...s},createElement("button",{"aria-label":"Go back one page",className:B,disabled:!f,onClick:E,type:"button"},createElement(Lo,null)),createElement("button",{"aria-label":"Go forward one page",className:B,disabled:!g,onClick:_,type:"button"},createElement(wo,null)),createElement("button",{"aria-label":"Refresh page",className:B,onClick:X,type:"button"},createElement(Qe,null)),createElement("input",{"aria-label":"Current Sandpack URL",className:l(R("input"),Nn),name:"Current Sandpack URL",onChange:N,onKeyDown:F,type:"text",value:d}))};var xs=()=>{var o;let{sandpack:e}=x(),{error:t}=e;return useEffect(()=>{e.errorScreenRegisteredRef.current=!0;},[]),(o=t==null?void 0:t.message)!=null?o:null};var Qt=200,Rs=(e,t)=>{let{sandpack:o,listen:s}=x(),[r,n]=useState("LOADING");return useEffect(()=>{o.loadingScreenRegisteredRef.current=!0;let c=s(a=>{a.type==="start"&&a.firstLoad===!0&&n("LOADING"),a.type==="done"&&n(p=>p==="LOADING"?"PRE_FADING":"HIDDEN");},e);return ()=>{c();}},[e,o.status==="idle"]),useEffect(()=>{let c;return r==="PRE_FADING"&&!t?n("FADING"):r==="FADING"&&(c=setTimeout(()=>n("HIDDEN"),Qt)),()=>{clearTimeout(c);}},[r,t]),o.status==="timeout"?"TIMEOUT":o.status!=="running"?"HIDDEN":r};var Ts=e=>{let{dispatch:t}=x();return {refresh:()=>t({type:"refresh"},e),back:()=>t({type:"urlback"},e),forward:()=>t({type:"urlforward"},e)}};function wn(e){var r,n;let{activeFile:t,bundlerState:o}=e;if(o==null)return null;let s=o.transpiledModules[t+":"];return (n=(r=s==null?void 0:s.source)==null?void 0:r.compiledCode)!=null?n:null}var Ns=()=>{let{sandpack:e}=x();return e.status!=="running"?null:wn(e)};var vt=()=>{let{sandpack:e,listen:t,dispatch:o}=x(),s=useRef(null),r=useRef(Ae());return useEffect(()=>{let c=s.current,a=r.current;return c!==null&&e.registerBundler(c,a),()=>e.unregisterBundler(a)},[]),{sandpack:e,getClient:()=>e.clients[r.current]||null,clientId:r.current,iframe:s,listen:c=>t(c,r.current),dispatch:c=>o(c,r.current)}};var kt=({children:e,className:t,...o})=>{let s=xs(),r=useClasser(h);return !s&&!e?null:createElement("div",{className:l(r("overlay","error"),He,ct,t),translate:"no",...o},createElement("div",{className:l(r("error-message"),ke)},s||e))};var In=e=>Pn.compressToBase64(JSON.stringify(e)).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),Ls="https://codesandbox.io/api/v1/sandboxes/define",On=(e,t)=>{let o=Object.keys(e).reduce((s,r)=>{let n=r.replace("/",""),c={content:e[r].code,isBinary:!1};return {...s,[n]:c}},{});return In({files:o,...t?{template:t}:null})},eo=({children:e,...t})=>{var c,a,p;let{sandpack:o}=x(),s=useRef(null),[r,n]=useState();return useEffect(function(){let u=setTimeout(()=>{let f=On(o.files,o.environment),b=new URLSearchParams({parameters:f,query:new URLSearchParams({file:o.activeFile,utm_medium:"sandpack"}).toString()});n(b);},600);return ()=>{clearTimeout(u);}},[o.activeFile,o.environment,o.files]),useEffect(function(){o.openInCSBRegisteredRef.current=!0;},[]),((p=(a=(c=r==null?void 0:r.get)==null?void 0:c.call(r,"parameters"))==null?void 0:a.length)!=null?p:0)>1500?createElement("button",{onClick:()=>{var d;return (d=s.current)==null?void 0:d.submit()},title:"Open in CodeSandbox",...t},createElement("form",{ref:s,action:Ls,method:"POST",style:{visibility:"hidden"},target:"_blank"},Array.from(r,([d,u])=>createElement("input",{key:d,name:d,type:"hidden",value:u}))),e):createElement("a",{href:`${Ls}?${r==null?void 0:r.toString()}`,rel:"noreferrer noopener",target:"_blank",title:"Open in CodeSandbox",...t},e)};var Ve=()=>{let e=useClasser(h);return createElement(eo,{className:l(e("button","icon-standalone"),T,ee,z)},createElement(Ao,null))};var to=m({transform:"translate(-4px, 9px) scale(0.13, 0.13)","*":{position:"absolute",width:"96px",height:"96px"}}),jn=m({position:"absolute",right:"$space$2",bottom:"$space$2",zIndex:"$top",width:"32px",height:"32px",borderRadius:"$border$radius",[`.${to}`]:{display:"flex"},[`.${T}`]:{display:"none"},[`&:hover .${T}`]:{display:"flex"},[`&:hover .${to}`]:{display:"none"}}),Un=tt({"0%":{transform:"rotateX(-25.5deg) rotateY(45deg)"},"100%":{transform:"rotateX(-25.5deg) rotateY(405deg)"}}),zn=m({animation:`${Un} 1s linear infinite`,animationFillMode:"forwards",transformStyle:"preserve-3d",transform:"rotateX(-25.5deg) rotateY(45deg)","*":{border:"10px solid $colors$clickable",borderRadius:"8px",background:"$colors$surface1"},".top":{transform:"rotateX(90deg) translateZ(44px)",transformOrigin:"50% 50%"},".bottom":{transform:"rotateX(-90deg) translateZ(44px)",transformOrigin:"50% 50%"},".front":{transform:"rotateY(0deg) translateZ(44px)",transformOrigin:"50% 50%"},".back":{transform:"rotateY(-180deg) translateZ(44px)",transformOrigin:"50% 50%"},".left":{transform:"rotateY(-90deg) translateZ(44px)",transformOrigin:"50% 50%"},".right":{transform:"rotateY(90deg) translateZ(44px)",transformOrigin:"50% 50%"}}),xt=({className:e,showOpenInCodeSandbox:t,...o})=>{let s=useClasser(h);return createElement("div",{className:l(s("cube-wrapper"),jn,e),title:"Open in CodeSandbox",...o},t&&createElement(Ve,null),createElement("div",{className:l(s("cube"),to)},createElement("div",{className:l(s("sides"),zn)},createElement("div",{className:"top"}),createElement("div",{className:"right"}),createElement("div",{className:"bottom"}),createElement("div",{className:"left"}),createElement("div",{className:"front"}),createElement("div",{className:"back"}))))};var Xn=m({backgroundColor:"$colors$surface1"}),Rt=({clientId:e,loading:t,className:o,style:s,showOpenInCodeSandbox:r,...n})=>{let c=Rs(e,t),a=useClasser(h);if(c==="HIDDEN")return null;if(c==="TIMEOUT")return createElement("div",{className:l(a("overlay","error"),He,ct,o),...n},createElement("div",{className:l(a("error-message"),ke)},"Unable to establish connection with the sandpack bundler. Make sure you are online or try again later. If the problem persists, please report it via"," ",createElement("a",{className:l(a("error-message"),ke),href:"mailto:hello@codesandbox.io?subject=Sandpack Timeout Error"},"email")," ","or submit an issue on"," ",createElement("a",{className:l(a("error-message"),ke),href:"https://github.com/codesandbox/sandpack/issues",rel:"noreferrer noopener",target:"_blank"},"GitHub.")));let p=c==="LOADING"||c==="PRE_FADING";return createElement("div",{className:l(a("overlay","loading"),He,Xn,o),style:{...s,opacity:p?1:0,transition:`opacity ${Qt}ms ease-out`},...n},createElement(xt,{showOpenInCodeSandbox:r}))};var As=({clientId:e})=>{let{refresh:t}=Ts(e),o=useClasser(h);return createElement("button",{className:l(o("button","icon-standalone"),T,ee,z),onClick:t,title:"Refresh Sandpack",type:"button"},createElement(Qe,null))};var Zn=m({flex:1,display:"flex",flexDirection:"column",background:"white",overflow:"auto",position:"relative"}),Yn=m({border:"0",outline:"0",width:"100%",height:"100%",minHeight:"160px",maxHeight:"2000px",flex:1}),Jn=m({display:"flex",position:"absolute",bottom:"$space$2",right:"$space$2",zIndex:"$overlay","> *":{marginLeft:"$space$2"}}),Is=forwardRef$1(({showNavigator:e=!1,showRefreshButton:t=!0,showOpenInCodeSandbox:o=!0,showSandpackErrorOverlay:s=!0,actionsChildren:r=createElement(Fragment$2,null),children:n,className:c,...a},p)=>{let{sandpack:d,listen:u,iframe:f,getClient:b,clientId:g}=vt(),[y,R]=useState(null),{status:N,errorScreenRegisteredRef:F,openInCSBRegisteredRef:X,loadingScreenRegisteredRef:E}=d,_=useClasser(h);X.current=!0,F.current=!0,E.current=!0,useEffect(()=>u(v=>{v.type==="resize"&&R(v.height);}),[]),useImperativeHandle(p,()=>({clientId:g,getClient:b}),[b,g]);let B=j=>{!f.current||(f.current.src=j);};return createElement(Y,{className:l(`${h}-preview`,c),...a},e&&createElement(Cs,{clientId:g,onURLChange:B}),createElement("div",{className:l(_("preview-container"),Zn)},createElement("iframe",{ref:f,className:l(_("preview-iframe"),Yn),style:{height:y||void 0},title:"Sandpack Preview"}),s&&createElement(kt,null),createElement("div",{className:l(_("preview-actions"),Jn)},r,!e&&t&&N==="running"&&createElement(As,{clientId:g}),o&&createElement(Ve,null)),createElement(Rt,{clientId:g,showOpenInCodeSandbox:o}),n))});var sa=m({display:"flex",flexDirection:"column",width:"100%",position:"relative",overflow:"auto",minHeight:"160px",flex:1}),bm=({className:e,...t})=>{let{sandpack:o}=x(),s=Ns(),r=useClasser(h),n=useRef(null);return useEffect(()=>{let c=n.current;return c&&o.registerBundler(c,"hidden"),()=>{o.unregisterBundler("hidden");}},[]),createElement("div",{className:l(r("transpiled-code"),me,sa,e),...t},createElement(bs,{code:s!=null?s:"",initMode:o.initMode,...t}),createElement("iframe",{ref:n,style:{display:"none"},title:"transpiled sandpack code"}),createElement(kt,null),createElement(Rt,{clientId:"hidden",showOpenInCodeSandbox:!1}))};var ia=m({height:"$layout$height",width:"100%"}),Em=({clientId:e,theme:t,className:o,...s})=>{let{listen:r,sandpack:n}=x(),{themeMode:c}=Ce(),a=useClasser(h),p=useRef(),[d,u]=useState(null);return useEffect(()=>{import('react-devtools-inline/frontend.js').then(f=>{p.current=f;});},[]),useEffect(()=>r(b=>{var g;if(b.type==="activate-react-devtools"){let y=e?n.clients[e]:Object.values(n.clients)[0],R=(g=y==null?void 0:y.iframe)==null?void 0:g.contentWindow;p.current&&R&&u(p.current.initialize(R));}}),[p,e,r,n.clients]),useEffect(()=>{n.registerReactDevTools("legacy");},[]),d?createElement("div",{className:l(a("devtools"),ia,o),...s},createElement(d,{browserTheme:t!=null?t:c})):null};var da=m({border:"1px solid $colors$surface2",display:"flex",flexWrap:"wrap",alignItems:"stretch",borderRadius:"$border$radius",overflow:"hidden",position:"relative",backgroundColor:"$colors$surface2",gap:1,[`> .${me}`]:{flexGrow:1,flexShrink:1,flexBasis:"0",minWidth:"350px",height:"$layout$height","@media print":{height:"auto",display:"block"},"@media screen and (max-width: 768px)":{height:"auto",minWidth:"100% !important;"}},[`> .${h}-file-explorer`]:{flex:.2,minWidth:200}}),Ds=forwardRef$1(({children:e,className:t,...o},s)=>{let{sandpack:r}=x(),n=useClasser(h),c=dt(r.lazyAnchorRef,s);return createElement("div",{ref:c,className:l(n("layout"),da,t),...o},e)});var fa=m({justifyContent:"space-between",borderBottom:"1px solid $colors$surface2",padding:"$space$3 $space$2",fontFamily:"$font$mono",maxHeight:"$layout$headerHeight",overflowX:"auto",whiteSpace:"nowrap"}),so=m({display:"flex",flexDirection:"row",alignItems:"center",gap:"$space$2"}),Hs=({status:e,suiteOnly:t,setSuiteOnly:o,setVerbose:s,verbose:r,watchMode:n,setWatchMode:c,showSuitesOnly:a})=>{let p=l(T,z,m({padding:"$space$1 $space$3"}));return createElement("div",{className:l(fa,so)},createElement("div",{className:l(so)},createElement("p",{className:l(m({lineHeight:1,margin:0,color:"$colors$base",fontSize:"$font$size",display:"flex",alignItems:"center",gap:"$space$2"}))},createElement(Se,null),"Tests")),createElement("div",{className:l(so)},a&&createElement("button",{className:p,"data-active":t,disabled:e==="initialising",onClick:o},"Suite only"),createElement("button",{className:p,"data-active":r,disabled:e==="initialising",onClick:s},"Verbose"),createElement("button",{className:p,"data-active":n,disabled:e==="initialising",onClick:c},"Watch")))};var Bs=({onClick:e})=>{let t=useClasser(h);return createElement("button",{className:l(t("button","icon-standalone"),T,ee,z),onClick:e,title:"Run tests",type:"button"},createElement(Ke,null))};var js=e=>({"--test-pass":e?"#18df16":"#15c213","--test-fail":e?"#df162b":"#c21325","--test-skip":e?"#eace2b":"#c2a813","--test-run":e?"#eace2b":"#c2a813","--test-title":e?"#3fbabe":"#256c6f"}),Et=m({variants:{status:{pass:{color:"var(--test-pass)"},fail:{color:"var(--test-fail)"},skip:{color:"var(--test-skip)"},title:{color:"var(--test-title)"}}}}),ne=Et({status:"pass"}),H=Et({status:"fail"}),Tt=Et({status:"skip"}),Us=Et({status:"title"}),ro=m({variants:{status:{pass:{background:"var(--test-pass)",color:"$colors$surface1"},fail:{background:"var(--test-fail)",color:"$colors$surface1"},run:{background:"var(--test-run)",color:"$colors$surface1"}}}}),zs=ro({status:"run"}),Vs=ro({status:"pass"}),no=ro({status:"fail"});var ga=m({marginLeft:"$space$4"}),ba=m({marginBottom:"$space$2",color:"$colors$clickable"}),ya=m({marginBottom:"$space$2",color:"$colors$hover"}),Sa=m({marginLeft:"$space$2"}),ao=m({marginRight:"$space$2"}),Nt=({tests:e,style:t})=>React__default.createElement("div",{className:l(ga)},e.map(o=>React__default.createElement("div",{key:o.name,className:l(ba)},o.status==="pass"&&React__default.createElement("span",{className:l(ne,ao)},"\u2713"),o.status==="fail"&&React__default.createElement("span",{className:l(H,ao)},"\u2715"),o.status==="idle"&&React__default.createElement("span",{className:l(Tt,ao)},"\u25CB"),React__default.createElement("span",{className:l(ya)},o.name),o.duration!==void 0&&React__default.createElement("span",{className:l(Sa)},"(",o.duration," ms)"))));var Xs=e=>$t(e).filter(t=>t.status==="fail"),$t=e=>Object.values(e.tests).concat(...Object.values(e.describes).map($t)),Ws=e=>e.map(Mt).reduce((t,o)=>({pass:t.pass+o.pass,fail:t.fail+o.fail,skip:t.skip+o.skip,total:t.total+o.total}),{pass:0,skip:0,fail:0,total:0}),Mt=e=>$t(e).reduce((t,o)=>({pass:o.status==="pass"?t.pass+1:t.pass,fail:o.status==="fail"?t.fail+1:t.fail,skip:o.status==="idle"||o.status==="running"?t.skip+1:t.skip,total:t.total+1}),{pass:0,fail:0,skip:0,total:0}),Gs=e=>e.filter(t=>Object.values(t.describes).length>0||Object.values(t.tests).length>0).map(Mt).reduce((t,o)=>({pass:t.pass+(o.fail===0?1:0),fail:t.fail+(o.fail>0?1:0),total:t.total+1}),{pass:0,fail:0,total:0}),Zs=e=>Ne(e,$t).reduce((t,o)=>t+(o.duration||0),0),Lt=e=>Object.values(e.describes).length===0&&Object.values(e.tests).length===0,We=e=>{let t=e.length-1,o=e.slice(0,t),s=e[t];return [o,s]},Ne=(e,t)=>e.map(t).reduce((o,s)=>o.concat(s),[]),ae=(e,t)=>o=>va(o,e,t);var ka=m({color:"$colors$hover",marginBottom:"$space$2"}),Ca=m({marginLeft:"$space$4"}),io=({describes:e})=>createElement(Fragment$2,null,e.map(t=>{if(Lt(t))return null;let o=Object.values(t.tests),s=Object.values(t.describes);return createElement("div",{key:t.name,className:l(Ca)},createElement("div",{className:l(ka)},t.name),createElement(Nt,{tests:o}),createElement(io,{describes:s}))}));var Ra=m({color:"$colors$hover",fontSize:"$font$size",padding:"$space$2",whiteSpace:"pre-wrap"}),co=({error:e,path:t})=>createElement("div",{className:l(Ra),dangerouslySetInnerHTML:{__html:Ea(e,t)}}),wt=e=>e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;"),Ea=(e,t)=>{let o="";if(e.matcherResult?o=`<span>${wt(e.message).replace(/(expected)/m,`<span class="${ne}">$1</span>`).replace(/(received)/m,`<span class="${H}">$1</span>`).replace(/(Difference:)/m,"<span>$1</span>").replace(/(Expected:)(.*)/m,`<span>$1</span><span class="${ne}">$2</span>`).replace(/(Received:)(.*)/m,`<span>$1</span><span class="${H}">$2</span>`).replace(/^(-.*)/gm,`<span class="${H}">$1</span>`).replace(/^(\+.*)/gm,`<span class="${ne}">$1</span>`)}</span>`:o=wt(e.message),e.mappedErrors&&e.mappedErrors[0]&&e.mappedErrors[0].fileName.endsWith(t)&&e.mappedErrors[0]._originalScriptCode){let r=e.mappedErrors[0]._originalScriptCode||[],n=Math.max(...r.map(a=>(a.lineNumber+"").length))+2,c=Array.from({length:n}).map(()=>" ");o+="<br />",o+="<br />",o+="<div>",r.filter(a=>a.content.trim()).forEach(a=>{let p=(a.lineNumber+"").length,d=[...c];d.length-=p,a.highlight&&(d.length-=2);let u=a.content.indexOf(".to"),f=Array.from({length:c.length+u-(n-1)},()=>" "),b=wt(a.content).replace(/(describe|test|it)(\()(&#039;|&quot;|`)(.*)(&#039;|&quot;|`)/m,`<span>$1$2$3</span><span class="${Us}">$4</span><span>$5</span>`).replace(/(expect\()(.*)(\)\..*)(to[\w\d]*)(\()(.*)(\))/m,`<span>$1</span><span class="${H}">$2</span><span>$3</span><span style="text-decoration: underline; font-weight: 900">$4</span><span>$5</span><span class="${ne}">$6</span><span>$7</span>`);o+=`<div ${a.highlight?'style="font-weight:200;"':""}>`+(a.highlight?`<span class="${H}">></span> `:"")+d.join("")+wt(""+a.lineNumber)+" | "+b+"</div>"+(a.highlight?"<div>"+c.join("")+" | "+f.join("")+`<span class="${H}">^</span></div>`:"");}),o+="</div>";}return o.replace(/(?:\r\n|\r|\n)/g,"<br />")};var Na=m({display:"flex",flexDirection:"row",alignItems:"center",marginBottom:"$space$2"}),lo=m({marginBottom:"$space$2"}),$a=m({fontWeight:"bold"}),Ft=m({borderRadius:"calc($border$radius / 2)"}),Ma=m({padding:"$space$1 $space$2",fontFamily:"$font$mono",textTransform:"uppercase",marginRight:"$space$2"}),La=m({fontFamily:"$font$mono",cursor:"pointer",display:"inline-block"}),wa=m({color:"$colors$clickable",textDecorationStyle:"dotted",textDecorationLine:"underline"}),Fa=m({color:"$colors$hover",fontWeight:"bold",textDecorationStyle:"dotted",textDecorationLine:"underline"}),Ys=({specs:e,openSpec:t,status:o,verbose:s})=>createElement(Fragment$2,null,e.map(r=>{if(r.error)return createElement("div",{key:r.name,className:l(lo)},createElement(At,{className:l(Ft,no)},"Error"),createElement(Js,{onClick:()=>t(r.name),path:r.name}),createElement(co,{error:r.error,path:r.name}));if(Lt(r))return null;let n=Object.values(r.tests),c=Object.values(r.describes),a=Mt(r);return createElement("div",{key:r.name,className:l(lo)},createElement("div",{className:l(Na)},o==="complete"?a.fail>0?createElement(At,{className:l(Ft,no)},"Fail"):createElement(At,{className:l(Ft,Vs)},"Pass"):createElement(At,{className:l(Ft,zs)},"Run"),createElement(Js,{onClick:()=>t(r.name),path:r.name})),s&&createElement(Nt,{tests:n}),s&&createElement(io,{describes:c}),Xs(r).map(p=>createElement("div",{key:`failing-${p.name}`,className:l(lo)},createElement("div",{className:l($a,H)},"\u25CF ",p.blocks.join(" \u203A ")," \u203A ",p.name),p.errors.map(d=>createElement(co,{key:`failing-${p.name}-error`,error:d,path:p.path})))))})),At=({children:e,className:t})=>createElement("span",{className:l(Ma,t)},e),Js=({onClick:e,path:t})=>{let o=t.split("/"),s=o.slice(0,o.length-1).join("/")+"/",r=o[o.length-1];return createElement("button",{className:l(T,La),onClick:e},createElement("span",{className:l(wa)},s),createElement("span",{className:l(Fa)},r))};var qs=m({marginBottom:"$space$2"}),po=m({fontWeight:"bold",color:"$colors$hover",whiteSpace:"pre-wrap"}),Pa=m({fontWeight:"bold",color:"$colors$clickable"}),Ks=({suites:e,tests:t,duration:o})=>{let s="Test suites: ",r=n=>{let c=s.length-n.length,a=Array.from({length:c},()=>" ").join("");return n+a};return createElement("div",{className:l(Pa)},createElement("div",{className:l(qs)},createElement("span",{className:l(po)},s),e.fail>0&&createElement("span",{className:l(H)},e.fail," failed,"," "),e.pass>0&&createElement("span",{className:l(ne)},e.pass," passed,"," "),createElement("span",null,e.total," total")),createElement("div",{className:l(qs)},createElement("span",{className:l(po)},r("Tests:")),t.fail>0&&createElement("span",{className:l(H)},t.fail," failed,"," "),t.skip>0&&createElement("span",{className:l(Tt)},t.skip," skipped,"," "),t.pass>0&&createElement("span",{className:l(ne)},t.pass," passed,"," "),createElement("span",null,t.total," total")),createElement("div",{className:l(po)},r("Time:"),o/1e3,"s"))};var Ia=m({display:"flex",position:"absolute",bottom:"$space$2",right:"$space$2",zIndex:"$overlay","> *":{marginLeft:"$space$2"}}),Oa={specs:{},status:"initialising",verbose:!1,watchMode:!0,suiteOnly:!1,specsCount:0},mo=({verbose:e=!1,watchMode:t=!0,style:o,className:s,onComplete:r,actionsChildren:n,...c})=>{let a=Ce(),{getClient:p,iframe:d,listen:u,sandpack:f}=vt(),[b,g]=useState({...Oa,verbose:e,watchMode:t});useEffect(()=>{let v=[],$="";return u(S=>{if(!(b.suiteOnly&&("path"in S&&S.path!==f.activeFile||"test"in S&&"path"in S.test&&S.test.path!==f.activeFile))){if(S.type==="action"&&S.action==="clear-errors"&&S.source==="jest"){$=S.path;return}if(S.type==="test"){if(S.event==="initialize_tests")return v=[],$="",b.watchMode?y():g(k=>({...k,status:"idle",specs:{}}));if(S.event==="test_count")return g(k=>({...k,specsCount:S.count}));if(S.event==="total_test_start")return v=[],g(k=>({...k,status:"running"}));if(S.event==="total_test_end")return g(k=>(r!==void 0&&r(k.specs),{...k,status:"complete"}));if(S.event==="add_file")return g(ae(["specs",S.path],{describes:{},tests:{},name:S.path}));if(S.event==="remove_file")return g(k=>{let I=Object.entries(k.specs).reduce((M,[O,G])=>O===S.path?M:{...M,[O]:G},{});return {...k,specs:I}});if(S.event==="file_error")return g(ae(["specs",S.path,"error"],S.error));if(S.event==="describe_start"){v.push(S.blockName);let[k,I]=We(v),M=$;return I===void 0?void 0:g(ae(["specs",M,"describes",...Ne(k,O=>[O,"describes"]),I],{name:S.blockName,tests:{},describes:{}}))}if(S.event==="describe_end"){v.pop();return}if(S.event==="add_test"){let[k,I]=We(v),M={status:"idle",errors:[],name:S.testName,blocks:[...v],path:S.path};return g(I===void 0?ae(["specs",S.path,"tests",S.testName],M):ae(["specs",S.path,"describes",...Ne(k,O=>[O,"describes"]),I,"tests",S.testName],M))}if(S.event==="test_start"){let{test:k}=S,[I,M]=We(k.blocks),O={status:"running",name:k.name,blocks:k.blocks,path:k.path,errors:[]};return g(M===void 0?ae(["specs",k.path,"tests",k.name],O):ae(["specs",k.path,"describes",...Ne(I,G=>[G,"describes"]),M,"tests",k.name],O))}if(S.event==="test_end"){let{test:k}=S,[I,M]=We(k.blocks),O={status:k.status,errors:k.errors,duration:k.duration,name:k.name,blocks:k.blocks,path:k.path};return g(M===void 0?ae(["specs",k.path,"tests",k.name],O):ae(["specs",k.path,"describes",...Ne(I,G=>[G,"describes"]),M,"tests",k.name],O))}}}})},[b.suiteOnly,b.watchMode,f.activeFile]);let y=()=>{g($=>({...$,status:"running",specs:{}}));let v=p();v&&v.dispatch({type:"run-all-tests"});},R=()=>{g($=>({...$,status:"running",specs:{}}));let v=p();v&&v.dispatch({type:"run-tests",path:f.activeFile});},N=/.*\.(test|spec)\.[tj]sx?$/,F=f.activeFile.match(N)!==null;useEffect(function(){return u(({type:q})=>{q==="done"&&b.watchMode&&(F?R():y());})},[R,y,b.watchMode,F]);let X=v=>{f.setActiveFile(v);},E=Object.values(b.specs),_=Zs(E),B=Ws(E),j=Gs(E);return createElement(Y,{className:l(`${h}-tests`,s),style:{...js(a.themeMode==="dark"),...o},...c},createElement("iframe",{ref:d,style:{display:"none"},title:"Sandpack Tests"}),createElement(Hs,{setSuiteOnly:()=>g(v=>({...v,suiteOnly:!v.suiteOnly})),setVerbose:()=>g(v=>({...v,verbose:!v.verbose})),setWatchMode:()=>{g(v=>({...v,watchMode:!v.watchMode}));},showSuitesOnly:b.specsCount>1,status:b.status,suiteOnly:b.suiteOnly,verbose:b.verbose,watchMode:b.watchMode}),b.status==="running"||b.status==="initialising"?createElement(xt,{showOpenInCodeSandbox:!1}):createElement("div",{className:Ia.toString()},n,createElement(Bs,{onClick:b.suiteOnly?R:y})),createElement("div",{className:l(Da)},E.length===0&&b.status==="complete"?createElement("div",{className:l(Ha)},createElement("p",null,"No test files found."),createElement("p",null,"Test match:"," ",createElement("span",{className:l(H)},N.toString()))):createElement(Fragment$2,null,createElement(Ys,{openSpec:X,specs:E,status:b.status,verbose:b.verbose}),b.status==="complete"&&B.total>0&&createElement(Ks,{duration:_,suites:j,tests:B}))))},Da=m({padding:"$space$4",height:"100%",overflow:"auto",display:"flex",flexDirection:"column",position:"relative",fontFamily:"$font$mono"}),Ha=m({fontWeight:"bold",color:"$colors$base"});var tr=({onClick:e})=>{let t=useClasser("sp");return React__default.createElement("button",{className:l(t("button","icon-standalone"),T,ee,z,m({position:"absolute",bottom:"$space$2",right:"$space$2"})),onClick:e},React__default.createElement(Fo,null))};var or=()=>React__default.createElement("div",{className:l(m({borderBottom:"1px solid $colors$surface2",padding:"$space$3 $space$2",height:"$layout$headerHeight"}))},React__default.createElement("p",{className:l(m({lineHeight:1,margin:0,color:"$colors$base",fontSize:"$font$size",display:"flex",alignItems:"center",gap:"$space$2"}))},React__default.createElement(Se,null),"Console"));var sr=["SyntaxError: ","Error in sandbox:"],rr={id:"random",method:"clear",data:["Console was cleared"]},fo="@t",ho="@r",go=1e4,bo=2,Pt=400,yo=Pt*2;var So=e=>{var c,a;let[t,o]=useState([]),{listen:s}=x(),r=(c=e==null?void 0:e.showSyntaxError)!=null?c:!1,n=(a=e==null?void 0:e.maxMessageCount)!=null?a:yo;return useEffect(()=>s(d=>{if(d.type==="console"&&d.codesandbox){if(d.log.find(({method:f})=>f==="clear"))return o([rr]);let u=r?d.log:d.log.filter(f=>f.data.filter(g=>typeof g!="string"?!0:sr.filter(R=>g.startsWith(R)).length===0).length>0);if(!u)return;o(f=>{let b=[...f,...u].filter((g,y,R)=>y===R.findIndex(N=>N.id===g.id));for(;b.length>yo;)b.shift();return b});}},e==null?void 0:e.clientId),[s,n,e,r]),{logs:t,reset:()=>o([])}};var vo=function(){return (0, eval)("this")}(),Va=typeof ArrayBuffer=="function",Xa=typeof Map=="function",Wa=typeof Set=="function",Ze;(function(s){s[s.infinity=0]="infinity",s[s.minusInfinity=1]="minusInfinity",s[s.minusZero=2]="minusZero";})(Ze||(Ze={}));var nr={Arithmetic:e=>e===0?1/0:e===1?-1/0:e===2?-0:e,HTMLElement:e=>{let t=document.implementation.createHTMLDocument("sandbox");try{let o=t.createElement(e.tagName);o.innerHTML=e.innerHTML;for(let s of Object.keys(e.attributes))try{o.setAttribute(s,e.attributes[s]);}catch{}return o}catch(o){return e}},Function:e=>{let t=()=>{};return Object.defineProperty(t,"toString",{value:()=>`function ${e.name}() {${e.body}}`}),t},"[[NaN]]":()=>NaN,"[[undefined]]":()=>{},"[[Date]]":e=>{let t=new Date;return t.setTime(e),t},"[[RegExp]]":e=>new RegExp(e.src,e.flags),"[[Error]]":e=>{let t=vo[e.name]||Error,o=new t(e.message);return o.stack=e.stack,o},"[[ArrayBuffer]]":e=>{if(Va){let t=new ArrayBuffer(e.length);return new Int8Array(t).set(e),t}return e},"[[TypedArray]]":e=>typeof vo[e.ctorName]=="function"?new vo[e.ctorName](e.arr):e.arr,"[[Map]]":e=>{if(Xa){let o=new Map;for(let s=0;s<e.length;s+=2)o.set(e[s],e[s+1]);return o}let t=[];for(let o=0;o<e.length;o+=2)t.push([e[i],e[i+1]]);return t},"[[Set]]":e=>{if(Wa){let t=new Set;for(let o=0;o<e.length;o++)t.add(e[o]);return t}return e}};var ar=e=>{if(typeof e=="string"||typeof e=="number"||e===null)return e;if(Array.isArray(e))return e.map(ar);if(typeof e=="object"&&fo in e){let t=e[fo];return nr[t](e.data)}return e},Ga=(e,t,o)=>`[${e.reduce((r,n,c)=>`${r}${c?", ":""}${Ye(n,t,o)}`,"")}]`,Za=(e,t,o)=>{let s=e.constructor.name!=="Object"?`${e.constructor.name} `:"";if(o>bo)return s;let r=Object.entries(e),n=Object.entries(e).reduce((c,[a,p],d)=>{let u=d===0?"":", ",f=r.length>10?`
  `:"",b=Ye(p,t,o);return d===Pt?c+f+"...":d>Pt?c:c+`${u}${f}${a}: `+b},"");return `${s}{ ${n}${r.length>10?`
`:" "}}`},Ye=(e,t,o=0)=>{try{let s=ar(e);if(Array.isArray(s))return Ga(s,t,o+1);switch(typeof s){case"string":return `"${s}"`.slice(0,go);case"number":case"function":case"symbol":return s.toString();case"boolean":return String(s);case"undefined":return "undefined";case"object":default:if(s instanceof RegExp||s instanceof Error||s instanceof Date)return s.toString();if(s===null)return String(null);if(s instanceof HTMLElement)return s.outerHTML.slice(0,go);if(Object.entries(s).length===0)return "{}";if(ho in s){if(o>bo)return "Unable to print information";let r=t[s[ho]];return Ye(r,t,o+1)}return Za(s,t,o+1)}}catch{return "Unable to print information"}};var ir=e=>{switch(e){case"warn":return "warning";case"clear":return "clear";case"error":return "error";case"log":case"info":default:return "info"}};var ko=({clientId:e,showHeader:t=!0,showSyntaxError:o=!1,maxMessageCount:s,onLogsChange:r,className:n,...c})=>{let{logs:a,reset:p}=So({clientId:e,maxMessageCount:s,showSyntaxError:o}),d=useRef(null);return useEffect(()=>{r==null||r(a),d.current&&(d.current.scrollTop=d.current.scrollHeight);},[r,a]),createElement(Y,{className:l(m({height:"100%",background:"$surface1"}),`${h}-console`,n),...c},t&&createElement(or,null),createElement("div",{ref:d,className:l(m({overflow:"auto",scrollBehavior:"smooth"}))},a.map(({data:u,id:f,method:b},g,y)=>u&&Array.isArray(u)?createElement(Fragment$2,{key:f},u.map((R,N)=>{let F=y.slice(g,y.length);return createElement("div",{key:`${f}-${N}`,className:l(Ya({variant:ir(b)}))},createElement(xe,{code:b==="clear"?R:Ye(R,F),fileType:"js",initMode:"user-visible",showReadOnly:!1,readOnly:!0,wrapContent:!0}))})):null)),createElement(tr,{onClick:p}))},Ya=m({width:"100%",padding:"$space$3 $space$2",fontSize:".85em",position:"relative","&:not(:first-child):after":{content:"",position:"absolute",top:0,left:0,right:0,height:1,background:"$colors$surface3"},".sp-cm":{padding:0},".cm-editor":{background:"none"},".cm-content":{padding:0},[`.${h}-pre-placeholder`]:{margin:"0 !important",fontSize:"1em"},variants:{variant:{error:{color:"$colors$error",background:"$colors$errorSurface","&:not(:first-child):after":{background:"$colors$error",opacity:.07}},warning:{color:"$colors$warning",background:"$colors$warningSurface","&:not(:first-child):after":{background:"$colors$warning",opacity:.07}},clear:{fontStyle:"italic"},info:{}}}});var Bf=e=>{var N,F,X,E,_,B,j,v,$,q,S,k,I,M,O,G,$e,Me,Le,he,Je,we,L,D,U,w,ge,be,Fe,oe,Z,K,ie,de,qe,Co,xo,Ro,Eo,To,No,$o;let t={showTabs:(N=e.options)==null?void 0:N.showTabs,showLineNumbers:(F=e.options)==null?void 0:F.showLineNumbers,showInlineErrors:(X=e.options)==null?void 0:X.showInlineErrors,wrapContent:(E=e.options)==null?void 0:E.wrapContent,closableTabs:(_=e.options)==null?void 0:_.closableTabs,initMode:(B=e.options)==null?void 0:B.initMode,extensions:(v=(j=e.options)==null?void 0:j.codeEditor)==null?void 0:v.extensions,extensionsKeymap:(q=($=e.options)==null?void 0:$.codeEditor)==null?void 0:q.extensionsKeymap,readOnly:(S=e.options)==null?void 0:S.readOnly,showReadOnly:(k=e.options)==null?void 0:k.showReadOnly,id:(I=e.options)==null?void 0:I.id,additionalLanguages:(O=(M=e.options)==null?void 0:M.codeEditor)==null?void 0:O.additionalLanguages},o={activeFile:(G=e.options)==null?void 0:G.activeFile,visibleFiles:($e=e.options)==null?void 0:$e.visibleFiles,recompileMode:(Me=e.options)==null?void 0:Me.recompileMode,recompileDelay:(Le=e.options)==null?void 0:Le.recompileDelay,autorun:(he=e.options)==null?void 0:he.autorun,bundlerURL:(Je=e.options)==null?void 0:Je.bundlerURL,startRoute:(we=e.options)==null?void 0:we.startRoute,skipEval:(L=e.options)==null?void 0:L.skipEval,fileResolver:(D=e.options)==null?void 0:D.fileResolver,initMode:(U=e.options)==null?void 0:U.initMode,initModeObserverOptions:(w=e.options)==null?void 0:w.initModeObserverOptions,externalResources:(ge=e.options)==null?void 0:ge.externalResources,logLevel:(be=e.options)==null?void 0:be.logLevel,classes:(Fe=e.options)==null?void 0:Fe.classes},[s,r]=useState((Z=(oe=e.options)==null?void 0:oe.showConsole)!=null?Z:!1),[n,c]=useState(0),a=((K=e.options)==null?void 0:K.editorWidthPercentage)||50,p=100-a,d=((ie=e.options)==null?void 0:ie.showConsole)||((de=e.options)==null?void 0:de.showConsoleButton),u=d?Y:Fragment$2,f={flexGrow:p,flexShrink:p,flexBasis:0,minWidth:700*(p/(p+a)),gap:s?1:0,height:(qe=e.options)==null?void 0:qe.editorHeight},b=useMemo(()=>d?{style:f}:{},[d]),g=(Co=Ie[e.template])!=null?Co:{},y="mode"in g?g.mode:"preview",R=((xo=e.options)==null?void 0:xo.showConsoleButton)?createElement(Qa,{counter:n,onClick:()=>r(ye=>!ye)}):void 0;return useEffect(()=>{var ye,Mo;r((Mo=(ye=e.options)==null?void 0:ye.showConsole)!=null?Mo:!1);},[(Ro=e.options)==null?void 0:Ro.showConsole]),createElement(qo,{customSetup:e.customSetup,files:e.files,options:o,template:e.template,theme:e.theme},createElement(Ds,null,createElement(gs,{...t,style:{height:(Eo=e.options)==null?void 0:Eo.editorHeight,flexGrow:a,flexShrink:a,minWidth:700*(a/(p+a))}}),createElement(u,{...b},y==="preview"&&createElement(Is,{actionsChildren:R,showNavigator:(To=e.options)==null?void 0:To.showNavigator,showRefreshButton:(No=e.options)==null?void 0:No.showRefreshButton,style:{...f,flex:d?1:f.flexGrow}}),y==="tests"&&createElement(mo,{actionsChildren:R,style:{...f,flex:d?1:f.flexGrow}}),((($o=e.options)==null?void 0:$o.showConsoleButton)||s)&&createElement("div",{className:ti.toString(),style:{flex:s?.5:0}},createElement(ko,{onLogsChange:ye=>c(ye.length),showHeader:!1})))))},Qa=({onClick:e,counter:t})=>createElement("button",{className:l(T,ee,z,ei),onClick:e},createElement(Se,null),t>0&&createElement("span",null,t)),ei=m({position:"relative",span:{background:"$colors$clickable",color:"$colors$surface1",minWidth:12,height:12,padding:"0 2px",borderRadius:12,fontSize:8,lineHeight:"12px",position:"absolute",top:0,right:0}}),ti=m({transition:"flex $transitions$default",width:"100%",overflow:"hidden"});

const SandpackReact = /*#__PURE__*/_mergeNamespaces({
	__proto__: null,
	ANGULAR_TEMPLATE: Ot,
	BackwardIcon: Lo,
	CleanIcon: Fo,
	CloseIcon: Do,
	CodeEditor: xe,
	ConsoleIcon: Se,
	DirectoryIconClosed: Io,
	DirectoryIconOpen: Po,
	ErrorOverlay: kt,
	ExportIcon: Ao,
	FADE_ANIMATION_DURATION: Qt,
	FileIcon: Oo,
	FileTabs: lt,
	ForwardIcon: wo,
	LoadingOverlay: Rt,
	Navigator: Cs,
	OpenInCodeSandboxButton: Ve,
	REACT_TEMPLATE: Dt,
	REACT_TYPESCRIPT_TEMPLATE: Ht,
	RefreshButton: As,
	RefreshIcon: Qe,
	RunButton: pt,
	RunIcon: Ke,
	SANDBOX_TEMPLATES: Ie,
	SANDPACK_THEMES: Ho,
	SOLID_TEMPLATE: Bt,
	SVELTE_TEMPLATE: _t,
	Sandpack: Bf,
	SandpackCodeEditor: gs,
	SandpackCodeViewer: bs,
	SandpackConsole: ko,
	SandpackConsumer: dc,
	SandpackFileExplorer: wp,
	SandpackLayout: Ds,
	SandpackPreview: Is,
	SandpackProvider: qo,
	SandpackProviderClass: Jo,
	SandpackReactContext: nt,
	SandpackReactDevTools: Em,
	SandpackStack: Y,
	SandpackTests: mo,
	SandpackThemeConsumer: Ci,
	SandpackThemeContext: ot,
	SandpackThemeProvider: Go,
	SandpackTranspiledCode: bm,
	TEST_TYPESCRIPT_TEMPLATE: jt,
	UnstyledOpenInCodeSandboxButton: eo,
	VANILLA_TEMPLATE: Ut,
	VANILLA_TYPESCRIPT_TEMPLATE: zt,
	VUE_TEMPLATE: Vt,
	VUE_TEMPLATE_3: Xt,
	defaultDark: et,
	defaultLight: ce,
	getSandpackCssText: dr,
	layoutClassName: da,
	stackClassName: me,
	tabButton: Fr,
	useActiveCode: it,
	useErrorMessage: xs,
	useLoadingOverlayState: Rs,
	useSandpack: x,
	useSandpackClient: vt,
	useSandpackConsole: So,
	useSandpackNavigation: Ts,
	useSandpackTheme: Ce,
	useTranspiledCode: Ns
}, [classer]);

// src/amethyst.ts

// src/nightOwl.ts
var nightOwl = {
  colors: {
    surface1: "#011627",
    surface2: "#243b4c",
    surface3: "#112331",
    clickable: "#6988a1",
    base: "#808080",
    disabled: "#4D4D4D",
    hover: "#c5e4fd",
    accent: "#c5e4fd",
    error: "#ffcdca",
    errorSurface: "#811e18"
  },
  syntax: {
    plain: "#d6deeb",
    comment: { color: "#999999", fontStyle: "italic" },
    keyword: { color: "#c792ea", fontStyle: "italic" },
    tag: "#7fdbca",
    punctuation: "#7fdbca",
    definition: "#82aaff",
    property: { color: "#addb67", fontStyle: "italic" },
    static: "#f78c6c",
    string: "#ecc48d"
  },
  font: {
    body: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    mono: '"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',
    size: "13px",
    lineHeight: "20px"
  }
};

const {
  SandpackProvider,
  SandpackThemeProvider,
  SandpackCodeEditor,
  SandpackPreview
} = SandpackReact;
const indexJs = `
import { createRoot } from 'react-dom/client';
import { ThemeProvider } from '@itwin/itwinui-react';
import App from './App';
import './styles.css';
createRoot(document.getElementById('root')).render(<ThemeProvider theme='dark'><App /></ThemeProvider>);
`;
const indexCss = `
* {
  margin: 0;
  box-sizing: border-box;
}
html { color-scheme: dark; }
#root {
  height: 100vh;
  width: 100vw;
  display: grid;
  place-items: center;
  background: linear-gradient(135deg, hsl(221deg 12% 40%), hsl(221deg 22% 25%));
}
`;
const _arrow_function$1 = ({
  code = "",
  staticComponent,
  ...rest
}) => {
  const id = React.useId();
  const [sandpackClient, setSandpackClient] = React.useState();
  const [isDoneLoading, setIsDoneLoading] = React.useState(false);
  const [isExpanded, setIsExpanded] = React.useState(void 0);
  const shouldShowStatic = false;
  React.useEffect(() => {
    if (isDoneLoading || !sandpackClient) {
      return;
    }
    return sandpackClient.listen((message) => {
      if (message.type === "done") {
        setIsDoneLoading(true);
      }
    });
  }, [isDoneLoading, sandpackClient]);
  return /* @__PURE__ */ jsxs(LiveExampleContext.Provider, {
    value: {
      isExpanded,
      setIsExpanded
    },
    children: [shouldShowStatic , /* @__PURE__ */ jsx(SandpackProvider, {
      template: "react-ts",
      files: {
        "/App.tsx": code.trim(),
        "/index.tsx": {
          code: indexJs.trim(),
          hidden: true
        },
        "/styles.css": {
          code: indexCss.trim(),
          hidden: true
        }
      },
      customSetup: {
        dependencies: {
          "@itwin/itwinui-react": "dev"
        }
      },
      id,
      ...rest,
      children: /* @__PURE__ */ jsxs(SandpackThemeProvider, {
        theme: nightOwl,
        children: [/* @__PURE__ */ jsx(SandpackPreview, {
          ref: (ref) => {
            setSandpackClient(ref?.getClient());
          },
          style: {
            visibility: "visible",
            position: "relative",
            left: void 0
          },
          actionsChildren: /* @__PURE__ */ jsx(Toggle, {})
        }), isExpanded && /* @__PURE__ */ jsx(SandpackCodeEditor, {
          showTabs: false
        })]
      })
    })]
  });
};
const LiveExampleContext = React.createContext({
  isExpanded: void 0,
  setIsExpanded: () => {
  }
});
const Toggle = () => {
  const {
    isExpanded,
    setIsExpanded
  } = React.useContext(LiveExampleContext);
  return /* @__PURE__ */ jsx("button", {
    onClick: () => setIsExpanded((e) => !e),
    className: "show-code-button",
    children: !isExpanded ? "Show code" : "Hide code"
  });
};
__astro_tag_component__(_arrow_function$1, "@astrojs/react");

const $$Astro$8 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/LiveExample.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$LiveExample = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$8, $$props, $$slots);
  Astro2.self = $$LiveExample;
  const { src } = Astro2.props;
  const baseUrl = new URL("..", import.meta.url).href ;
  const codePath = new URL(`./src/examples/${src}`, baseUrl);
  let code = await fs$1.promises.readFile(codePath, "utf8");
  if (code.includes("Copyright (c) Bentley Systems")) {
    code = code.split("\n").slice(4).join("\n");
  }
  const componentName = src.split(".")[0];
  const capitalize = (s) => s.charAt(0).toUpperCase() + s.slice(1);
  AllExamples[`${capitalize(componentName)}StaticExample`];
  AllExamples[`${capitalize(componentName)}MainExample`];
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "LiveExample", _arrow_function$1, { "code": code, "client:visible": true, "client:component-hydration": "visible", "client:component-path": "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/LiveExample", "client:component-export": "default" })}

<style>${unescapeHTML(dr())}</style>

`;
});

const MDXLayout$S = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$S;
  content.file = file$S;
  content.url = url$S;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$S,
    url: url$S,
    content,
    frontmatter: content,
    headings: getHeadings$S(),
    "server:root": true,
    children
  });
};
const frontmatter$S = {
  "title": "Information panel",
  "description": "A way to view additional attributes without leaving the list of items.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/InformationPanel/InformationPanel.tsx",
  "exampleCodeFile1": "InformationPanel.main.tsx",
  "group": "core"
};
function getHeadings$S() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$S(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$S.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$S.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "The information panel is a pattern used primarily in tables. It allows viewing or editing additional details about selected item(s) without leaving the table."
      }), "\n", createVNode(_components.p, {
        children: "The info panel is reserved for complex tables, because it allows the user to gradually explore the content without overwhelming them with too many details. It also helps avoiding the unpleasant horizontal scrolling when the table gets too wide. Not every table requires an information panel."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$S.propsPath
      })]
    })]
  });
}

function MDXContent$S(props = {}) {
  return createVNode(MDXLayout$S, { ...props,
    children: createVNode(_createMdxContent$S, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$S, "astro:jsx");

__astro_tag_component__(MDXContent$S, "astro:jsx");
MDXContent$S[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$S.layout);
const url$S = "/docs/informationpanel";
const file$S = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/informationpanel.mdx";
function rawContent$S() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$S() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$S = MDXContent$S;

const _page2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$S,
	getHeadings: getHeadings$S,
	default: MDXContent$S,
	url: url$S,
	file: file$S,
	rawContent: rawContent$S,
	compiledContent: compiledContent$S,
	Content: Content$S
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$R = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$R;
  content.file = file$R;
  content.url = url$R;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$R,
    url: url$R,
    content,
    frontmatter: content,
    headings: getHeadings$R(),
    "server:root": true,
    children
  });
};
const frontmatter$R = {
  "title": "Expandable block",
  "description": "A pattern for progressive disclosure of information.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/ExpandableBlock/ExpandableBlock.d.ts",
  "exampleCodeFile1": "ExpandableBlock.main.tsx",
  "group": "core"
};
function getHeadings$R() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 3,
    "slug": "expandable-rows",
    "text": "Expandable rows"
  }, {
    "depth": 3,
    "slug": "expandable-blocks",
    "text": "Expandable blocks"
  }, {
    "depth": 2,
    "slug": "usage",
    "text": "Usage"
  }, {
    "depth": 3,
    "slug": "expandable-rows-1",
    "text": "Expandable rows"
  }, {
    "depth": 3,
    "slug": "expandable-blocks-1",
    "text": "Expandable blocks"
  }, {
    "depth": 3,
    "slug": "expandable-blocks-vs-hierarchy-tree",
    "text": "Expandable blocks VS hierarchy tree"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }, {
    "depth": 2,
    "slug": "related-resources",
    "text": "Related resources"
  }];
}

function _createMdxContent$R(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    h3: "h3",
    ul: "ul"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#expandable-rows",
                  children: "Expandable rows"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#expandable-blocks",
                  children: "Expandable blocks"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#usage",
              children: "Usage"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#expandable-rows-1",
                  children: "Expandable rows"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#expandable-blocks-1",
                  children: "Expandable blocks"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#expandable-blocks-vs-hierarchy-tree",
                  children: "Expandable blocks VS hierarchy tree"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#related-resources",
              children: "Related resources"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$R.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$R.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Expandable blocks, called expandable rows when inside a table, are used to progressively disclose information. Read this article to learn more about progressive disclosure. Expandable blocks and rows should not be used with flattened hierarchy or information panels. This type of navigation allows the user to see content inside a parent row or block."
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.h3, {
        id: "expandable-rows",
        children: createVNode(_components.a, {
          href: "#expandable-rows",
          children: "Expandable rows"
        })
      }), "\n", createVNode(_components.p, {
        children: "Expandable rows resemble normal table rows that can be expanded to reveal nested data. An expandable row could optionally be selectable. Because expandable rows are part of a table, the rows must sort based on the table column sort applied. This means expandable rows can not re-arranged, the user must interact with the table header to re-arrange."
      }), "\n", createVNode(_components.p, {
        children: "Expandable rows should not be confused with a tree hierarchy. Unlike trees, they follow a single branch pattern. If you have trouble telling the two apart, the Expandable block VS Hierarchy tree section explains what makes them different."
      }), "\n", createVNode(_components.p, {
        children: "There can be several child elements nested in an expandable row. These indented elements all coexist on the same level without further indentation. If you require more levels, a tree hierarchy is a better pattern for this interaction."
      }), "\n", createVNode(_components.p, {
        children: "The child elements don\u2019t reflect the column titles. They are expected to retain the same properties as the parent row (in the example below, the owner). It\u2019s unnecessary to repeat the properties for the child items because of this, so do not include them in the expanded row area."
      }), "\n", createVNode(_components.p, {
        children: "Child items are not interchangeable between rows, e.g. you cannot drag a child item from row A and drag it in row B like you would move files to a folder."
      }), "\n", createVNode(_components.h3, {
        id: "expandable-blocks",
        children: createVNode(_components.a, {
          href: "#expandable-blocks",
          children: "Expandable blocks"
        })
      }), "\n", createVNode(_components.p, {
        children: "The main block has a label reflecting its content. On click, it expands to reveal more content."
      }), "\n", createVNode(_components.p, {
        children: "An expandable block could display status, a total count, or other helpful information at a glance right aligned within the block header. You may also optionally display descriptor text underneath the title."
      }), "\n", createVNode(_components.p, {
        children: "Expandable blocks don\u2019t always need to be sorted alphabetically, unlike an expandable row which would be sorted based on the table column sort. You may optionally allow expandable blocks to be re-ordered by the user."
      }), "\n", createVNode(_components.p, {
        children: "The visual appearance of an expandable block is different from an expandable row. An expandable block can not be selected / checked like an expandable row can, therefore it is visually styled differently."
      }), "\n", createVNode(_components.h2, {
        id: "usage",
        children: createVNode(_components.a, {
          href: "#usage",
          children: "Usage"
        })
      }), "\n", createVNode(_components.h3, {
        id: "expandable-rows-1",
        children: createVNode(_components.a, {
          href: "#expandable-rows-1",
          children: "Expandable rows"
        })
      }), "\n", createVNode(_components.p, {
        children: "Expandable rows are used in tables. The layout inside expanded rows varies according to requirements. Child rows can be selectable and be an entry point to more content (ex.: downloadable files), or only contain metadata about the parent file. If at least one row within a table is expandable, all rows should follow the same pattern. Avoid mixing regular table rows with expandable rows."
      }), "\n", createVNode(_components.h3, {
        id: "expandable-blocks-1",
        children: createVNode(_components.a, {
          href: "#expandable-blocks-1",
          children: "Expandable blocks"
        })
      }), "\n", createVNode(_components.p, {
        children: "Expandable blocks are used in pages to divide up content in sections, in forms for example. If each section has many fields, using expandable blocks will help alleviate the UI and prevent the user from scrolling endlessly to get to the section they are looking for."
      }), "\n", createVNode(_components.p, {
        children: "Expanded block containing form elements within an interface."
      }), "\n", createVNode(_components.h3, {
        id: "expandable-blocks-vs-hierarchy-tree",
        children: createVNode(_components.a, {
          href: "#expandable-blocks-vs-hierarchy-tree",
          children: "Expandable blocks VS hierarchy tree"
        })
      }), "\n", createVNode(_components.p, {
        children: "While these two patterns may appear similar, they both fulfill a different role and are not interchangeable. Here are some tips to determine if an expandable block or row is what you need."
      }), "\n", createVNode(_components.p, {
        children: "Use an expandable rows/blocks when:"
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "You need a row in a table to display additional metadata that doesn\u2019t align with the column content;"
        }), "\n", createVNode(_components.li, {
          children: "You have a page with different sections all containing user-generated content that would benefit from being split up;"
        }), "\n", createVNode(_components.li, {
          children: "There is only one level of indentation possible at all times;"
        }), "\n", createVNode(_components.li, {
          children: "The content you want to be expandable varies from simple list items to more complex form components (such as text fields, buttons, etc.)."
        }), "\n"]
      }), "\n", createVNode(_components.p, {
        children: "Use a hierarchy tree when:"
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "You require a pattern that works with several levels of data (folder drilling);"
        }), "\n", createVNode(_components.li, {
          children: "There are only list items in the pattern;"
        }), "\n", createVNode(_components.li, {
          children: "The hierarchy is not necessarily linear and may branch out."
        }), "\n"]
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$R.propsPath
      }), "\n", createVNode(_components.h2, {
        id: "related-resources",
        children: createVNode(_components.a, {
          href: "#related-resources",
          children: "Related resources"
        })
      })]
    })]
  });
}

function MDXContent$R(props = {}) {
  return createVNode(MDXLayout$R, { ...props,
    children: createVNode(_createMdxContent$R, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$R, "astro:jsx");

__astro_tag_component__(MDXContent$R, "astro:jsx");
MDXContent$R[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$R.layout);
const url$R = "/docs/expandableblock";
const file$R = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/expandableblock.mdx";
function rawContent$R() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$R() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$R = MDXContent$R;

const _page3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$R,
	getHeadings: getHeadings$R,
	default: MDXContent$R,
	url: url$R,
	file: file$R,
	rawContent: rawContent$R,
	compiledContent: compiledContent$R,
	Content: Content$R
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$Q = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$Q;
  content.file = file$Q;
  content.url = url$Q;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$Q,
    url: url$Q,
    content,
    frontmatter: content,
    headings: getHeadings$Q(),
    "server:root": true,
    children
  });
};
const frontmatter$Q = {
  "title": "Labeled Textarea",
  "description": "A multiline text box.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/LabeledTextarea/LabeledTextarea.tsx",
  "exampleCodeFile1": "LabeledTextarea.main.tsx",
  "group": "inputs"
};
function getHeadings$Q() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$Q(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$Q.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$Q.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$Q.propsPath
      })]
    })]
  });
}

function MDXContent$Q(props = {}) {
  return createVNode(MDXLayout$Q, { ...props,
    children: createVNode(_createMdxContent$Q, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$Q, "astro:jsx");

__astro_tag_component__(MDXContent$Q, "astro:jsx");
MDXContent$Q[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$Q.layout);
const url$Q = "/docs/labeledtextarea";
const file$Q = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/labeledtextarea.mdx";
function rawContent$Q() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$Q() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$Q = MDXContent$Q;

const _page4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$Q,
	getHeadings: getHeadings$Q,
	default: MDXContent$Q,
	url: url$Q,
	file: file$Q,
	rawContent: rawContent$Q,
	compiledContent: compiledContent$Q,
	Content: Content$Q
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$P = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$P;
  content.file = file$P;
  content.url = url$P;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$P,
    url: url$P,
    content,
    frontmatter: content,
    headings: getHeadings$P(),
    "server:root": true,
    children
  });
};
const frontmatter$P = {
  "title": "Dropdown button",
  "description": "Buttons allow users to take actions and make choices with a single tap or click.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Buttons/DropdownButton/DropdownButton.tsx",
  "exampleCodeFile1": "DropdownButton.main.tsx",
  "group": "buttons"
};
function getHeadings$P() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$P(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$P.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$P.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Pressing this button will always open a menu. Upon selecting an option from the menu, the action immediately takes place. The label of the button is not effected from your selection within the menu. The menu button can only be applied to default buttons and borderless buttons."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$P.propsPath
      })]
    })]
  });
}

function MDXContent$P(props = {}) {
  return createVNode(MDXLayout$P, { ...props,
    children: createVNode(_createMdxContent$P, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$P, "astro:jsx");

__astro_tag_component__(MDXContent$P, "astro:jsx");
MDXContent$P[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$P.layout);
const url$P = "/docs/dropdownbutton";
const file$P = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/dropdownbutton.mdx";
function rawContent$P() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$P() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$P = MDXContent$P;

const _page5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$P,
	getHeadings: getHeadings$P,
	default: MDXContent$P,
	url: url$P,
	file: file$P,
	rawContent: rawContent$P,
	compiledContent: compiledContent$P,
	Content: Content$P
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$O = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$O;
  content.file = file$O;
  content.url = url$O;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$O,
    url: url$O,
    content,
    frontmatter: content,
    headings: getHeadings$O(),
    "server:root": true,
    children
  });
};
const frontmatter$O = {
  "title": "Progress linear",
  "description": "Progress indicators express an unspecified wait time or display the length of a process.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/ProgressIndicators/ProgressLinear/ProgressLinear.d.ts",
  "exampleCodeFile1": "ProgressLinear.main.tsx",
  "group": "core"
};
function getHeadings$O() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$O(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$O.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$O.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$O.propsPath
      })]
    })]
  });
}

function MDXContent$O(props = {}) {
  return createVNode(MDXLayout$O, { ...props,
    children: createVNode(_createMdxContent$O, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$O, "astro:jsx");

__astro_tag_component__(MDXContent$O, "astro:jsx");
MDXContent$O[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$O.layout);
const url$O = "/docs/progresslinear";
const file$O = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/progresslinear.mdx";
function rawContent$O() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$O() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$O = MDXContent$O;

const _page6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$O,
	getHeadings: getHeadings$O,
	default: MDXContent$O,
	url: url$O,
	file: file$O,
	rawContent: rawContent$O,
	compiledContent: compiledContent$O,
	Content: Content$O
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$N = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$N;
  content.file = file$N;
  content.url = url$N;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$N,
    url: url$N,
    content,
    frontmatter: content,
    headings: getHeadings$N(),
    "server:root": true,
    children
  });
};
const frontmatter$N = {
  "title": "Progress radial",
  "description": "Progress indicators express an unspecified wait time or display the length of a process.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/ProgressIndicators/ProgressRadial/ProgressRadial.d.ts",
  "exampleCodeFile1": "ProgressRadial.main.tsx",
  "group": "core"
};
function getHeadings$N() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$N(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$N.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$N.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$N.propsPath
      })]
    })]
  });
}

function MDXContent$N(props = {}) {
  return createVNode(MDXLayout$N, { ...props,
    children: createVNode(_createMdxContent$N, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$N, "astro:jsx");

__astro_tag_component__(MDXContent$N, "astro:jsx");
MDXContent$N[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$N.layout);
const url$N = "/docs/progressradial";
const file$N = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/progressradial.mdx";
function rawContent$N() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$N() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$N = MDXContent$N;

const _page7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$N,
	getHeadings: getHeadings$N,
	default: MDXContent$N,
	url: url$N,
	file: file$N,
	rawContent: rawContent$N,
	compiledContent: compiledContent$N,
	Content: Content$N
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$M = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$M;
  content.file = file$M;
  content.url = url$M;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$M,
    url: url$M,
    content,
    frontmatter: content,
    headings: getHeadings$M(),
    "server:root": true,
    children
  });
};
const frontmatter$M = {
  "title": "Side navigation",
  "description": "A left side expandable / collapsable navigation menu.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/SideNavigation/SideNavigation.d.ts",
  "exampleCodeFile1": "SideNavigation.main.tsx",
  "group": "core"
};
function getHeadings$M() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$M(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$M.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$M.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "The side navigation is a way for the user to quickly switch between different workflows within a product. The menu items listed may change from user to user depending on their job function. The side navigation can be viewed in a minimal way using just icons or can be expanded to show labels. Menu items can open a single page or can expand into a submenu."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$M.propsPath
      })]
    })]
  });
}

function MDXContent$M(props = {}) {
  return createVNode(MDXLayout$M, { ...props,
    children: createVNode(_createMdxContent$M, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$M, "astro:jsx");

__astro_tag_component__(MDXContent$M, "astro:jsx");
MDXContent$M[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$M.layout);
const url$M = "/docs/sidenavigation";
const file$M = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/sidenavigation.mdx";
function rawContent$M() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$M() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$M = MDXContent$M;

const _page8 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$M,
	getHeadings: getHeadings$M,
	default: MDXContent$M,
	url: url$M,
	file: file$M,
	rawContent: rawContent$M,
	compiledContent: compiledContent$M,
	Content: Content$M
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$L = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$L;
  content.file = file$L;
  content.url = url$L;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$L,
    url: url$L,
    content,
    frontmatter: content,
    headings: getHeadings$L(),
    "server:root": true,
    children
  });
};
const frontmatter$L = {
  "title": "Labeled Select",
  "description": "A select, also known as a dropdown menu, displays a list of selectable choices and options.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/LabeledSelect/LabeledSelect.tsx",
  "exampleCodeFile1": "LabeledSelect.main.tsx",
  "group": "inputs"
};
function getHeadings$L() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$L(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$L.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$L.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$L.propsPath
      })]
    })]
  });
}

function MDXContent$L(props = {}) {
  return createVNode(MDXLayout$L, { ...props,
    children: createVNode(_createMdxContent$L, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$L, "astro:jsx");

__astro_tag_component__(MDXContent$L, "astro:jsx");
MDXContent$L[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$L.layout);
const url$L = "/docs/labeledselect";
const file$L = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/labeledselect.mdx";
function rawContent$L() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$L() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$L = MDXContent$L;

const _page9 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$L,
	getHeadings: getHeadings$L,
	default: MDXContent$L,
	url: url$L,
	file: file$L,
	rawContent: rawContent$L,
	compiledContent: compiledContent$L,
	Content: Content$L
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$K = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$K;
  content.file = file$K;
  content.url = url$K;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$K,
    url: url$K,
    content,
    frontmatter: content,
    headings: getHeadings$K(),
    "server:root": true,
    children
  });
};
const frontmatter$K = {
  "title": "Non ideal state",
  "description": "A full page error layout.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/NonIdealState/NonIdealState.d.ts",
  "exampleCodeFile1": "NonIdealState.main.tsx",
  "group": "core"
};
function getHeadings$K() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 2,
    "slug": "usage",
    "text": "Usage"
  }, {
    "depth": 3,
    "slug": "error-404",
    "text": "Error 404"
  }, {
    "depth": 3,
    "slug": "error-401--403",
    "text": "Error 401 & 403"
  }, {
    "depth": 3,
    "slug": "error-500",
    "text": "Error 500"
  }, {
    "depth": 3,
    "slug": "error-502",
    "text": "Error 502"
  }, {
    "depth": 3,
    "slug": "error-503",
    "text": "Error 503"
  }, {
    "depth": 3,
    "slug": "timed-out",
    "text": "Timed out"
  }, {
    "depth": 3,
    "slug": "generic-error",
    "text": "Generic error"
  }, {
    "depth": 3,
    "slug": "redirection-notice",
    "text": "Redirection notice"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$K(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    h3: "h3",
    ul: "ul"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#usage",
              children: "Usage"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#error-404",
                  children: "Error 404"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#error-401--403",
                  children: "Error 401 & 403"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#error-500",
                  children: "Error 500"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#error-502",
                  children: "Error 502"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#error-503",
                  children: "Error 503"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#timed-out",
                  children: "Timed out"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#generic-error",
                  children: "Generic error"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#redirection-notice",
                  children: "Redirection notice"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$K.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$K.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Error pages are part of an everyday online experience. There are many types of error pages, but for most, their goal is to communicate to the user that their query was unsuccessful and there are no results to display. A well-designed error pages can potentially soothe some of the frustration that may result from the error. A well-known error page is the 404, that is triggered when the path the user followed led to a dead-end, with a page holding no content. However, if the user is ending up with a page that is displaying nothing, they might be confused and ignore what comes next. It\u2019s why it\u2019s important to put thoughts and time into designing good error pages."
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.p, {
        children: "Each type of error page should be designed based on what you wish to tell the user about that error. First off, the error code, along with a short description, should be displayed so the user can identify the source of the problem. Then, informative text, accompanied with images that can be informative as well and/or decorative to aid the user moving onto the next step. The error illustration should take up no more than \u2153 of the screen width."
      }), "\n", createVNode(_components.h2, {
        id: "usage",
        children: createVNode(_components.a, {
          href: "#usage",
          children: "Usage"
        })
      }), "\n", createVNode(_components.p, {
        children: "Error pages come with their own error and should not be mixed and matched to avoid confusion from one error to another. Here are a few of the error pages you can use."
      }), "\n", createVNode(_components.h3, {
        id: "error-404",
        children: createVNode(_components.a, {
          href: "#error-404",
          children: "Error 404"
        })
      }), "\n", createVNode(_components.p, {
        children: "404, HTTP 404, and 404 Not Found are errors that inform the user that despite the communication with the server was successful, it could not find what was requested. Broken or dead links, as well as erroneous search queries may result in a 404."
      }), "\n", createVNode(_components.h3, {
        id: "error-401--403",
        children: createVNode(_components.a, {
          href: "#error-401--403",
          children: "Error 401 & 403"
        })
      }), "\n", createVNode(_components.p, {
        children: "Both 401 and 403 errors inform of similar yet slightly different situations. They inform the user that they have reached a page they do not have the permission to view, either because the credentials they entered are erroneous (401), or because they simply do not have the rights to access it (403)."
      }), "\n", createVNode(_components.p, {
        children: "A 401 error means the request sent by the client could not be authenticated. It may be because the provided user ID and password are invalid and the server denied access to the client."
      }), "\n", createVNode(_components.p, {
        children: "Potential causes other than invalid credentials;"
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Mistyped URL leading to a restricted area of the site;"
        }), "\n", createVNode(_components.li, {
          children: "Invalid information stored in browser cache and interfering;"
        }), "\n", createVNode(_components.li, {
          children: "Page loaded incorrectly;"
        }), "\n", createVNode(_components.li, {
          children: "Mistake on the site owner\u2019s side."
        }), "\n"]
      }), "\n", createVNode(_components.p, {
        children: "A 403 error means the client encountering it is completely forbidden from accessing the page. In this case, the user cannot do much to resolve it, as the resource is accessible only by the authorized parties."
      }), "\n", createVNode(_components.h3, {
        id: "error-500",
        children: createVNode(_components.a, {
          href: "#error-500",
          children: "Error 500"
        })
      }), "\n", createVNode(_components.p, {
        children: "Also called Internal Server Error, a 500 error code means something went wrong with the website\u2019s server, but it is unable to identify what caused the issue. More often than not, the error is on the user\u2019s side."
      }), "\n", createVNode(_components.h3, {
        id: "error-502",
        children: createVNode(_components.a, {
          href: "#error-502",
          children: "Error 502"
        })
      }), "\n", createVNode(_components.p, {
        children: "Error code 502 is a Bad Gateway error. This means the communication between two servers resulted in an error, leading to a deadend. The user has no control over this error as it happens when there is a miscommunication between online servers."
      }), "\n", createVNode(_components.h3, {
        id: "error-503",
        children: createVNode(_components.a, {
          href: "#error-503",
          children: "Error 503"
        })
      }), "\n", createVNode(_components.p, {
        children: "Service Unavailable is the issue you get from a 503 error. It means the online server has encountered a problem because the network is unavailable (internet connection was interrupted), and thus cannot fulfill the request. The user cannot do anything about this issue."
      }), "\n", createVNode(_components.h3, {
        id: "timed-out",
        children: createVNode(_components.a, {
          href: "#timed-out",
          children: "Timed out"
        })
      }), "\n", createVNode(_components.p, {
        children: "For security reasons, certain web sessions will automatically sign a user out when they remain inactive for a few minutes. The user must then renew the session. This process may or may not require that they re-enter their credentials to resume; this is at developer\u2019s discretion."
      }), "\n", createVNode(_components.h3, {
        id: "generic-error",
        children: createVNode(_components.a, {
          href: "#generic-error",
          children: "Generic error"
        })
      }), "\n", createVNode(_components.p, {
        children: "Used in any error that isn\u2019t discussed above. This error can also be used if you disagree that an illustration doesn\u2019t properly convey your specific error."
      }), "\n", createVNode(_components.h3, {
        id: "redirection-notice",
        children: createVNode(_components.a, {
          href: "#redirection-notice",
          children: "Redirection notice"
        })
      }), "\n", createVNode(_components.p, {
        children: "This one isn\u2019t technically an error, but more of an information page that requires an action from the user. If a clickable link has more than one potential destination, take the user to this page so they can decide where they want to land. A Remember my choice checkbox can be shown below so if the link is used more than once, the user won\u2019t need to select a button every time."
      }), "\n", createVNode(_components.p, {
        children: "If the two destinations offered have the exact same relevance, use hollow buttons for both. If one destination is more likely to be selected than the other based on the user\u2019s goal upon clicking the original link, use a high-visibility button for the most relevant destination, and a hollow button for the other. Always put the high-visibility button on the left."
      }), "\n", createVNode(_components.p, {
        children: "If the amount of redirection locations exceed 2, you may use an alternative design where the redirection selection is made via a select menu."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$K.propsPath
      })]
    })]
  });
}

function MDXContent$K(props = {}) {
  return createVNode(MDXLayout$K, { ...props,
    children: createVNode(_createMdxContent$K, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$K, "astro:jsx");

__astro_tag_component__(MDXContent$K, "astro:jsx");
MDXContent$K[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$K.layout);
const url$K = "/docs/nonidealstate";
const file$K = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/nonidealstate.mdx";
function rawContent$K() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$K() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$K = MDXContent$K;

const _page10 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$K,
	getHeadings: getHeadings$K,
	default: MDXContent$K,
	url: url$K,
	file: file$K,
	rawContent: rawContent$K,
	compiledContent: compiledContent$K,
	Content: Content$K
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$J = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$J;
  content.file = file$J;
  content.url = url$J;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$J,
    url: url$J,
    content,
    frontmatter: content,
    headings: getHeadings$J(),
    "server:root": true,
    children
  });
};
const frontmatter$J = {
  "title": "DropdownMenu",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/DropdownMenu/DropdownMenu.d.ts",
  "exampleCodeFile1": "DropdownMenu.main.tsx",
  "group": "core"
};
function getHeadings$J() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$J(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$J.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$J.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$J.propsPath
      })]
    })]
  });
}

function MDXContent$J(props = {}) {
  return createVNode(MDXLayout$J, { ...props,
    children: createVNode(_createMdxContent$J, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$J, "astro:jsx");

__astro_tag_component__(MDXContent$J, "astro:jsx");
MDXContent$J[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$J.layout);
const url$J = "/docs/dropdownmenu";
const file$J = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/dropdownmenu.mdx";
function rawContent$J() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$J() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$J = MDXContent$J;

const _page11 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$J,
	getHeadings: getHeadings$J,
	default: MDXContent$J,
	url: url$J,
	file: file$J,
	rawContent: rawContent$J,
	compiledContent: compiledContent$J,
	Content: Content$J
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$I = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$I;
  content.file = file$I;
  content.url = url$I;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$I,
    url: url$I,
    content,
    frontmatter: content,
    headings: getHeadings$I(),
    "server:root": true,
    children
  });
};
const frontmatter$I = {
  "title": "Keyboard keys",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Typography/Kbd/Kbd.d.ts",
  "exampleCodeFile1": "Keyboard.main.tsx",
  "group": "typography"
};
function getHeadings$I() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$I(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$I.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$I.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$I.propsPath
      })]
    })]
  });
}

function MDXContent$I(props = {}) {
  return createVNode(MDXLayout$I, { ...props,
    children: createVNode(_createMdxContent$I, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$I, "astro:jsx");

__astro_tag_component__(MDXContent$I, "astro:jsx");
MDXContent$I[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$I.layout);
const url$I = "/docs/keyboardkeys";
const file$I = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/keyboardkeys.mdx";
function rawContent$I() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$I() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$I = MDXContent$I;

const _page12 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$I,
	getHeadings: getHeadings$I,
	default: MDXContent$I,
	url: url$I,
	file: file$I,
	rawContent: rawContent$I,
	compiledContent: compiledContent$I,
	Content: Content$I
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$H = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$H;
  content.file = file$H;
  content.url = url$H;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$H,
    url: url$H,
    content,
    frontmatter: content,
    headings: getHeadings$H(),
    "server:root": true,
    children
  });
};
const frontmatter$H = {
  "title": "Labeled Input",
  "description": "Input let users enter and edit data.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/LabeledInput/LabeledInput.tsx",
  "exampleCodeFile1": "LabeledInput.main.tsx",
  "group": "inputs"
};
function getHeadings$H() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$H(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$H.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$H.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$H.propsPath
      })]
    })]
  });
}

function MDXContent$H(props = {}) {
  return createVNode(MDXLayout$H, { ...props,
    children: createVNode(_createMdxContent$H, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$H, "astro:jsx");

__astro_tag_component__(MDXContent$H, "astro:jsx");
MDXContent$H[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$H.layout);
const url$H = "/docs/labeledinput";
const file$H = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/labeledinput.mdx";
function rawContent$H() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$H() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$H = MDXContent$H;

const _page13 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$H,
	getHeadings: getHeadings$H,
	default: MDXContent$H,
	url: url$H,
	file: file$H,
	rawContent: rawContent$H,
	compiledContent: compiledContent$H,
	Content: Content$H
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$G = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$G;
  content.file = file$G;
  content.url = url$G;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$G,
    url: url$G,
    content,
    frontmatter: content,
    headings: getHeadings$G(),
    "server:root": true,
    children
  });
};
const frontmatter$G = {
  "title": "Toggle Switch",
  "description": "The toggle switch is a high contrast component used for toggling settings that only have two states.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/ToggleSwitch/ToggleSwitch.tsx",
  "exampleCodeFile1": "ToggleSwitch.main.tsx",
  "group": "inputs"
};
function getHeadings$G() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$G(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$G.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$G.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Toggle switches are instant action components used to toggle an option instantly with a single click\nor tap. They are more common in mobile layouts, but are also present in desktop environments. For example,\non mobile, you can go to the settings menu and enable or disable wi-fi, airplane mode and sound with\na single tap using the associated toggle switch."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$G.propsPath
      })]
    })]
  });
}

function MDXContent$G(props = {}) {
  return createVNode(MDXLayout$G, { ...props,
    children: createVNode(_createMdxContent$G, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$G, "astro:jsx");

__astro_tag_component__(MDXContent$G, "astro:jsx");
MDXContent$G[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$G.layout);
const url$G = "/docs/toggleswitch";
const file$G = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/toggleswitch.mdx";
function rawContent$G() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$G() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$G = MDXContent$G;

const _page14 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$G,
	getHeadings: getHeadings$G,
	default: MDXContent$G,
	url: url$G,
	file: file$G,
	rawContent: rawContent$G,
	compiledContent: compiledContent$G,
	Content: Content$G
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$F = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$F;
  content.file = file$F;
  content.url = url$F;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$F,
    url: url$F,
    content,
    frontmatter: content,
    headings: getHeadings$F(),
    "server:root": true,
    children
  });
};
const frontmatter$F = {
  "title": "Breadcrumbs",
  "description": "Navigate a folder hierarchy quickly with a table and breadcrumbs.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Breadcrumbs/Breadcrumbs.tsx",
  "exampleCodeFile1": "Breadcrumbs.main.tsx",
  "group": "core"
};
function getHeadings$F() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 3,
    "slug": "with-links",
    "text": "With links"
  }, {
    "depth": 3,
    "slug": "with-borderless-buttons",
    "text": "With borderless buttons"
  }, {
    "depth": 3,
    "slug": "with-path",
    "text": "With path"
  }, {
    "depth": 2,
    "slug": "usage",
    "text": "Usage"
  }, {
    "depth": 3,
    "slug": "folder-navigation",
    "text": "Folder navigation"
  }, {
    "depth": 3,
    "slug": "web-navigation",
    "text": "Web navigation"
  }, {
    "depth": 2,
    "slug": "breadcrumb-anatomy",
    "text": "Breadcrumb anatomy"
  }, {
    "depth": 2,
    "slug": "breadcrumb-truncation",
    "text": "Breadcrumb truncation"
  }, {
    "depth": 3,
    "slug": "no-need-to-truncate",
    "text": "No need to truncate"
  }, {
    "depth": 3,
    "slug": "first-truncated-element",
    "text": "First truncated element"
  }, {
    "depth": 3,
    "slug": "breadcrumb-minimal-state",
    "text": "Breadcrumb minimal state"
  }, {
    "depth": 3,
    "slug": "edge-case-for-very-small-screens",
    "text": "Edge case (for very small screens)"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }, {
    "depth": 2,
    "slug": "related-resources",
    "text": "Related resources"
  }];
}

function _createMdxContent$F(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    h3: "h3"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#with-links",
                  children: "With links"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#with-borderless-buttons",
                  children: "With borderless buttons"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#with-path",
                  children: "With path"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#usage",
              children: "Usage"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#folder-navigation",
                  children: "Folder navigation"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#web-navigation",
                  children: "Web navigation"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#breadcrumb-anatomy",
              children: "Breadcrumb anatomy"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#breadcrumb-truncation",
              children: "Breadcrumb truncation"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#no-need-to-truncate",
                  children: "No need to truncate"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#first-truncated-element",
                  children: "First truncated element"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#breadcrumb-minimal-state",
                  children: "Breadcrumb minimal state"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#edge-case-for-very-small-screens",
                  children: "Edge case (for very small screens)"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#related-resources",
              children: "Related resources"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$F.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$F.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Breadcrumbs are a way of navigation. They cannot be used (in the same table) with a tree or expandable rows. This type of navigation lets you drill in folders. Once you start drilling in levels, the breadcrumbs are updated to navigate quickly between opened levels."
      }), "\n", createVNode(_components.p, {
        children: "!! Selection and drilling in are 2 different action that don't impact each other. !!"
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.p, {
        children: "There are three styles of breadcrumbs supported."
      }), "\n", createVNode(_components.h3, {
        id: "with-links",
        children: createVNode(_components.a, {
          href: "#with-links",
          children: "With links"
        })
      }), "\n", createVNode(_components.p, {
        children: "The breadcrumbs locations appear as clickable links that the user can use to navigate back and forth, at their leisure. If clicking a location in the breadcrumbs changes the entire page\u2019s path, then using the link style is preferred."
      }), "\n", createVNode(_components.h3, {
        id: "with-borderless-buttons",
        children: createVNode(_components.a, {
          href: "#with-borderless-buttons",
          children: "With borderless buttons"
        })
      }), "\n", createVNode(_components.p, {
        children: "The breadcrumbs locations take the shape of buttons on mouse hover. If clicking a location in the breadcrumbs keeps the user on the same page, but loads a different content inside of it, then using the borderless button style is preferred."
      }), "\n", createVNode(_components.h3, {
        id: "with-path",
        children: createVNode(_components.a, {
          href: "#with-path",
          children: "With path"
        })
      }), "\n", createVNode(_components.p, {
        children: "The breadcrumbs locations can be double-clicked to reveal an editable field with the full path that leads to the user\u2019s current location. The user can freely edit the path to be navigate elsewhere. It also facilitate sharing of file/folder locations by allowing users to copy and paste a direct path."
      }), "\n", createVNode(_components.h2, {
        id: "usage",
        children: createVNode(_components.a, {
          href: "#usage",
          children: "Usage"
        })
      }), "\n", createVNode(_components.h3, {
        id: "folder-navigation",
        children: createVNode(_components.a, {
          href: "#folder-navigation",
          children: "Folder navigation"
        })
      }), "\n", createVNode(_components.p, {
        children: "When located at the root of a folder, the table breadcrumbs should display like the example below. To drill into a folder, the user must click on a folder name."
      }), "\n", createVNode(_components.p, {
        children: "After drilling into the folder, the breadcrumb above the table updates. The user can continue to drill deeper into the folders by clicking on the folder names, or they can return to a parent folder by selecting it within the breadcrumb or using the folder select menu."
      }), "\n", createVNode(_components.h3, {
        id: "web-navigation",
        children: createVNode(_components.a, {
          href: "#web-navigation",
          children: "Web navigation"
        })
      }), "\n", createVNode(_components.p, {
        children: "When used for the web, breadcrumbs work similarly, however the folder button at its front is omitted. It is unnecessary outside of the folder navigation pattern."
      }), "\n", createVNode(_components.h2, {
        id: "breadcrumb-anatomy",
        children: createVNode(_components.a, {
          href: "#breadcrumb-anatomy",
          children: "Breadcrumb anatomy"
        })
      }), "\n", createVNode(_components.ol, {
        children: ["\n", createVNode(_components.li, {
          children: "Select menu entry point. Clicking on the folder and caret icon will expand the select menu containing the list of all accessed folders."
        }), "\n", createVNode(_components.li, {
          children: "Previous folders. Show as many previously accessed folders as possible so that users can quickly go back to an upper level. When space is starting to lack, start truncating items."
        }), "\n", createVNode(_components.li, {
          children: "Current folder location. This shows user\u2019s current location in the folder hierarchy. It appears black to differentiate it from the previous folder links. Although the text isn\u2019t blue it is still clickable and doing so will cause the folder path to appear in a selectable field."
        }), "\n", createVNode(_components.li, {
          children: "Frameless select menu appears as a flyout card above all other elements. When the breadcrumb path is truncated the select menu will show the full list of accessed folders. When the breadcrumb isn\u2019t truncated, the same list will be duplicated in the select menu. The root folder always appears as the first element in the list and the current folder is last."
        }), "\n", createVNode(_components.li, {
          children: "Folder path will appear in a selectable field when clicking on the current folder label in the breadcrumb."
        }), "\n"]
      }), "\n", createVNode(_components.h2, {
        id: "breadcrumb-truncation",
        children: createVNode(_components.a, {
          href: "#breadcrumb-truncation",
          children: "Breadcrumb truncation"
        })
      }), "\n", createVNode(_components.h3, {
        id: "no-need-to-truncate",
        children: createVNode(_components.a, {
          href: "#no-need-to-truncate",
          children: "No need to truncate"
        })
      }), "\n", createVNode(_components.p, {
        children: "Show as many previously accessed folders as possible so that users can quickly go back to an upper level. If all can be shown, show them all."
      }), "\n", createVNode(_components.h3, {
        id: "first-truncated-element",
        children: createVNode(_components.a, {
          href: "#first-truncated-element",
          children: "First truncated element"
        })
      }), "\n", createVNode(_components.p, {
        children: "Try to keep the first level - the root folder - always accessible. Therefore when you start truncating element start with the secondly accessed folder and work your way from there."
      }), "\n", createVNode(_components.h3, {
        id: "breadcrumb-minimal-state",
        children: createVNode(_components.a, {
          href: "#breadcrumb-minimal-state",
          children: "Breadcrumb minimal state"
        })
      }), "\n", createVNode(_components.p, {
        children: "Keep the root folder accessible to allow users to quickly return all the way up to the first folder they accessed. The previous folder should also be kept accessible. That way, users can work their way back up a level until they reach the folder they want even if that folder has been truncated."
      }), "\n", createVNode(_components.h3, {
        id: "edge-case-for-very-small-screens",
        children: createVNode(_components.a, {
          href: "#edge-case-for-very-small-screens",
          children: "Edge case (for very small screens)"
        })
      }), "\n", createVNode(_components.p, {
        children: "Like stated above, you should try to keep the root folder accessible for as long as possible. However, there\u2019s some case when the available space won\u2019t be able to allow for root folder, previous folder, and current folder to be visible at the same time. When that happens you may truncate the root folder to allow at least the previous folder to be accessible."
      }), "\n", createVNode(_components.p, {
        children: "If the available space does not allow to display both the previous folder and current folder, start truncating text."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$F.propsPath
      }), "\n", createVNode(_components.h2, {
        id: "related-resources",
        children: createVNode(_components.a, {
          href: "#related-resources",
          children: "Related resources"
        })
      })]
    })]
  });
}

function MDXContent$F(props = {}) {
  return createVNode(MDXLayout$F, { ...props,
    children: createVNode(_createMdxContent$F, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$F, "astro:jsx");

__astro_tag_component__(MDXContent$F, "astro:jsx");
MDXContent$F[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$F.layout);
const url$F = "/docs/breadcrumbs";
const file$F = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/breadcrumbs.mdx";
function rawContent$F() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$F() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$F = MDXContent$F;

const _page15 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$F,
	getHeadings: getHeadings$F,
	default: MDXContent$F,
	url: url$F,
	file: file$F,
	rawContent: rawContent$F,
	compiledContent: compiledContent$F,
	Content: Content$F
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$E = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$E;
  content.file = file$E;
  content.url = url$E;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$E,
    url: url$E,
    content,
    frontmatter: content,
    headings: getHeadings$E(),
    "server:root": true,
    children
  });
};
const frontmatter$E = {
  "title": "Button group",
  "description": "Buttons allow users to take actions and make choices with a single tap or click.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Buttons/Button/Button.d.ts",
  "exampleCodeFile1": "ButtonGroup.main.tsx",
  "group": "buttons"
};
function getHeadings$E() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$E(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$E.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$E.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "A button group consists of similar tools. The button group can only consist of default buttons or borderless buttons, a button group can not be a mix of the two. If there is not enough space to display all of the buttons, the buttons can truncate into an overflow menu."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$E.propsPath
      })]
    })]
  });
}

function MDXContent$E(props = {}) {
  return createVNode(MDXLayout$E, { ...props,
    children: createVNode(_createMdxContent$E, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$E, "astro:jsx");

__astro_tag_component__(MDXContent$E, "astro:jsx");
MDXContent$E[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$E.layout);
const url$E = "/docs/buttongroup";
const file$E = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/buttongroup.mdx";
function rawContent$E() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$E() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$E = MDXContent$E;

const _page16 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$E,
	getHeadings: getHeadings$E,
	default: MDXContent$E,
	url: url$E,
	file: file$E,
	rawContent: rawContent$E,
	compiledContent: compiledContent$E,
	Content: Content$E
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$D = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$D;
  content.file = file$D;
  content.url = url$D;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$D,
    url: url$D,
    content,
    frontmatter: content,
    headings: getHeadings$D(),
    "server:root": true,
    children
  });
};
const frontmatter$D = {
  "title": "Color picker",
  "description": "A panel containing swatches for selecting colors.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/ColorPicker/ColorPicker.d.ts",
  "exampleCodeFile1": "ColorPicker.main.tsx",
  "group": "core"
};
function getHeadings$D() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$D(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$D.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$D.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "The color picker is extremely flexible. Bits and pieces can be used based on product requirements. If certain parts are not required for your context, they can be left out."
      }), "\n", createVNode(_components.p, {
        children: "There is no hard guidelines for what an advanced color picker contains. The point is that it remains usable and aligns with the user\u2019s workflow. If you are unsure about a product\u2019s use of the color picker, contact a member of the visual team for advice."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$D.propsPath
      })]
    })]
  });
}

function MDXContent$D(props = {}) {
  return createVNode(MDXLayout$D, { ...props,
    children: createVNode(_createMdxContent$D, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$D, "astro:jsx");

__astro_tag_component__(MDXContent$D, "astro:jsx");
MDXContent$D[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$D.layout);
const url$D = "/docs/colorpicker";
const file$D = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/colorpicker.mdx";
function rawContent$D() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$D() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$D = MDXContent$D;

const _page17 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$D,
	getHeadings: getHeadings$D,
	default: MDXContent$D,
	url: url$D,
	file: file$D,
	rawContent: rawContent$D,
	compiledContent: compiledContent$D,
	Content: Content$D
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$C = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$C;
  content.file = file$C;
  content.url = url$C;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$C,
    url: url$C,
    content,
    frontmatter: content,
    headings: getHeadings$C(),
    "server:root": true,
    children
  });
};
const frontmatter$C = {
  "title": "Ideas button",
  "description": "Buttons allow users to take actions and make choices with a single tap or click.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Buttons/IdeasButton/IdeasButton.tsx",
  "exampleCodeFile1": "IdeasButton.main.tsx",
  "group": "buttons"
};
function getHeadings$C() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$C(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$C.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$C.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$C.propsPath
      })]
    })]
  });
}

function MDXContent$C(props = {}) {
  return createVNode(MDXLayout$C, { ...props,
    children: createVNode(_createMdxContent$C, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$C, "astro:jsx");

__astro_tag_component__(MDXContent$C, "astro:jsx");
MDXContent$C[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$C.layout);
const url$C = "/docs/ideasbutton";
const file$C = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/ideasbutton.mdx";
function rawContent$C() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$C() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$C = MDXContent$C;

const _page18 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$C,
	getHeadings: getHeadings$C,
	default: MDXContent$C,
	url: url$C,
	file: file$C,
	rawContent: rawContent$C,
	compiledContent: compiledContent$C,
	Content: Content$C
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$B = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$B;
  content.file = file$B;
  content.url = url$B;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$B,
    url: url$B,
    content,
    frontmatter: content,
    headings: getHeadings$B(),
    "server:root": true,
    children
  });
};
const frontmatter$B = {
  "title": "Split button",
  "description": "Buttons allow users to take actions and make choices with a single tap or click.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Buttons/SplitButton/SplitButton.d.ts",
  "exampleCodeFile1": "SplitButton.main.tsx",
  "group": "buttons"
};
function getHeadings$B() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$B(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$B.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$B.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Pressing this left side of the button will commit the action. Pressing the right side of the button will open a menu. Upon selecting an option from the menu, the action immediately takes place, and the left side of the button\u2019s label will change to match the recent selection."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$B.propsPath
      })]
    })]
  });
}

function MDXContent$B(props = {}) {
  return createVNode(MDXLayout$B, { ...props,
    children: createVNode(_createMdxContent$B, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$B, "astro:jsx");

__astro_tag_component__(MDXContent$B, "astro:jsx");
MDXContent$B[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$B.layout);
const url$B = "/docs/splitbutton";
const file$B = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/splitbutton.mdx";
function rawContent$B() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$B() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$B = MDXContent$B;

const _page19 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$B,
	getHeadings: getHeadings$B,
	default: MDXContent$B,
	url: url$B,
	file: file$B,
	rawContent: rawContent$B,
	compiledContent: compiledContent$B,
	Content: Content$B
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$A = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$A;
  content.file = file$A;
  content.url = url$A;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$A,
    url: url$A,
    content,
    frontmatter: content,
    headings: getHeadings$A(),
    "server:root": true,
    children
  });
};
const frontmatter$A = {
  "title": "Typography",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Typography/Headline/Headline.tsx",
  "exampleCodeFile1": "Typography.main.tsx",
  "group": "typography"
};
function getHeadings$A() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$A(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$A.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$A.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$A.propsPath
      })]
    })]
  });
}

function MDXContent$A(props = {}) {
  return createVNode(MDXLayout$A, { ...props,
    children: createVNode(_createMdxContent$A, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$A, "astro:jsx");

__astro_tag_component__(MDXContent$A, "astro:jsx");
MDXContent$A[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$A.layout);
const url$A = "/docs/Typography";
const file$A = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/Typography.mdx";
function rawContent$A() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$A() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$A = MDXContent$A;

const _page20 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$A,
	getHeadings: getHeadings$A,
	default: MDXContent$A,
	url: url$A,
	file: file$A,
	rawContent: rawContent$A,
	compiledContent: compiledContent$A,
	Content: Content$A
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$z = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$z;
  content.file = file$z;
  content.url = url$z;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$z,
    url: url$z,
    content,
    frontmatter: content,
    headings: getHeadings$z(),
    "server:root": true,
    children
  });
};
const frontmatter$z = {
  "title": "Blockquote",
  "description": "Indicates the quotation of a large selection of text from another source.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Typography/Blockquote/Blockquote.tsx",
  "exampleCodeFile1": "Blockquote.main.tsx",
  "group": "typography"
};
function getHeadings$z() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$z(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$z.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$z.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Blockquotes are used to isolate and highlight a large quotation made by a source that is external from the content it is quoted in. Sourcing its provenance and original author is strongly suggested. The source is displayed in the bottom right of the blockquote."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$z.propsPath
      })]
    })]
  });
}

function MDXContent$z(props = {}) {
  return createVNode(MDXLayout$z, { ...props,
    children: createVNode(_createMdxContent$z, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$z, "astro:jsx");

__astro_tag_component__(MDXContent$z, "astro:jsx");
MDXContent$z[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$z.layout);
const url$z = "/docs/blockquote";
const file$z = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/blockquote.mdx";
function rawContent$z() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$z() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$z = MDXContent$z;

const _page21 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$z,
	getHeadings: getHeadings$z,
	default: MDXContent$z,
	url: url$z,
	file: file$z,
	rawContent: rawContent$z,
	compiledContent: compiledContent$z,
	Content: Content$z
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$y = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$y;
  content.file = file$y;
  content.url = url$y;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$y,
    url: url$y,
    content,
    frontmatter: content,
    headings: getHeadings$y(),
    "server:root": true,
    children
  });
};
const frontmatter$y = {
  "title": "DatePicker",
  "description": "Used for selecting dates on a calendar to set timeframes, deadlines, and more.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/DatePicker/DatePicker.d.ts",
  "exampleCodeFile1": "DatePicker.main.tsx",
  "group": "core"
};
function getHeadings$y() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 3,
    "slug": "default",
    "text": "Default"
  }, {
    "depth": 3,
    "slug": "text-field",
    "text": "Text field"
  }, {
    "depth": 3,
    "slug": "inline",
    "text": "Inline"
  }, {
    "depth": 3,
    "slug": "with-time",
    "text": "With time"
  }, {
    "depth": 3,
    "slug": "date-spans",
    "text": "Date spans"
  }, {
    "depth": 3,
    "slug": "year-skipping",
    "text": "Year skipping"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$y(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    h3: "h3"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#default",
                  children: "Default"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#text-field",
                  children: "Text field"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#inline",
                  children: "Inline"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#with-time",
                  children: "With time"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#date-spans",
                  children: "Date spans"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#year-skipping",
                  children: "Year skipping"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$y.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$y.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "When a user needs to schedule deadlines, timeframes, or for age verification purposes, we provide them with a date picker. It behaves much like a select menu. We currently have three different types of date pickers."
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.h3, {
        id: "default",
        children: createVNode(_components.a, {
          href: "#default",
          children: "Default"
        })
      }), "\n", createVNode(_components.p, {
        children: "The default date picker is a default menu button from which an interactive calendar expands on click. This allows the user to visually select the date rather than entering the date with a keyboard. This has the advantage of also showing weekdays, which may be important in a given context. The date picker is commonly used within column filters."
      }), "\n", createVNode(_components.h3, {
        id: "text-field",
        children: createVNode(_components.a, {
          href: "#text-field",
          children: "Text field"
        })
      }), "\n", createVNode(_components.p, {
        children: "There are two ways to select a date with the text field date picker; clicking on the button and selecting a date, or typing it out using the format shown in the help message underneath the field (DD-MM-YYYY). The date automatically fills the text field when directly selected in the calendar and is editable. It\u2019s a more convenient way to offer editing in a context where the user might need to change the date often, or enter different dates for several items in a workflow."
      }), "\n", createVNode(_components.h3, {
        id: "inline",
        children: createVNode(_components.a, {
          href: "#inline",
          children: "Inline"
        })
      }), "\n", createVNode(_components.p, {
        children: "The inline date picker was styled to be used in forms. The horizontally centered label helps the component belong in a form without breaking the flow."
      }), "\n", createVNode(_components.h3, {
        id: "with-time",
        children: createVNode(_components.a, {
          href: "#with-time",
          children: "With time"
        })
      }), "\n", createVNode(_components.p, {
        children: "If you need to include the time, there are multiple ways to do so. If it is only required to select a time within 15 minute increments, it is suggested to combine the time picker with the date picker."
      }), "\n", createVNode(_components.p, {
        children: "You may choose to display the time in military format and exclude the period picker."
      }), "\n", createVNode(_components.p, {
        children: "If the user needs the ability to enter a specific time, we suggest displaying the time within it\u2019s own select menu within close proximity of the date picker. The user can select a time from the dropdown menu or manually enter a specific time."
      }), "\n", createVNode(_components.h3, {
        id: "date-spans",
        children: createVNode(_components.a, {
          href: "#date-spans",
          children: "Date spans"
        })
      }), "\n", createVNode(_components.p, {
        children: "There may be some cases where you need to display a span of dates. When this occurs, the selection box spans the entirety of the date span."
      }), "\n", createVNode(_components.h3, {
        id: "year-skipping",
        children: createVNode(_components.a, {
          href: "#year-skipping",
          children: "Year skipping"
        })
      }), "\n", createVNode(_components.p, {
        children: "To improve user experience, date pickers support year skipping buttons. Clicking on the double chevron icon will move the calendar a full year forward or back."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$y.propsPath
      })]
    })]
  });
}

function MDXContent$y(props = {}) {
  return createVNode(MDXLayout$y, { ...props,
    children: createVNode(_createMdxContent$y, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$y, "astro:jsx");

__astro_tag_component__(MDXContent$y, "astro:jsx");
MDXContent$y[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$y.layout);
const url$y = "/docs/datepicker";
const file$y = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/datepicker.mdx";
function rawContent$y() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$y() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$y = MDXContent$y;

const _page22 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$y,
	getHeadings: getHeadings$y,
	default: MDXContent$y,
	url: url$y,
	file: file$y,
	rawContent: rawContent$y,
	compiledContent: compiledContent$y,
	Content: Content$y
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$x = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$x;
  content.file = file$x;
  content.url = url$x;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$x,
    url: url$x,
    content,
    frontmatter: content,
    headings: getHeadings$x(),
    "server:root": true,
    children
  });
};
const frontmatter$x = {
  "title": "File upload",
  "description": "Keep the user informed of their file upload progress.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/FileUpload/FileUpload.d.ts",
  "exampleCodeFile1": "FileUpload.main.tsx",
  "group": "core"
};
function getHeadings$x() {
  return [{
    "depth": 2,
    "slug": "chat",
    "text": "Chat"
  }, {
    "depth": 2,
    "slug": "table",
    "text": "Table"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$x(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#chat",
              children: "Chat"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#table",
              children: "Table"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$x.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$x.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "File uploading is a common interaction most users do multiple times per day. File uploading may happen in various different ways depending on the context. While the overall design may differ from UI to UI, the basics always stay the same: let the user know they can upload content, display upload status progress, and confirm that the upload\u2019s status upon completion."
      }), "\n", createVNode(_components.h2, {
        id: "chat",
        children: createVNode(_components.a, {
          href: "#chat",
          children: "Chat"
        })
      }), "\n", createVNode(_components.p, {
        children: "The user can either click on an attach icon or drag & drop a file over the text area. The text area will visibly change when a file is dragged above it. Once the user drops the file above the text area a progress indicator appears. Depending on the applications needs, one of two things can happen."
      }), "\n", createVNode(_components.p, {
        children: "The file could immediately be uploaded and added to the chat stream without any additional input from the user. Because there is no way to stop / cancel the upload it is a good idea to allow users to retract / delete messages after they have been sent."
      }), "\n", createVNode(_components.p, {
        children: "The second option is the file could be queued within the message itself. This gives the user a chance to remove the file if they have changed their mind or accidentally uploaded the wrong file. This method does require an additional step from the user but is typically safer than the previous method."
      }), "\n", createVNode(_components.h2, {
        id: "table",
        children: createVNode(_components.a, {
          href: "#table",
          children: "Table"
        })
      }), "\n", createVNode(_components.p, {
        children: "The user can either click on an upload button or drag & drop a file over the table. The table will visibly change when a file is dragged above it. Once the user drops the file above the table two things happen simultaneously."
      }), "\n", createVNode(_components.p, {
        children: "First, the file appears at the top of the table. The files that are being uploaded are visually different from the rest of the files so the user knows they are an upload in progress. As the files upload, they visually change to match the rest of the files. Once the file is finished uploading, it remains at the top of the table despite sort filters applied. Upon any sort of table refresh (page refresh, a new column sort, etc) the most recently uploaded files that were at the top are then sorted amongst the rest of the files."
      }), "\n", createVNode(_components.p, {
        children: "The second thing that happens when a file is uploaded is the upload tracker appears in the bottom right. This allows the user to track their upload progress if they navigate further down the page when infinite scrolling is enabled / navigate to a deeper page when pagination is enabled."
      }), "\n", createVNode(_components.p, {
        children: "In some cases, there may be a table with no files uploaded yet. In a situation like this, we display an empty state explaining how to populate the table."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$x.propsPath
      })]
    })]
  });
}

function MDXContent$x(props = {}) {
  return createVNode(MDXLayout$x, { ...props,
    children: createVNode(_createMdxContent$x, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$x, "astro:jsx");

__astro_tag_component__(MDXContent$x, "astro:jsx");
MDXContent$x[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$x.layout);
const url$x = "/docs/fileupload";
const file$x = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/fileupload.mdx";
function rawContent$x() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$x() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$x = MDXContent$x;

const _page23 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$x,
	getHeadings: getHeadings$x,
	default: MDXContent$x,
	url: url$x,
	file: file$x,
	rawContent: rawContent$x,
	compiledContent: compiledContent$x,
	Content: Content$x
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$w = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$w;
  content.file = file$w;
  content.url = url$w;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$w,
    url: url$w,
    content,
    frontmatter: content,
    headings: getHeadings$w(),
    "server:root": true,
    children
  });
};
const frontmatter$w = {
  "title": "Icon button",
  "description": "Buttons allow users to take actions and make choices with a single tap or click.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Buttons/IconButton/IconButton.d.ts",
  "exampleCodeFile1": "IconButton.main.tsx",
  "group": "buttons"
};
function getHeadings$w() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$w(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$w.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$w.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$w.propsPath
      })]
    })]
  });
}

function MDXContent$w(props = {}) {
  return createVNode(MDXLayout$w, { ...props,
    children: createVNode(_createMdxContent$w, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$w, "astro:jsx");

__astro_tag_component__(MDXContent$w, "astro:jsx");
MDXContent$w[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$w.layout);
const url$w = "/docs/iconbutton";
const file$w = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/iconbutton.mdx";
function rawContent$w() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$w() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$w = MDXContent$w;

const _page24 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$w,
	getHeadings: getHeadings$w,
	default: MDXContent$w,
	url: url$w,
	file: file$w,
	rawContent: rawContent$w,
	compiledContent: compiledContent$w,
	Content: Content$w
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$v = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$v;
  content.file = file$v;
  content.url = url$v;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$v,
    url: url$v,
    content,
    frontmatter: content,
    headings: getHeadings$v(),
    "server:root": true,
    children
  });
};
const frontmatter$v = {
  "title": "Input group",
  "description": "Input let users enter and edit data.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/InputGroup/InputGroup.d.ts",
  "exampleCodeFile1": "InputGroup.main.tsx",
  "group": "inputs"
};
function getHeadings$v() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$v(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$v.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$v.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$v.propsPath
      })]
    })]
  });
}

function MDXContent$v(props = {}) {
  return createVNode(MDXLayout$v, { ...props,
    children: createVNode(_createMdxContent$v, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$v, "astro:jsx");

__astro_tag_component__(MDXContent$v, "astro:jsx");
MDXContent$v[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$v.layout);
const url$v = "/docs/inputgroup";
const file$v = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/inputgroup.mdx";
function rawContent$v() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$v() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$v = MDXContent$v;

const _page25 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$v,
	getHeadings: getHeadings$v,
	default: MDXContent$v,
	url: url$v,
	file: file$v,
	rawContent: rawContent$v,
	compiledContent: compiledContent$v,
	Content: Content$v
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$u = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$u;
  content.file = file$u;
  content.url = url$u;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$u,
    url: url$u,
    content,
    frontmatter: content,
    headings: getHeadings$u(),
    "server:root": true,
    children
  });
};
const frontmatter$u = {
  "title": "Radio Tile",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/RadioTiles/RadioTile.tsx",
  "exampleCodeFile1": "RadioTile.main.tsx",
  "group": "inputs"
};
function getHeadings$u() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$u(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$u.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$u.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$u.propsPath
      })]
    })]
  });
}

function MDXContent$u(props = {}) {
  return createVNode(MDXLayout$u, { ...props,
    children: createVNode(_createMdxContent$u, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$u, "astro:jsx");

__astro_tag_component__(MDXContent$u, "astro:jsx");
MDXContent$u[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$u.layout);
const url$u = "/docs/radiotile";
const file$u = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/radiotile.mdx";
function rawContent$u() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$u() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$u = MDXContent$u;

const _page26 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$u,
	getHeadings: getHeadings$u,
	default: MDXContent$u,
	url: url$u,
	file: file$u,
	rawContent: rawContent$u,
	compiledContent: compiledContent$u,
	Content: Content$u
}, Symbol.toStringTag, { value: 'Module' }));

const _arrow_function = ({
  colors
}) => {
  return /* @__PURE__ */ jsx("div", {
    "data-iui-theme": "dark",
    className: "color-list",
    children: colors.map((color) => /* @__PURE__ */ jsx(Tippy, {
      content: /* @__PURE__ */ jsx("div", {
        className: "color-tooltip",
        children: color
      }),
      aria: {
        content: "labelledby"
      },
      delay: 0,
      duration: [300, 50],
      interactive: true,
      allowHTML: true,
      maxWidth: 450,
      children: /* @__PURE__ */ jsx("button", {
        "aria-label": color,
        className: "color-list-item",
        style: {
          "--_color": color
        }
      }, color)
    }, color))
  });
};
__astro_tag_component__(_arrow_function, "@astrojs/react");

const $$Astro$7 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/ColorList.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$ColorList = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$7, $$props, $$slots);
  Astro2.self = $$ColorList;
  const { colors, ...rest } = Astro2.props;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<article${addAttribute([[{ "color-list-wrapper": Array.isArray(colors[0]) }], "astro-2Y2HWWOR"], "class:list")}${spreadAttributes(rest)}>
  ${Array.isArray(colors[0]) ? renderTemplate`${renderComponent($$result, "Fragment", Fragment, { "class": "astro-2Y2HWWOR" }, { "default": () => renderTemplate`${colors.map((_colors) => renderTemplate`${renderComponent($$result, "ColorList", _arrow_function, { "client:visible": true, "colors": _colors, "client:component-hydration": "visible", "client:component-path": "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/ColorList", "client:component-export": "default", "class": "astro-2Y2HWWOR" })}`)}` })}` : renderTemplate`${renderComponent($$result, "ColorList", _arrow_function, { "client:visible": true, "colors": colors, "client:component-hydration": "visible", "client:component-path": "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/ColorList", "client:component-export": "default", "class": "astro-2Y2HWWOR" })}`}
</article>



`;
});

const $$Astro$6 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/_wrapper.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$Wrapper = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$6, $$props, $$slots);
  Astro2.self = $$Wrapper;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<article data-iui-theme="dark"${spreadAttributes(Astro2.props, "Astro.props", { "class": "astro-76LTPSV3" })}>
  ${renderSlot($$result, $$slots["default"])}
</article>

`;
});

const $$Astro$5 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/FontsDemo.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$FontsDemo = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$5, $$props, $$slots);
  Astro2.self = $$FontsDemo;
  const { sizes, weights } = Astro2.props;
  const howMany = sizes ? 6 : 4;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "Wrapper", $$Wrapper, { "class:list": [[{ sizes, weights: !sizes && weights }], "astro-JS5Z46XV"] }, { "default": () => renderTemplate`${Array.from({ length: howMany }).map((_, i) => renderTemplate`${maybeRenderHead($$result)}<p class="astro-JS5Z46XV">The quick brown fox jumped over the lazy dog</p>`)}` })}

`;
});

const $$Astro$4 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/SizesDemo.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$SizesDemo = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$4, $$props, $$slots);
  Astro2.self = $$SizesDemo;
  const sizes = ["3xs", "2xs", "xs", "s", "m", "l", "xl", "2xl", "3xl"];
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "Wrapper", $$Wrapper, { "class": "wrapper astro-KJKUJCCI" }, { "default": () => renderTemplate`${sizes.map((size) => renderTemplate`${maybeRenderHead($$result)}<div class="astro-KJKUJCCI">
        <span class="astro-KJKUJCCI">${`--iui-size-${size}`}</span>
        <span class="box astro-KJKUJCCI"${addAttribute({ "--size": `var(--iui-size-${size})` }, "style")}></span>
      </div>`)}` })}

`;
});

const $$Astro$3 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/_item.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$Item = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$3, $$props, $$slots);
  Astro2.self = $$Item;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<div${spreadAttributes(Astro2.props, "Astro.props", { "class": "astro-IKXTA7MF" })}>
  ${renderSlot($$result, $$slots["default"])}
</div>

`;
});

const $$Astro$2 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/OpacityDemo.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$OpacityDemo = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
  Astro2.self = $$OpacityDemo;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "Wrapper", $$Wrapper, { "class": "astro-G5RSZRGQ" }, { "default": () => renderTemplate`${[...Array(6)].map((_, i) => renderTemplate`${renderComponent($$result, "Item", $$Item, { "class": "item astro-G5RSZRGQ", "style": `--_opacity: var(--iui-opacity-${i + 1})` }, { "default": () => renderTemplate`${i + 1}` })}`)}` })}

`;
});

const $$Astro$1 = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/BorderRadiusDemo.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$BorderRadiusDemo = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$BorderRadiusDemo;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "Wrapper", $$Wrapper, { "class": "astro-AIPGJPB4" }, { "default": () => renderTemplate`${renderComponent($$result, "Item", $$Item, { "class": "item astro-AIPGJPB4" }, { "default": () => renderTemplate`1` })}${renderComponent($$result, "Item", $$Item, { "class": "item astro-AIPGJPB4" }, { "default": () => renderTemplate`round` })}` })}

`;
});

const $$Astro = createAstro("C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/components/variables/ShadowsDemo.astro", "", "file:///C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/");
const $$ShadowsDemo = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$ShadowsDemo;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "Wrapper", $$Wrapper, { "class": "astro-YFRYU2OC" }, { "default": () => renderTemplate`${[...Array(6)].map((_, i) => renderTemplate`${renderComponent($$result, "Item", $$Item, { "class": "item astro-YFRYU2OC", "style": `--_shadow: var(--iui-shadow-${i})` }, { "default": () => renderTemplate`${i}` })}`)}` })}

`;
});

const MDXLayout$t = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$t;
  content.file = file$t;
  content.url = url$t;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$t,
    url: url$t,
    content,
    frontmatter: content,
    headings: getHeadings$t(),
    "server:root": true,
    children
  });
};
const frontmatter$t = {
  "title": "Variables",
  "description": "Use iTwinUI-variables to integrate design tokens into your application.",
  "layout": "./_layout.astro",
  "toc": false
};
function getHeadings$t() {
  return [{
    "depth": 2,
    "slug": "installation",
    "text": "Installation"
  }, {
    "depth": 2,
    "slug": "variables",
    "text": "Variables"
  }, {
    "depth": 3,
    "slug": "background-colors",
    "text": "Background colors"
  }, {
    "depth": 3,
    "slug": "foreground-colors",
    "text": "Foreground colors"
  }, {
    "depth": 3,
    "slug": "status-backgrounds",
    "text": "Status backgrounds"
  }, {
    "depth": 3,
    "slug": "status-foregrounds",
    "text": "Status foregrounds"
  }, {
    "depth": 3,
    "slug": "soft-backgrounds",
    "text": "Soft backgrounds"
  }, {
    "depth": 3,
    "slug": "sizes",
    "text": "Sizes"
  }, {
    "depth": 3,
    "slug": "border-radius",
    "text": "Border radius"
  }, {
    "depth": 3,
    "slug": "typography",
    "text": "Typography"
  }, {
    "depth": 3,
    "slug": "opacity",
    "text": "Opacity"
  }, {
    "depth": 3,
    "slug": "shadows",
    "text": "Shadows"
  }];
}

function _createMdxContent$t(props) {
  const _components = Object.assign({
    main: "main",
    h2: "h2",
    a: "a",
    p: "p",
    pre: "pre",
    code: "code",
    span: "span",
    h3: "h3",
    ul: "ul",
    li: "li",
    em: "em"
  }, props.components);

  return createVNode(_components.main, {
    children: ["\n", createVNode(_components.h2, {
      id: "installation",
      children: createVNode(_components.a, {
        href: "#installation",
        children: "Installation"
      })
    }), "\n", createVNode(_components.p, {
      children: "If you're using iTwinUI-react, the variables will be automatically included and imported into your application.\nIf you want to use it standalone, you can install and import it manually:"
    }), "\n", createVNode(_components.pre, {
      className: "language-shell",
      children: createVNode(_components.code, {
        className: "language-shell",
        children: [createVNode(_components.span, {
          className: "token function",
          children: "npm"
        }), " ", createVNode(_components.span, {
          className: "token function",
          children: "install"
        }), " @itwin/itwinui-variables"]
      })
    }), "\n", createVNode(_components.pre, {
      className: "language-js",
      children: createVNode(_components.code, {
        className: "language-js",
        children: [createVNode(_components.span, {
          className: "token keyword",
          children: "import"
        }), " ", createVNode(_components.span, {
          className: "token string",
          children: "'@itwin/itwinui-variables'"
        }), createVNode(_components.span, {
          className: "token punctuation",
          children: ";"
        })]
      })
    }), "\n", createVNode(_components.h2, {
      id: "variables",
      children: createVNode(_components.a, {
        href: "#variables",
        children: "Variables"
      })
    }), "\n", createVNode(_components.h3, {
      id: "background-colors",
      children: createVNode(_components.a, {
        href: "#background-colors",
        children: "Background colors"
      })
    }), "\n", createVNode(_components.p, {
      children: "The main background colors increase in darkness from 1 to 5."
    }), "\n", createVNode(_components.ul, {
      children: ["\n", createVNode(_components.li, {
        children: [createVNode(_components.code, {
          children: "background-2"
        }), " should be used as the main body background."]
      }), "\n", createVNode(_components.li, {
        children: [createVNode(_components.code, {
          children: "background-1"
        }), " is for surface elements placed over the body."]
      }), "\n", createVNode(_components.li, {
        children: "The rest of them are used for inactive elements and borders."
      }), "\n"]
    }), "\n", createVNode($$ColorList, {
      colors: ["var(--iui-color-background-1)", "var(--iui-color-background-2)", "var(--iui-color-background-3)", "var(--iui-color-background-4)", "var(--iui-color-background-5)"]
    }), "\n", createVNode(_components.p, {
      children: "There are also a few special named colors for some borders, disabled and hover states. These offer\nbetter contrast in high-contrast themes."
    }), "\n", createVNode($$ColorList, {
      colors: ["var(--iui-color-background-border)", "var(--iui-color-background-disabled)", "var(--iui-color-background-transparent-hover)"]
    }), "\n", createVNode(_components.h3, {
      id: "foreground-colors",
      children: createVNode(_components.a, {
        href: "#foreground-colors",
        children: "Foreground colors"
      })
    }), "\n", createVNode(_components.p, {
      children: "The foreground colors also increase in darkness from 1 to 5."
    }), "\n", createVNode(_components.ul, {
      children: ["\n", createVNode(_components.li, {
        children: [createVNode(_components.code, {
          children: "foreground-2"
        }), " is the main text color."]
      }), "\n", createVNode(_components.li, {
        children: [createVNode(_components.code, {
          children: "foreground-1"
        }), " is pure white/black, useful for increased contrast over colored backgrounds."]
      }), "\n", createVNode(_components.li, {
        children: "The rest are used for borders and disabled foreground elements."
      }), "\n"]
    }), "\n", createVNode($$ColorList, {
      colors: ["var(--iui-color-foreground-1)", "var(--iui-color-foreground-2)", "var(--iui-color-foreground-3)", "var(--iui-color-foreground-4)", "var(--iui-color-foreground-5)"]
    }), "\n", createVNode(_components.h3, {
      id: "status-backgrounds",
      children: createVNode(_components.a, {
        href: "#status-backgrounds",
        children: "Status backgrounds"
      })
    }), "\n", createVNode(_components.p, {
      children: "The status colors are used for indicating the status of an element: success, warning, error, or informational."
    }), "\n", createVNode($$ColorList, {
      colors: [["var(--iui-color-background-primary)", "var(--iui-color-background-positive)", "var(--iui-color-background-negative)", "var(--iui-color-background-warning)"], ["var(--iui-color-background-primary-hover)", "var(--iui-color-background-positive-hover)"]]
    }), "\n", createVNode(_components.p, {
      children: "Because the default status backgrounds feel so heavy and saturated, iTwinUI also offers a set of subtle background colors.\nThese should be used when there is text on top of them."
    }), "\n", createVNode($$ColorList, {
      colors: ["var(--iui-color-background-subtle-primary)", "var(--iui-color-background-subtle-positive)", "var(--iui-color-background-subtle-negative)", "var(--iui-color-background-subtle-warning)"]
    }), "\n", createVNode(_components.h3, {
      id: "status-foregrounds",
      children: createVNode(_components.a, {
        href: "#status-foregrounds",
        children: "Status foregrounds"
      })
    }), "\n", createVNode(_components.p, {
      children: "Similarly, there are foreground status colors and their hover states."
    }), "\n", createVNode($$ColorList, {
      colors: [["var(--iui-color-foreground-primary)", "var(--iui-color-foreground-positive)", "var(--iui-color-foreground-negative)", "var(--iui-color-foreground-warning)"], ["var(--iui-color-foreground-primary-hover)", "var(--iui-color-foreground-positive-hover)", "var(--iui-color-foreground-negative-hover)", "var(--iui-color-foreground-warning-hover)"]]
    }), "\n", createVNode(_components.h3, {
      id: "soft-backgrounds",
      children: createVNode(_components.a, {
        href: "#soft-backgrounds",
        children: "Soft backgrounds"
      })
    }), "\n", createVNode(_components.p, {
      children: "These soft backgrounds can be used for badges and avatars."
    }), "\n", createVNode($$ColorList, {
      colors: ["var(--iui-color-background-skyblue)", "var(--iui-color-background-celery)", "var(--iui-color-background-froly)", "var(--iui-color-background-steelblue)", "var(--iui-color-background-sunglow)", "var(--iui-color-background-seabuckthorn)", "var(--iui-color-background-montecarlo)", "var(--iui-color-background-poloblue)", "var(--iui-color-background-bouquet)", "var(--iui-color-background-ash)", "var(--iui-color-background-oak)"]
    }), "\n", createVNode(_components.h3, {
      id: "sizes",
      children: createVNode(_components.a, {
        href: "#sizes",
        children: "Sizes"
      })
    }), "\n", createVNode(_components.p, {
      children: ["iTwinUI's spacing scale follows t-shirt sizes as a naming convention, where ", createVNode(_components.code, {
        children: "m"
      }), " corresponds to ", createVNode(_components.code, {
        children: "1rem"
      }), ", with ", createVNode(_components.code, {
        children: "3xs"
      }), " being the smallest and ", createVNode(_components.code, {
        children: "3xl"
      }), " being the largest."]
    }), "\n", createVNode($$SizesDemo, {}), "\n", createVNode(_components.h3, {
      id: "border-radius",
      children: createVNode(_components.a, {
        href: "#border-radius",
        children: "Border radius"
      })
    }), "\n", createVNode(_components.p, {
      children: ["Most iTwinUI components use ", createVNode(_components.code, {
        children: "var(--iui-border-radius-1)"
      }), ". For pill-shaped components, iTwinUI also offers ", createVNode(_components.code, {
        children: "var(--iui-border-radius-round)"
      }), "."]
    }), "\n", createVNode($$BorderRadiusDemo, {}), "\n", createVNode(_components.h3, {
      id: "typography",
      children: createVNode(_components.a, {
        href: "#typography",
        children: "Typography"
      })
    }), "\n", createVNode(_components.p, {
      children: ["iTwinUI uses ", createVNode(_components.em, {
        children: "Noto Sans"
      }), " for body text (", createVNode(_components.code, {
        children: "--iui-font-sans"
      }), ") and ", createVNode(_components.em, {
        children: "Noto Sans Mono"
      }), " for monospace text (", createVNode(_components.code, {
        children: "--iui-font-mono"
      }), ")."]
    }), "\n", createVNode(_components.p, {
      children: ["The font scale increases in size from 0 to 5, with ", createVNode(_components.code, {
        children: "--iui-font-size-1"
      }), " being the base font size for body text."]
    }), "\n", createVNode($$FontsDemo, {
      sizes: true
    }), "\n", createVNode(_components.p, {
      children: "There are four font weights available: light, normal, semibold, and bold."
    }), "\n", createVNode($$FontsDemo, {
      weights: true
    }), "\n", createVNode(_components.h3, {
      id: "opacity",
      children: createVNode(_components.a, {
        href: "#opacity",
        children: "Opacity"
      })
    }), "\n", createVNode(_components.p, {
      children: ["The opacity scale decreases from 1 to 6, with ", createVNode(_components.code, {
        children: "--iui-opacity-1"
      }), " being fully opaque."]
    }), "\n", createVNode($$OpacityDemo, {}), "\n", createVNode(_components.h3, {
      id: "shadows",
      children: createVNode(_components.a, {
        href: "#shadows",
        children: "Shadows"
      })
    }), "\n", createVNode(_components.p, {
      children: ["iTwinUI offers a few shadows that increase in elevation from 0 to 5. These should typically be used in combination with the ", createVNode(_components.code, {
        children: "Surface"
      }), " component."]
    }), "\n", createVNode($$ShadowsDemo, {})]
  });
}

function MDXContent$t(props = {}) {
  return createVNode(MDXLayout$t, { ...props,
    children: createVNode(_createMdxContent$t, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$t, "astro:jsx");

__astro_tag_component__(MDXContent$t, "astro:jsx");
MDXContent$t[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$t.layout);
const url$t = "/docs/variables";
const file$t = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/variables.mdx";
function rawContent$t() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$t() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$t = MDXContent$t;

const _page27 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$t,
	getHeadings: getHeadings$t,
	default: MDXContent$t,
	url: url$t,
	file: file$t,
	rawContent: rawContent$t,
	compiledContent: compiledContent$t,
	Content: Content$t
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$s = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$s;
  content.file = file$s;
  content.url = url$s;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$s,
    url: url$s,
    content,
    frontmatter: content,
    headings: getHeadings$s(),
    "server:root": true,
    children
  });
};
const frontmatter$s = {
  "title": "Carousel",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Carousel/Carousel.d.ts",
  "exampleCodeFile1": "Carousel.main.tsx",
  "group": "core"
};
function getHeadings$s() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 2,
    "slug": "usage",
    "text": "Usage"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }, {
    "depth": 2,
    "slug": "related-resources",
    "text": "Related resources"
  }];
}

function _createMdxContent$s(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#usage",
              children: "Usage"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#related-resources",
              children: "Related resources"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$s.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$s.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.h2, {
        id: "usage",
        children: createVNode(_components.a, {
          href: "#usage",
          children: "Usage"
        })
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$s.propsPath
      }), "\n", createVNode(_components.h2, {
        id: "related-resources",
        children: createVNode(_components.a, {
          href: "#related-resources",
          children: "Related resources"
        })
      })]
    })]
  });
}

function MDXContent$s(props = {}) {
  return createVNode(MDXLayout$s, { ...props,
    children: createVNode(_createMdxContent$s, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$s, "astro:jsx");

__astro_tag_component__(MDXContent$s, "astro:jsx");
MDXContent$s[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$s.layout);
const url$s = "/docs/carousel";
const file$s = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/carousel.mdx";
function rawContent$s() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$s() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$s = MDXContent$s;

const _page28 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$s,
	getHeadings: getHeadings$s,
	default: MDXContent$s,
	url: url$s,
	file: file$s,
	rawContent: rawContent$s,
	compiledContent: compiledContent$s,
	Content: Content$s
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$r = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$r;
  content.file = file$r;
  content.url = url$r;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$r,
    url: url$r,
    content,
    frontmatter: content,
    headings: getHeadings$r(),
    "server:root": true,
    children
  });
};
const frontmatter$r = {
  "title": "Checkbox",
  "description": "Allows the user to make one or more choices within a list of options.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Checkbox/Checkbox.tsx",
  "exampleCodeFile1": "Checkbox.main.tsx",
  "group": "inputs"
};
function getHeadings$r() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$r(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$r.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$r.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "A checkbox (or tickbox) is a form component allowing multiple options selection. It serves a similar purpose than the radio button, the main difference being that radio buttons only permits binary option selection."
      }), "\n", createVNode(_components.p, {
        children: ["Checkboxes are usually accompanied by a label. They can be used either for selecting one or more options in a list, or to enable, disable, show, or hide a feature in the UI. It should however not be confused with a toggle switch, which has a similar role but is not appropriate in all settings. To learn more about when to use a toggle switch or a checkbox, please read ", createVNode(_components.a, {
          href: "https://uxplanet.org/checkbox-vs-toggle-switch-7fc6e83f10b8",
          children: "Checkbox vs Toggle Switch by Saadia Minhas"
        }), "."]
      }), "\n", createVNode(_components.p, {
        children: "A checkbox is not interchangeable with a radio button. A radio button must have at minimum 2 choice options, almost always has one option pre-selected, and cannot have several options selected at once. A checkbox, however, can be checked and unchecked at will, and can be displayed as standalone or in a group of two or more."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$r.propsPath
      })]
    })]
  });
}

function MDXContent$r(props = {}) {
  return createVNode(MDXLayout$r, { ...props,
    children: createVNode(_createMdxContent$r, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$r, "astro:jsx");

__astro_tag_component__(MDXContent$r, "astro:jsx");
MDXContent$r[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$r.layout);
const url$r = "/docs/checkbox";
const file$r = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/checkbox.mdx";
function rawContent$r() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$r() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$r = MDXContent$r;

const _page29 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$r,
	getHeadings: getHeadings$r,
	default: MDXContent$r,
	url: url$r,
	file: file$r,
	rawContent: rawContent$r,
	compiledContent: compiledContent$r,
	Content: Content$r
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$q = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$q;
  content.file = file$q;
  content.url = url$q;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$q,
    url: url$q,
    content,
    frontmatter: content,
    headings: getHeadings$q(),
    "server:root": true,
    children
  });
};
const frontmatter$q = {
  "title": "ComboBox",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/ComboBox/ComboBox.d.ts",
  "exampleCodeFile1": "ComboBox.main.tsx",
  "group": "core"
};
function getHeadings$q() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$q(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$q.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$q.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$q.propsPath
      })]
    })]
  });
}

function MDXContent$q(props = {}) {
  return createVNode(MDXLayout$q, { ...props,
    children: createVNode(_createMdxContent$q, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$q, "astro:jsx");

__astro_tag_component__(MDXContent$q, "astro:jsx");
MDXContent$q[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$q.layout);
const url$q = "/docs/combobox";
const file$q = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/combobox.mdx";
function rawContent$q() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$q() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$q = MDXContent$q;

const _page30 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$q,
	getHeadings: getHeadings$q,
	default: MDXContent$q,
	url: url$q,
	file: file$q,
	rawContent: rawContent$q,
	compiledContent: compiledContent$q,
	Content: Content$q
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$p = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$p;
  content.file = file$p;
  content.url = url$p;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$p,
    url: url$p,
    content,
    frontmatter: content,
    headings: getHeadings$p(),
    "server:root": true,
    children
  });
};
const frontmatter$p = {
  "title": "Fieldset",
  "description": "A fieldset is a container grouping interactive components together.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Fieldset/Fieldset.tsx",
  "exampleCodeFile1": "Fieldset.main.tsx",
  "group": "inputs"
};
function getHeadings$p() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$p(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$p.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$p.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "The fieldset is a container meant to group components that apply to a common target. They are also useful in forms where interactive elements require to be split into categories.\nFieldsets are flexible and can contain a wide variety of components."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$p.propsPath
      })]
    })]
  });
}

function MDXContent$p(props = {}) {
  return createVNode(MDXLayout$p, { ...props,
    children: createVNode(_createMdxContent$p, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$p, "astro:jsx");

__astro_tag_component__(MDXContent$p, "astro:jsx");
MDXContent$p[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$p.layout);
const url$p = "/docs/fieldset";
const file$p = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/fieldset.mdx";
function rawContent$p() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$p() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$p = MDXContent$p;

const _page31 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$p,
	getHeadings: getHeadings$p,
	default: MDXContent$p,
	url: url$p,
	file: file$p,
	rawContent: rawContent$p,
	compiledContent: compiledContent$p,
	Content: Content$p
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$o = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$o;
  content.file = file$o;
  content.url = url$o;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$o,
    url: url$o,
    content,
    frontmatter: content,
    headings: getHeadings$o(),
    "server:root": true,
    children
  });
};
const frontmatter$o = {
  "title": "Text Area",
  "description": "A multiline text box.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Textarea/Textarea.tsx",
  "exampleCodeFile1": "Textarea.main.tsx",
  "group": "inputs"
};
function getHeadings$o() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$o(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$o.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$o.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Text areas (or multi-line fields) are larger text fields that can accommodate more text. It is vertically resizable and wraps text to the next line when maximum line length is reached. It automatically scrolls down to allow more text to be input when the bottom is reached. This type of text field implies that a larger input of text is possible and encouraged."
      }), "\n", createVNode(_components.p, {
        children: "It used to be possible to freely resize the text area horizontally in addition to vertically; this pattern is now deprecated, and text areas only allow vertical resizing for better predictability. The resize handle is optional; it may be omitted if resizing of the text area is not desired."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$o.propsPath
      })]
    })]
  });
}

function MDXContent$o(props = {}) {
  return createVNode(MDXLayout$o, { ...props,
    children: createVNode(_createMdxContent$o, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$o, "astro:jsx");

__astro_tag_component__(MDXContent$o, "astro:jsx");
MDXContent$o[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$o.layout);
const url$o = "/docs/textarea";
const file$o = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/textarea.mdx";
function rawContent$o() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$o() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$o = MDXContent$o;

const _page32 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$o,
	getHeadings: getHeadings$o,
	default: MDXContent$o,
	url: url$o,
	file: file$o,
	rawContent: rawContent$o,
	compiledContent: compiledContent$o,
	Content: Content$o
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$n = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$n;
  content.file = file$n;
  content.url = url$n;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$n,
    url: url$n,
    content,
    frontmatter: content,
    headings: getHeadings$n(),
    "server:root": true,
    children
  });
};
const frontmatter$n = {
  "title": "Stepper",
  "description": "Keep the user informed on their progress by dividing content into logical steps.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Stepper/Stepper.tsx",
  "exampleCodeFile1": "Stepper.main.tsx",
  "group": "core"
};
function getHeadings$n() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$n(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$n.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$n.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "In defined, multi-step user interactions, it is useful to inform the user of the number of steps involved in the process, and the current step within that sequence. A UI 'Stepper' guides the user through the steps and provides some interaction to return to previous steps. A standard example of a Stepper would be an e-Commerce checkout process, but there are many others where the user must perform sequential steps."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$n.propsPath
      })]
    })]
  });
}

function MDXContent$n(props = {}) {
  return createVNode(MDXLayout$n, { ...props,
    children: createVNode(_createMdxContent$n, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$n, "astro:jsx");

__astro_tag_component__(MDXContent$n, "astro:jsx");
MDXContent$n[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$n.layout);
const url$n = "/docs/stepper";
const file$n = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/stepper.mdx";
function rawContent$n() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$n() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$n = MDXContent$n;

const _page33 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$n,
	getHeadings: getHeadings$n,
	default: MDXContent$n,
	url: url$n,
	file: file$n,
	rawContent: rawContent$n,
	compiledContent: compiledContent$n,
	Content: Content$n
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$m = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$m;
  content.file = file$m;
  content.url = url$m;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$m,
    url: url$m,
    content,
    frontmatter: content,
    headings: getHeadings$m(),
    "server:root": true,
    children
  });
};
const frontmatter$m = {
  "title": "Surface",
  "description": "The Surface container allows content to appear elevated through the use of a drop shadow.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Surface/Surface.d.ts",
  "exampleCodeFile1": "Surface.main.tsx",
  "group": "core"
};
function getHeadings$m() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$m(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$m.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$m.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$m.propsPath
      })]
    })]
  });
}

function MDXContent$m(props = {}) {
  return createVNode(MDXLayout$m, { ...props,
    children: createVNode(_createMdxContent$m, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$m, "astro:jsx");

__astro_tag_component__(MDXContent$m, "astro:jsx");
MDXContent$m[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$m.layout);
const url$m = "/docs/surface";
const file$m = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/surface.mdx";
function rawContent$m() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$m() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$m = MDXContent$m;

const _page34 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$m,
	getHeadings: getHeadings$m,
	default: MDXContent$m,
	url: url$m,
	file: file$m,
	rawContent: rawContent$m,
	compiledContent: compiledContent$m,
	Content: Content$m
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$l = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$l;
  content.file = file$l;
  content.url = url$l;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$l,
    url: url$l,
    content,
    frontmatter: content,
    headings: getHeadings$l(),
    "server:root": true,
    children
  });
};
const frontmatter$l = {
  "title": "Tooltip",
  "description": "Tooltips display informative text when users hover over, focus on, or tap an element.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Tooltip/Tooltip.d.ts",
  "exampleCodeFile1": "Tooltip.main.tsx",
  "group": "core"
};
function getHeadings$l() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$l(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$l.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$l.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "A tooltip is a small container that typically appears above the element you are hovering with your cursor. The tooltip displays a short, helpful text message. Tooltips should never be used to display critical information, or as a means to navigate an interface. Because mobile devices do not have a hover state, use caution when using tooltips in desktop apps that have a mobile counterpart. There is no determined way of replacing tooltips in mobile devices. In some cases, a single short tap can display a tooltip on a touch display."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$l.propsPath
      })]
    })]
  });
}

function MDXContent$l(props = {}) {
  return createVNode(MDXLayout$l, { ...props,
    children: createVNode(_createMdxContent$l, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$l, "astro:jsx");

__astro_tag_component__(MDXContent$l, "astro:jsx");
MDXContent$l[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$l.layout);
const url$l = "/docs/tooltip";
const file$l = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/tooltip.mdx";
function rawContent$l() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$l() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$l = MDXContent$l;

const _page35 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$l,
	getHeadings: getHeadings$l,
	default: MDXContent$l,
	url: url$l,
	file: file$l,
	rawContent: rawContent$l,
	compiledContent: compiledContent$l,
	Content: Content$l
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$k = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$k;
  content.file = file$k;
  content.url = url$k;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$k,
    url: url$k,
    content,
    frontmatter: content,
    headings: getHeadings$k(),
    "server:root": true,
    children
  });
};
const frontmatter$k = {
  "title": "Anchor",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Typography/Body/Body.tsx",
  "exampleCodeFile1": "Anchor.main.tsx",
  "group": "typography"
};
function getHeadings$k() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$k(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$k.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$k.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$k.propsPath
      })]
    })]
  });
}

function MDXContent$k(props = {}) {
  return createVNode(MDXLayout$k, { ...props,
    children: createVNode(_createMdxContent$k, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$k, "astro:jsx");

__astro_tag_component__(MDXContent$k, "astro:jsx");
MDXContent$k[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$k.layout);
const url$k = "/docs/anchor";
const file$k = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/anchor.mdx";
function rawContent$k() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$k() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$k = MDXContent$k;

const _page36 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$k,
	getHeadings: getHeadings$k,
	default: MDXContent$k,
	url: url$k,
	file: file$k,
	rawContent: rawContent$k,
	compiledContent: compiledContent$k,
	Content: Content$k
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$j = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$j;
  content.file = file$j;
  content.url = url$j;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$j,
    url: url$j,
    content,
    frontmatter: content,
    headings: getHeadings$j(),
    "server:root": true,
    children
  });
};
const frontmatter$j = {
  "title": "Avatar",
  "description": "A circular identifier that displays the user\u2019s custom set photo or the user\u2019s first and last name initials.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Avatar/Avatar.d.ts",
  "exampleCodeFile1": "Avatar.main.tsx",
  "group": "core"
};
function getHeadings$j() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 3,
    "slug": "sizes",
    "text": "Sizes"
  }, {
    "depth": 3,
    "slug": "styles",
    "text": "Styles"
  }, {
    "depth": 4,
    "slug": "initials",
    "text": "Initials"
  }, {
    "depth": 4,
    "slug": "icon",
    "text": "Icon"
  }, {
    "depth": 4,
    "slug": "picture",
    "text": "Picture"
  }, {
    "depth": 2,
    "slug": "status-indicators",
    "text": "Status indicators"
  }, {
    "depth": 2,
    "slug": "team-layout",
    "text": "Team layout"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }, {
    "depth": 2,
    "slug": "related-resources",
    "text": "Related resources"
  }];
}

function _createMdxContent$j(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    h3: "h3",
    h4: "h4"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#sizes",
                  children: "Sizes"
                })
              }), createVNode(_components.li, {
                children: [createVNode(_components.a, {
                  href: "#styles",
                  children: "Styles"
                }), createVNode(_components.ol, {
                  children: [createVNode(_components.li, {
                    children: createVNode(_components.a, {
                      href: "#initials",
                      children: "Initials"
                    })
                  }), createVNode(_components.li, {
                    children: createVNode(_components.a, {
                      href: "#icon",
                      children: "Icon"
                    })
                  }), createVNode(_components.li, {
                    children: createVNode(_components.a, {
                      href: "#picture",
                      children: "Picture"
                    })
                  })]
                })]
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#status-indicators",
              children: "Status indicators"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#team-layout",
              children: "Team layout"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#related-resources",
              children: "Related resources"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$j.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$j.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "The user icon is an essential UI component, making it much easier to identify a person by their photo rather than reading their name. A user\u2019s photo helps put a face to the name and makes it more personal. Any time an app requires a user profile, a user icon must be included."
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.h3, {
        id: "sizes",
        children: createVNode(_components.a, {
          href: "#sizes",
          children: "Sizes"
        })
      }), "\n", createVNode(_components.p, {
        children: "There are four sizes of user icons: Small (24x24px), medium (32x32px), large (48x48px), and extra large (64x64px)."
      }), "\n", createVNode(_components.p, {
        children: "Which one to use is at your discretion. Determine which size is best for your context based on available space."
      }), "\n", createVNode(_components.h3, {
        id: "styles",
        children: createVNode(_components.a, {
          href: "#styles",
          children: "Styles"
        })
      }), "\n", createVNode(_components.p, {
        children: "There are three styles for a user icon."
      }), "\n", createVNode(_components.h4, {
        id: "initials",
        children: createVNode(_components.a, {
          href: "#initials",
          children: "Initials"
        })
      }), "\n", createVNode(_components.p, {
        children: "If a user does not upload a photo, a random data visualization color is assigned and the user\u2019s first & last initials are displayed. You can display a maximum of 2 letters and a minimum of 1 letter. You should not be able to create a user account without providing a name. In the off chance there are user accounts without any name associated, you can display the first letter of the user\u2019s email address."
      }), "\n", createVNode(_components.h4, {
        id: "icon",
        children: createVNode(_components.a, {
          href: "#icon",
          children: "Icon"
        })
      }), "\n", createVNode(_components.p, {
        children: "A placeholder icon may display instead of initials, to developer\u2019s discretion. The user icon supports SVG icons, and may use any icon that is deemed fit for the context. If desired, user can be provided with a library of icons to choose from, like an avatar."
      }), "\n", createVNode(_components.h4, {
        id: "picture",
        children: createVNode(_components.a, {
          href: "#picture",
          children: "Picture"
        })
      }), "\n", createVNode(_components.p, {
        children: "If a user uploads a photo or has an associated Gravatar account, we display their photo. When the user uploads their photo, they can use the image cropper to properly align the photo within the frame."
      }), "\n", createVNode(_components.h2, {
        id: "status-indicators",
        children: createVNode(_components.a, {
          href: "#status-indicators",
          children: "Status indicators"
        })
      }), "\n", createVNode(_components.p, {
        children: "Due to its size, the small user icon does not support status indicators.\nYou may want to indicate the online status of a user. Status indicators display in the bottom right of the user icon and have a white border around them so that they stand out above any user photo color. You must use another visual affordance in addition to color. A color blind user may struggle to understand the status indicated if only a color is used."
      }), "\n", createVNode(_components.p, {
        children: "We display symbols inside of all but 1 status indicator; Busy. If a user has been invited to install the app but has not setup their account yet, you can display their user icon without any symbol."
      }), "\n", createVNode(_components.h2, {
        id: "team-layout",
        children: createVNode(_components.a, {
          href: "#team-layout",
          children: "Team layout"
        })
      }), "\n", createVNode(_components.p, {
        children: "!!! When using this layout for user icons, do not use status indicators. !!!"
      }), "\n", createVNode(_components.p, {
        children: "User icons can be horizontally stacked to represent a team of users. This visual treatment reinforces the fact that these people work together and/or share similar permissions to access/view/edit a file or a project."
      }), "\n", createVNode(_components.p, {
        children: "In the example above, we offer a quick way to add a new team member by including an extra icon with a +, that takes the user to the appropriate page. It is optional, and should be visible only to team managers, or users who have the required permissions to add new members to a project."
      }), "\n", createVNode(_components.p, {
        children: "There are two ways to display a team of users; they may be stacked to save space, or evenly spaced out if preferred."
      }), "\n", createVNode(_components.p, {
        children: "A maximum of five (5) individual user icons can be shown at once. If a team contains more than five members, the fifth icon becomes a placeholder displaying the quantity of extra users. See example below."
      }), "\n", createVNode(_components.p, {
        children: "The highest number the placeholder icon can display is 99, followed by \u2018+\u2019 if quantity of members exceeds this limit. This is simply because the limited space within the circle does not allow for larger numbers."
      }), "\n", createVNode(_components.p, {
        children: "The user can hover the last user icon with the count to display a tooltip listing all the users that are not shown in the stack. Obviously, when the team member count is high, it may not be ideal to use this method to display names. For teams containing over ten (10) people, consider other options, such as a modal. For any method other than the tooltip, make the placeholder icon clickable to access full member list."
      }), "\n", createVNode(_components.p, {
        children: "Optionally, you may use on-hover animation to create an hybrid of the spaced out and stacked layouts. On-hover of the cursor, the user icon stack switches to the spaced out layout for better view of the team members. When doing this, be sure to pay close attention to unintentionally shifting other content on the page."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$j.propsPath
      }), "\n", createVNode(_components.h2, {
        id: "related-resources",
        children: createVNode(_components.a, {
          href: "#related-resources",
          children: "Related resources"
        })
      })]
    })]
  });
}

function MDXContent$j(props = {}) {
  return createVNode(MDXLayout$j, { ...props,
    children: createVNode(_createMdxContent$j, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$j, "astro:jsx");

__astro_tag_component__(MDXContent$j, "astro:jsx");
MDXContent$j[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$j.layout);
const url$j = "/docs/avatar";
const file$j = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/avatar.mdx";
function rawContent$j() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$j() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$j = MDXContent$j;

const _page37 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$j,
	getHeadings: getHeadings$j,
	default: MDXContent$j,
	url: url$j,
	file: file$j,
	rawContent: rawContent$j,
	compiledContent: compiledContent$j,
	Content: Content$j
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$i = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$i;
  content.file = file$i;
  content.url = url$i;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$i,
    url: url$i,
    content,
    frontmatter: content,
    headings: getHeadings$i(),
    "server:root": true,
    children
  });
};
const frontmatter$i = {
  "title": "Button",
  "description": "Buttons allow users to take actions and make choices with a single tap or click.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Buttons/Button/Button.d.ts",
  "exampleCodeFile1": "Button.main.tsx",
  "group": "buttons"
};
function getHeadings$i() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$i(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$i.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$i.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Buttons are the recipients of a user onClick action (a mouse click for browsers and a finger press on touch-sensitive devices). Buttons have states and events and should be used when a form is submitted (post) or where the button represents a clear call to action on a page. In some cases, buttons can also be used in place of href links to draw special attention to that action."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$i.propsPath
      })]
    })]
  });
}

function MDXContent$i(props = {}) {
  return createVNode(MDXLayout$i, { ...props,
    children: createVNode(_createMdxContent$i, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$i, "astro:jsx");

__astro_tag_component__(MDXContent$i, "astro:jsx");
MDXContent$i[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$i.layout);
const url$i = "/docs/button";
const file$i = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/button.mdx";
function rawContent$i() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$i() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$i = MDXContent$i;

const _page38 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$i,
	getHeadings: getHeadings$i,
	default: MDXContent$i,
	url: url$i,
	file: file$i,
	rawContent: rawContent$i,
	compiledContent: compiledContent$i,
	Content: Content$i
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$h = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$h;
  content.file = file$h;
  content.url = url$h;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$h,
    url: url$h,
    content,
    frontmatter: content,
    headings: getHeadings$h(),
    "server:root": true,
    children
  });
};
const frontmatter$h = {
  "title": "Dialog",
  "description": "Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Modal/Modal.d.ts",
  "exampleCodeFile1": "Dialog.main.tsx",
  "group": "core"
};
function getHeadings$h() {
  return [{
    "depth": 2,
    "slug": "anatomy",
    "text": "Anatomy"
  }, {
    "depth": 2,
    "slug": "types",
    "text": "Types"
  }, {
    "depth": 3,
    "slug": "dismissible-dialogs",
    "text": "Dismissible dialogs"
  }, {
    "depth": 3,
    "slug": "non-dismissible-dialogs",
    "text": "Non dismissible dialogs"
  }, {
    "depth": 3,
    "slug": "drag-enabled-dialogs",
    "text": "Drag-enabled dialogs"
  }, {
    "depth": 3,
    "slug": "full-page-dialogs",
    "text": "Full page dialogs"
  }, {
    "depth": 2,
    "slug": "usage-guidelines",
    "text": "Usage guidelines"
  }, {
    "depth": 3,
    "slug": "dos--donts",
    "text": "Dos & Don'ts"
  }, {
    "depth": 3,
    "slug": "alternative-ways-to-display-the-information",
    "text": "Alternative ways to display the information"
  }, {
    "depth": 4,
    "slug": "inline",
    "text": "Inline"
  }, {
    "depth": 4,
    "slug": "expanding-elements",
    "text": "Expanding elements"
  }, {
    "depth": 4,
    "slug": "new-page",
    "text": "New page"
  }, {
    "depth": 4,
    "slug": "undo-patterns",
    "text": "Undo patterns"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }, {
    "depth": 2,
    "slug": "related-resources",
    "text": "Related resources"
  }];
}

function _createMdxContent$h(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    ul: "ul",
    h3: "h3",
    h4: "h4"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#anatomy",
              children: "Anatomy"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#types",
              children: "Types"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#dismissible-dialogs",
                  children: "Dismissible dialogs"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#non-dismissible-dialogs",
                  children: "Non dismissible dialogs"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#drag-enabled-dialogs",
                  children: "Drag-enabled dialogs"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#full-page-dialogs",
                  children: "Full page dialogs"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#usage-guidelines",
              children: "Usage guidelines"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#dos--donts",
                  children: "Dos & Don'ts"
                })
              }), createVNode(_components.li, {
                children: [createVNode(_components.a, {
                  href: "#alternative-ways-to-display-the-information",
                  children: "Alternative ways to display the information"
                }), createVNode(_components.ol, {
                  children: [createVNode(_components.li, {
                    children: createVNode(_components.a, {
                      href: "#inline",
                      children: "Inline"
                    })
                  }), createVNode(_components.li, {
                    children: createVNode(_components.a, {
                      href: "#expanding-elements",
                      children: "Expanding elements"
                    })
                  }), createVNode(_components.li, {
                    children: createVNode(_components.a, {
                      href: "#new-page",
                      children: "New page"
                    })
                  }), createVNode(_components.li, {
                    children: createVNode(_components.a, {
                      href: "#undo-patterns",
                      children: "Undo patterns"
                    })
                  })]
                })]
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#related-resources",
              children: "Related resources"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$h.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$h.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "A dialog informs users about a task and can contain critical information, require decisions, or involve multiple tasks. Dialogs appear in front of app content to provide critical information or ask for a decision. Dialogs disable all app functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken."
      }), "\n", createVNode(_components.p, {
        children: "Dialogs are purposefully interruptive, so they should be used sparingly."
      }), "\n", createVNode(_components.h2, {
        id: "anatomy",
        children: createVNode(_components.a, {
          href: "#anatomy",
          children: "Anatomy"
        })
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Title: must be descriptive of the task at hand. The user must understand the context because they went from the main window to a dialog."
        }), "\n", createVNode(_components.li, {
          children: "Close button: only allowed in dismissible dialogs."
        }), "\n", createVNode(_components.li, {
          children: "Content"
        }), "\n", createVNode(_components.li, {
          children: "Actions: see Button standard for best practices."
        }), "\n", createVNode(_components.li, {
          children: "Box & shadow"
        }), "\n", createVNode(_components.li, {
          children: "Overlay: Dialog appears above all other UI elements and casts a black overlay as well as a drop shadow on all other content, creating a strong visual focus on the dialog."
        }), "\n"]
      }), "\n", createVNode(_components.p, {
        children: "The dialog should be located in the upper half of the screen, because on smaller screens it may get lost. A dialog\u2019s maximum width is 50% of the screen width & the minimum width is 400px. If your content can not fit inside the dialog without scrollbars, you should consider alternative ways to display the information."
      }), "\n", createVNode(_components.p, {
        children: "When the 400px minimum width conflicts with the 50% maximum of the screen width, then the dialog spans the entire width of the device. This mobile dialog can span the entire height of the screen but should not use scroll bars."
      }), "\n", createVNode(_components.h2, {
        id: "types",
        children: createVNode(_components.a, {
          href: "#types",
          children: "Types"
        })
      }), "\n", createVNode(_components.h3, {
        id: "dismissible-dialogs",
        children: createVNode(_components.a, {
          href: "#dismissible-dialogs",
          children: "Dismissible dialogs"
        })
      }), "\n", createVNode(_components.p, {
        children: "A dismissible dialog contains information that is not required. The dialog can be dismissed multiple different ways:"
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Clicking one of the action buttons."
        }), "\n", createVNode(_components.li, {
          children: "Clicking on \u201CX\u201D button."
        }), "\n", createVNode(_components.li, {
          children: "Pressing the ESC key on your keyboard."
        }), "\n", createVNode(_components.li, {
          children: "Clicking elsewhere outside the dialog window."
        }), "\n"]
      }), "\n", createVNode(_components.p, {
        children: "The \u201CX\u201D icon bears the borderless button style which appears on cursor hover."
      }), "\n", createVNode(_components.h3, {
        id: "non-dismissible-dialogs",
        children: createVNode(_components.a, {
          href: "#non-dismissible-dialogs",
          children: "Non dismissible dialogs"
        })
      }), "\n", createVNode(_components.p, {
        children: "A non dismissible dialog contains important information that must be completed. The only way to dismiss a non dismissible dialog is by completing the action."
      }), "\n", createVNode(_components.h3, {
        id: "drag-enabled-dialogs",
        children: createVNode(_components.a, {
          href: "#drag-enabled-dialogs",
          children: "Drag-enabled dialogs"
        })
      }), "\n", createVNode(_components.p, {
        children: "These dialogs have a definite header that can be clicked and moved around the screen at the user\u2019s leisure, just like a browser window."
      }), "\n", createVNode(_components.h3, {
        id: "full-page-dialogs",
        children: createVNode(_components.a, {
          href: "#full-page-dialogs",
          children: "Full page dialogs"
        })
      }), "\n", createVNode(_components.p, {
        children: "A full page dialog appears on top of the content and occupy the entire page\u2019s space. It is used primarily for pages where users will customize settings."
      }), "\n", createVNode(_components.p, {
        children: "The two buttons at the bottom right are always pinned in that same area, regardless of content. If there is more content than there is available space in the content area, a scrollbar can be included to make the content area scrollable."
      }), "\n", createVNode(_components.p, {
        children: "As specified earlier, full-page dialogs will house various settings options as shown in the example below."
      }), "\n", createVNode(_components.h2, {
        id: "usage-guidelines",
        children: createVNode(_components.a, {
          href: "#usage-guidelines",
          children: "Usage guidelines"
        })
      }), "\n", createVNode(_components.h3, {
        id: "dos--donts",
        children: createVNode(_components.a, {
          href: "#dos--donts",
          children: "Dos & Don'ts"
        })
      }), "\n", createVNode(_components.p, {
        children: "Do:"
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Use dialogs for important warnings, as a way to prevent or correct critical errors."
        }), "\n", createVNode(_components.li, {
          children: "Simplify the workflow. Use dialogs to ask for information that, when provided, could significantly lessen users\u2019 work or effort."
        }), "\n", createVNode(_components.li, {
          children: "Limit the dialog to a single purpose. Limit the interaction to one, straightforward task."
        }), "\n", createVNode(_components.li, {
          children: "Keep it short. Be brief and concise in your content."
        }), "\n", createVNode(_components.li, {
          children: "Try displaying your information in a different way. See alternatives for more information."
        }), "\n"]
      }), "\n", createVNode(_components.p, {
        children: "Don't:"
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Open a dialog from a dialog."
        }), "\n", createVNode(_components.li, {
          children: "Have multiple steps within a dialog."
        }), "\n", createVNode(_components.li, {
          children: "Present dialogs unless prompted by the user."
        }), "\n", createVNode(_components.li, {
          children: "Use a login within a dialog windows. You can\u2019t link to them and some password managers can\u2019t pre-fill them because the dialogs are hidden."
        }), "\n"]
      }), "\n", createVNode(_components.h3, {
        id: "alternative-ways-to-display-the-information",
        children: createVNode(_components.a, {
          href: "#alternative-ways-to-display-the-information",
          children: "Alternative ways to display the information"
        })
      }), "\n", createVNode(_components.p, {
        children: "Here are other ways to display information if a dialog is deemed inadequate for the context, but an important message still needs to be passed onto the user."
      }), "\n", createVNode(_components.h4, {
        id: "inline",
        children: createVNode(_components.a, {
          href: "#inline",
          children: "Inline"
        })
      }), "\n", createVNode(_components.p, {
        children: "Present your content inline to be less disruptive. You can read more about inline errors within the Text Field standard."
      }), "\n", createVNode(_components.h4, {
        id: "expanding-elements",
        children: createVNode(_components.a, {
          href: "#expanding-elements",
          children: "Expanding elements"
        })
      }), "\n", createVNode(_components.p, {
        children: "Use expanding elements such as the expandable block, toolbars, tooltips, or a side bar such as the information panel."
      }), "\n", createVNode(_components.h4, {
        id: "new-page",
        children: createVNode(_components.a, {
          href: "#new-page",
          children: "New page"
        })
      }), "\n", createVNode(_components.p, {
        children: "Lead the user to a different page to isolate the interaction without losing access to functionality such as navigation."
      }), "\n", createVNode(_components.h4, {
        id: "undo-patterns",
        children: createVNode(_components.a, {
          href: "#undo-patterns",
          children: "Undo patterns"
        })
      }), "\n", createVNode(_components.p, {
        children: "Instead of using a confirmation dialog, consider using toast notifications to speed up the user\u2019s interaction. Toast notifications are less intrusive and are preferred to a dialog for interactions such as undoing an action."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$h.propsPath
      }), "\n", createVNode(_components.h2, {
        id: "related-resources",
        children: createVNode(_components.a, {
          href: "#related-resources",
          children: "Related resources"
        })
      })]
    })]
  });
}

function MDXContent$h(props = {}) {
  return createVNode(MDXLayout$h, { ...props,
    children: createVNode(_createMdxContent$h, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$h, "astro:jsx");

__astro_tag_component__(MDXContent$h, "astro:jsx");
MDXContent$h[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$h.layout);
const url$h = "/docs/dialog";
const file$h = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/dialog.mdx";
function rawContent$h() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$h() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$h = MDXContent$h;

const _page39 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$h,
	getHeadings: getHeadings$h,
	default: MDXContent$h,
	url: url$h,
	file: file$h,
	rawContent: rawContent$h,
	compiledContent: compiledContent$h,
	Content: Content$h
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$g = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$g;
  content.file = file$g;
  content.url = url$g;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$g,
    url: url$g,
    content,
    frontmatter: content,
    headings: getHeadings$g(),
    "server:root": true,
    children
  });
};
const frontmatter$g = {
  "title": "Footer",
  "description": "Legally required links that stick to the bottom of entry pages.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Footer/Footer.d.ts",
  "exampleCodeFile1": "Footer.main.tsx",
  "group": "core"
};
function getHeadings$g() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$g(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$g.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$g.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "The footer is fixed to the bottom of a web page, and contains your typical legally required links. The legal footer is only required to be displayed on pages that are considered a \u201Cmain entry point into your application\u201D. This means that the sign in and home page of any hub / app are good places to display the footer. You do not need to display the footer within an App UI widget, or deeper pages within an app. You can not include the footer on a page with infinite scrolling because you can not reach the bottom of the page."
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.p, {
        children: "The footer text is centered within the frame it is being displayed within, not centered within the viewport. This takes into consideration things that indent the body frame such as the side navigation."
      }), "\n", createVNode(_components.p, {
        children: "The hyperlinks within the footer are styled visibly different and use the $iui-text-color-muted color rather than the typical $iui-color-foreground-primary color. This is done purposefully to help the footer content not be confused with the actual content of the app."
      }), "\n", createVNode(_components.p, {
        children: "Optionally, you may include a 2nd line of text to display version numbers and/or server location for debugging reasons. You may choose to display this line to specific users such as beta users or Bentley Systems employees only."
      }), "\n", createVNode(_components.p, {
        children: "If you feel the need to add additional links, you may append links to the end of the footer\u2019s first line."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$g.propsPath
      })]
    })]
  });
}

function MDXContent$g(props = {}) {
  return createVNode(MDXLayout$g, { ...props,
    children: createVNode(_createMdxContent$g, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$g, "astro:jsx");

__astro_tag_component__(MDXContent$g, "astro:jsx");
MDXContent$g[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$g.layout);
const url$g = "/docs/footer";
const file$g = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/footer.mdx";
function rawContent$g() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$g() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$g = MDXContent$g;

const _page40 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$g,
	getHeadings: getHeadings$g,
	default: MDXContent$g,
	url: url$g,
	file: file$g,
	rawContent: rawContent$g,
	compiledContent: compiledContent$g,
	Content: Content$g
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$f = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$f;
  content.file = file$f;
  content.url = url$f;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$f,
    url: url$f,
    content,
    frontmatter: content,
    headings: getHeadings$f(),
    "server:root": true,
    children
  });
};
const frontmatter$f = {
  "title": "Header",
  "description": "An overview of the CONNECT Portal headers",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Header/Header.d.ts",
  "exampleCodeFile1": "Header.main.tsx",
  "group": "core"
};
function getHeadings$f() {
  return [{
    "depth": 2,
    "slug": "main-connect-portal-header",
    "text": "Main CONNECT Portal header"
  }, {
    "depth": 3,
    "slug": "actions",
    "text": "Actions"
  }, {
    "depth": 2,
    "slug": "secondary-header",
    "text": "Secondary header"
  }, {
    "depth": 3,
    "slug": "actions-1",
    "text": "Actions"
  }, {
    "depth": 2,
    "slug": "consolidated-header",
    "text": "Consolidated header"
  }, {
    "depth": 2,
    "slug": "accessibility",
    "text": "Accessibility"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$f(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    ul: "ul",
    h3: "h3"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#main-connect-portal-header",
              children: "Main CONNECT Portal header"
            }), createVNode(_components.ol, {
              children: createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#actions",
                  children: "Actions"
                })
              })
            })]
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#secondary-header",
              children: "Secondary header"
            }), createVNode(_components.ol, {
              children: createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#actions-1",
                  children: "Actions"
                })
              })
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#consolidated-header",
              children: "Consolidated header"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#accessibility",
              children: "Accessibility"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$f.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$f.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "The headers seen when in our CONNECT Portal environment. A header sits at the top of a page and is part of a consistent user experience."
      }), "\n", createVNode(_components.h2, {
        id: "main-connect-portal-header",
        children: createVNode(_components.a, {
          href: "#main-connect-portal-header",
          children: "Main CONNECT Portal header"
        })
      }), "\n", createVNode(_components.p, {
        children: "The CONNECT portal header contains the services menu, home, enterprise, assets and projects links beginning from left to right. From right to left there is the user profile, help, and notification links."
      }), "\n", createVNode(_components.p, {
        children: "Header with circular callouts, numbered from 1 to 8."
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Services menu"
        }), "\n", createVNode(_components.li, {
          children: "Home page"
        }), "\n", createVNode(_components.li, {
          children: "Enterprise portal"
        }), "\n", createVNode(_components.li, {
          children: "Assets menu"
        }), "\n", createVNode(_components.li, {
          children: "Projects menu"
        }), "\n", createVNode(_components.li, {
          children: "Notifications"
        }), "\n", createVNode(_components.li, {
          children: "Help"
        }), "\n", createVNode(_components.li, {
          children: "User icon"
        }), "\n"]
      }), "\n", createVNode(_components.h3, {
        id: "actions",
        children: createVNode(_components.a, {
          href: "#actions",
          children: "Actions"
        })
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Services menu pops up a list of services available to the user."
        }), "\n", createVNode(_components.li, {
          children: "Home page takes you to CONNECT Center."
        }), "\n", createVNode(_components.li, {
          children: "Enterprise Portal takes you to the Subscription Services Portal."
        }), "\n", createVNode(_components.li, {
          children: "Assets menu takes you to the assets page."
        }), "\n", createVNode(_components.li, {
          children: "Projects menu takes you to the ProjectWise Projects page."
        }), "\n", createVNode(_components.li, {
          children: "Notifications pops up your list of notifications."
        }), "\n", createVNode(_components.li, {
          children: "Help takes you to Bentley Communities for Bentley Cloud and Web Services."
        }), "\n", createVNode(_components.li, {
          children: "User profile is a drop down with options for your user profile."
        }), "\n"]
      }), "\n", createVNode(_components.h2, {
        id: "secondary-header",
        children: createVNode(_components.a, {
          href: "#secondary-header",
          children: "Secondary header"
        })
      }), "\n", createVNode(_components.p, {
        children: "The secondary header contains the product icon, product name, iModel name and the name of the initially opened view. On the right side of the bar is the settings menu."
      }), "\n", createVNode(_components.p, {
        children: "Secondary header with circular callouts, numbered from 1 to 5."
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Product icon"
        }), "\n", createVNode(_components.li, {
          children: "Product name"
        }), "\n", createVNode(_components.li, {
          children: "iModel name"
        }), "\n", createVNode(_components.li, {
          children: "View name"
        }), "\n", createVNode(_components.li, {
          children: "Settings"
        }), "\n"]
      }), "\n", createVNode(_components.h3, {
        id: "actions-1",
        children: createVNode(_components.a, {
          href: "#actions-1",
          children: "Actions"
        })
      }), "\n", createVNode(_components.ul, {
        children: ["\n", createVNode(_components.li, {
          children: "Click the product name to get to the iModel Manager and display a list of iModels in the current project."
        }), "\n", createVNode(_components.li, {
          children: "Click the iModel name to take you to the iModel manager > iModel details page."
        }), "\n", createVNode(_components.li, {
          children: "Clicking on the view name will take you to the iModel index page."
        }), "\n", createVNode(_components.li, {
          children: "Clicking on the settings icon will open the settings menu."
        }), "\n"]
      }), "\n", createVNode(_components.h2, {
        id: "consolidated-header",
        children: createVNode(_components.a, {
          href: "#consolidated-header",
          children: "Consolidated header"
        })
      }), "\n", createVNode(_components.p, {
        children: "One of the top complaints we received was that our headers visibly takes up too much space on the screen. When the user is focusing on their work, we use the consolidated header. Additional data can be displayed based on hover and/or where you are located within the app. For example, when in a 3D working environment you\u2019ll see the consolidated header, but when you switch to the backstage you see the normal header."
      }), "\n", createVNode(_components.h2, {
        id: "accessibility",
        children: createVNode(_components.a, {
          href: "#accessibility",
          children: "Accessibility"
        })
      }), "\n", createVNode(_components.p, {
        children: "For accessibility reasons, certain users strictly use their keyboard for navigating digital interfaces. We need to ensure the header doesn\u2019t get in the way of these users every time they want to access a page\u2019s main content. To make their experience more efficient, include a Skip to main content link to allow keyboard users to bypass the navigation header and skip directly to the page\u2019s content."
      }), "\n", createVNode(_components.p, {
        children: "Without such a link, keyboard users will need to tab through the entire header every time they land on a new page. This makes their experience tedious and time-consuming. For more information, read the Skip to main content link article, and check out the Skip to main content component demo."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$f.propsPath
      })]
    })]
  });
}

function MDXContent$f(props = {}) {
  return createVNode(MDXLayout$f, { ...props,
    children: createVNode(_createMdxContent$f, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$f, "astro:jsx");

__astro_tag_component__(MDXContent$f, "astro:jsx");
MDXContent$f[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$f.layout);
const url$f = "/docs/header";
const file$f = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/header.mdx";
function rawContent$f() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$f() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$f = MDXContent$f;

const _page41 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$f,
	getHeadings: getHeadings$f,
	default: MDXContent$f,
	url: url$f,
	file: file$f,
	rawContent: rawContent$f,
	compiledContent: compiledContent$f,
	Content: Content$f
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$e = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$e;
  content.file = file$e;
  content.url = url$e;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$e,
    url: url$e,
    content,
    frontmatter: content,
    headings: getHeadings$e(),
    "server:root": true,
    children
  });
};
const frontmatter$e = {
  "title": "Select",
  "description": "A select, also known as a dropdown menu, displays a list of selectable choices and options.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Select/Select.d.ts",
  "exampleCodeFile1": "Select.main.tsx",
  "group": "inputs"
};
function getHeadings$e() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$e(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$e.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$e.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "A select is a control element meant to allow the user to select an option from a list. Depending on type, it is either visible at all times (permanent) or only if the user triggers it by clicking an element or right-clicking (temporary)."
      }), "\n", createVNode(_components.p, {
        children: "There are select menus that are called \u2018temporary\u2019; they appear as fully expanded and do not possess a collapsed state. Instead of collapsing and expanding, they are dismissed from the interface by clicking away. They may reappear only when the user triggers them again, either by right-clicking or clicking an item associated with it."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$e.propsPath
      })]
    })]
  });
}

function MDXContent$e(props = {}) {
  return createVNode(MDXLayout$e, { ...props,
    children: createVNode(_createMdxContent$e, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$e, "astro:jsx");

__astro_tag_component__(MDXContent$e, "astro:jsx");
MDXContent$e[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$e.layout);
const url$e = "/docs/select";
const file$e = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/select.mdx";
function rawContent$e() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$e() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$e = MDXContent$e;

const _page42 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$e,
	getHeadings: getHeadings$e,
	default: MDXContent$e,
	url: url$e,
	file: file$e,
	rawContent: rawContent$e,
	compiledContent: compiledContent$e,
	Content: Content$e
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$d = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$d;
  content.file = file$d;
  content.url = url$d;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$d,
    url: url$d,
    content,
    frontmatter: content,
    headings: getHeadings$d(),
    "server:root": true,
    children
  });
};
const frontmatter$d = {
  "title": "Slider",
  "description": "Sliders let users make selections from a range of values.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Slider/Slider.d.ts",
  "exampleCodeFile1": "Slider.main.tsx",
  "group": "inputs"
};
function getHeadings$d() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$d(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$d.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$d.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Sliders allow the user to graphically select a specific input value, or a range, within defined limits. Optionally, a tooltip appears above the slider to indicate the current value and changes as the slider is repositioned. The double sliders should be used when the desired input is a range (for example, 33 through 55). In this case, the tooltip indicates the current range and the area between the two sliders is highlighted."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$d.propsPath
      })]
    })]
  });
}

function MDXContent$d(props = {}) {
  return createVNode(MDXLayout$d, { ...props,
    children: createVNode(_createMdxContent$d, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$d, "astro:jsx");

__astro_tag_component__(MDXContent$d, "astro:jsx");
MDXContent$d[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$d.layout);
const url$d = "/docs/slider";
const file$d = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/slider.mdx";
function rawContent$d() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$d() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$d = MDXContent$d;

const _page43 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$d,
	getHeadings: getHeadings$d,
	default: MDXContent$d,
	url: url$d,
	file: file$d,
	rawContent: rawContent$d,
	compiledContent: compiledContent$d,
	Content: Content$d
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$c = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$c;
  content.file = file$c;
  content.url = url$c;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$c,
    url: url$c,
    content,
    frontmatter: content,
    headings: getHeadings$c(),
    "server:root": true,
    children
  });
};
const frontmatter$c = {
  "title": "Alert",
  "description": "A small box to quickly grab user attention and communicate a brief message",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Alert/Alert.tsx",
  "exampleCodeFile1": "Alert.main.tsx",
  "exampleCodeFile2": "Alert.positive.tsx",
  "exampleCodeFile3": "Alert.negative.tsx",
  "exampleCodeFile4": "Alert.warning.tsx",
  "exampleCodeFile5": "Alert.informational.tsx",
  "exampleCodeFile6": "Alert.sticky.tsx",
  "exampleCodeFile7": "Alert.inline.tsx",
  "group": "core"
};
function getHeadings$c() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 3,
    "slug": "informational",
    "text": "Informational"
  }, {
    "depth": 3,
    "slug": "positive",
    "text": "Positive"
  }, {
    "depth": 3,
    "slug": "warning",
    "text": "Warning"
  }, {
    "depth": 3,
    "slug": "negative",
    "text": "Negative"
  }, {
    "depth": 3,
    "slug": "multilines",
    "text": "Multilines"
  }, {
    "depth": 2,
    "slug": "placement",
    "text": "Placement"
  }, {
    "depth": 3,
    "slug": "inline",
    "text": "Inline"
  }, {
    "depth": 3,
    "slug": "sticky",
    "text": "Sticky"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$c(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    h3: "h3"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#informational",
                  children: "Informational"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#positive",
                  children: "Positive"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#warning",
                  children: "Warning"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#negative",
                  children: "Negative"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#multilines",
                  children: "Multilines"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#placement",
              children: "Placement"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#inline",
                  children: "Inline"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#sticky",
                  children: "Sticky"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$c.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$c.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "An alert is an element that notifies the user of something important that is not user initiated. If you need to alert the user because of something they did, consider using a toast notification or an inline message. Instead, an alert is used to notify the user of something unrelated to what they just did. Examples of this might be announcing a new feature within the product, or alerting the user of scheduled server maintenance and downtime."
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.p, {
        children: "An alert must have a foreground status color. The alert message must be concise, we recommend no more than 256 characters. If you feel the need to explain in further detail, you may use an optional hyperlink at the end of the alert message to explain more on a new page. You may also include an optional close icon (close icon is required for sticky alerts). The following types of alerts are permissible:"
      }), "\n", createVNode(_components.h3, {
        id: "informational",
        children: createVNode(_components.a, {
          href: "#informational",
          children: "Informational"
        })
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$c.exampleCodeFile5
      }), "\n", createVNode(_components.p, {
        children: "Default style when there is no defined status for the alert. Inform users about events that they should be aware of, but that are not disruptive to their work."
      }), "\n", createVNode(_components.h3, {
        id: "positive",
        children: createVNode(_components.a, {
          href: "#positive",
          children: "Positive"
        })
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$c.exampleCodeFile2
      }), "\n", createVNode(_components.p, {
        children: "The positive alert is used to inform the user of a positive status."
      }), "\n", createVNode(_components.h3, {
        id: "warning",
        children: createVNode(_components.a, {
          href: "#warning",
          children: "Warning"
        })
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$c.exampleCodeFile4
      }), "\n", createVNode(_components.p, {
        children: "The warning alert is used to inform the user of something that is not currently disruptive to their work, but may be soon or eventually."
      }), "\n", createVNode(_components.h3, {
        id: "negative",
        children: createVNode(_components.a, {
          href: "#negative",
          children: "Negative"
        })
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$c.exampleCodeFile3
      }), "\n", createVNode(_components.p, {
        children: "Use this only when the system is broken. Leave the technical details behind and explain the problem to the user in an easily understood tone. Mention when the problem might get solved, if it applies."
      }), "\n", createVNode(_components.h3, {
        id: "multilines",
        children: createVNode(_components.a, {
          href: "#multilines",
          children: "Multilines"
        })
      }), "\n", createVNode(_components.p, {
        children: "All alerts may support multiple lines if necessary. We recommend keeping it brief and keep the message as concise as possible."
      }), "\n", createVNode(_components.h2, {
        id: "placement",
        children: createVNode(_components.a, {
          href: "#placement",
          children: "Placement"
        })
      }), "\n", createVNode(_components.p, {
        children: "The alert notification can display in two different ways:"
      }), "\n", createVNode(_components.h3, {
        id: "inline",
        children: createVNode(_components.a, {
          href: "#inline",
          children: "Inline"
        })
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$c.exampleCodeFile7
      }), "\n", createVNode(_components.p, {
        children: "An inline alert appears embedded within the copy of the site as a block element. This means that when the user scrolls, the alert scrolls as well."
      }), "\n", createVNode(_components.p, {
        children: "Inline alerts can optionally be dismissible. Once the alert is dismissed, the content below it will shift upwards due to the alert no longer consuming space."
      }), "\n", createVNode(_components.h3, {
        id: "sticky",
        children: createVNode(_components.a, {
          href: "#sticky",
          children: "Sticky"
        })
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$c.exampleCodeFile6
      }), "\n", createVNode(_components.p, {
        children: "A sticky alert appears full width stuck at the top of the window frame. That means if the user scrolls, the alert stays at the top of the frame and as the content scrolls underneath it. A sticky alert must always be dismissible. The alert appears above all other UI elements except for toast notifications and modals."
      }), "\n", createVNode(_components.p, {
        children: "It is up to the development team wether or not the sticky alert should push the rest of the content down or not."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$c.propsPath
      })]
    })]
  });
}

function MDXContent$c(props = {}) {
  return createVNode(MDXLayout$c, { ...props,
    children: createVNode(_createMdxContent$c, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$c, "astro:jsx");

__astro_tag_component__(MDXContent$c, "astro:jsx");
MDXContent$c[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$c.layout);
const url$c = "/docs/alert";
const file$c = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/alert.mdx";
function rawContent$c() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$c() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$c = MDXContent$c;

const _page44 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$c,
	getHeadings: getHeadings$c,
	default: MDXContent$c,
	url: url$c,
	file: file$c,
	rawContent: rawContent$c,
	compiledContent: compiledContent$c,
	Content: Content$c
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$b = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$b;
  content.file = file$b;
  content.url = url$b;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$b,
    url: url$b,
    content,
    frontmatter: content,
    headings: getHeadings$b(),
    "server:root": true,
    children
  });
};
const frontmatter$b = {
  "title": "Badge",
  "description": "Badges are easily scannable visual identifiers that help categorize items of a same nature on a page.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Badge/Badge.d.ts",
  "exampleCodeFile1": "Badge.main.tsx",
  "group": "core"
};
function getHeadings$b() {
  return [{
    "depth": 2,
    "slug": "appearance",
    "text": "Appearance"
  }, {
    "depth": 2,
    "slug": "usage",
    "text": "Usage"
  }, {
    "depth": 3,
    "slug": "label",
    "text": "Label"
  }, {
    "depth": 3,
    "slug": "numerical-labels",
    "text": "Numerical labels"
  }, {
    "depth": 3,
    "slug": "background",
    "text": "Background"
  }, {
    "depth": 2,
    "slug": "interactivity",
    "text": "Interactivity"
  }, {
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$b(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2",
    h3: "h3"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#appearance",
              children: "Appearance"
            })
          }), createVNode(_components.li, {
            children: [createVNode(_components.a, {
              href: "#usage",
              children: "Usage"
            }), createVNode(_components.ol, {
              children: [createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#label",
                  children: "Label"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#numerical-labels",
                  children: "Numerical labels"
                })
              }), createVNode(_components.li, {
                children: createVNode(_components.a, {
                  href: "#background",
                  children: "Background"
                })
              })]
            })]
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#interactivity",
              children: "Interactivity"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$b.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$b.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Badges are visual identifiers that use data-visualization colors and a label to categorize certain components, such as project tiles. They are similar to tags in shape but they are not interchangeable, as they fulfill different roles. Unlike tags which are user-generated, badges are provided by the system."
      }), "\n", createVNode(_components.h2, {
        id: "appearance",
        children: createVNode(_components.a, {
          href: "#appearance",
          children: "Appearance"
        })
      }), "\n", createVNode(_components.p, {
        children: "Badges are colorful rectangles with rounded corners, with a label in white, all caps font on top. They are available in one size only; the length is flexible to accommodate different labels, but the height or font size cannot be increased. The font type and color remains the same no matter what."
      }), "\n", createVNode(_components.p, {
        children: "For the background color, prioritize data-visualization colors."
      }), "\n", createVNode(_components.h2, {
        id: "usage",
        children: createVNode(_components.a, {
          href: "#usage",
          children: "Usage"
        })
      }), "\n", createVNode(_components.p, {
        children: "Use badges as a way to highlight certain items that must be easily told apart from other similar components in the same UI. For example, on a page where users can view project tiles, badges can be overlaid on projects that are from external sources, thus needing different permissions than internal projects."
      }), "\n", createVNode(_components.p, {
        children: "Badges are not tags, so they should not be considered the same as keywords for helping users bring items up with queries."
      }), "\n", createVNode(_components.p, {
        children: "The quantity of badges per component, unlike tags, is finite. Ideally, there should only be one badge per item. There may be up to three if necessary, though it is not recommended. Remember that badges are meant to be easy to spot and read; the more visual noise there is around one, the harder is it to identify it."
      }), "\n", createVNode(_components.h3, {
        id: "label",
        children: createVNode(_components.a, {
          href: "#label",
          children: "Label"
        })
      }), "\n", createVNode(_components.p, {
        children: "Badge labels should be kept short. They are meant to be easily scannable by the user, so using long labels is strongly discouraged. Keep badge labels to one word if possible, three being the maximum if it is absolutely necessary. Do not use sentences for labels; they are too complex and defeat the purpose of a badge. If you are tempted to use a badge bearing a label that may be too long, consider breaking it up in different badges if possible."
      }), "\n", createVNode(_components.h3, {
        id: "numerical-labels",
        children: createVNode(_components.a, {
          href: "#numerical-labels",
          children: "Numerical labels"
        })
      }), "\n", createVNode(_components.p, {
        children: "It is possible for badges to bear numerical labels instead of words. It\u2019s the case for badges on video tiles; they are used to display the media\u2019s duration, so the user knows what to expect before playing it."
      }), "\n", createVNode(_components.h3, {
        id: "background",
        children: createVNode(_components.a, {
          href: "#background",
          children: "Background"
        })
      }), "\n", createVNode(_components.p, {
        children: "Background color should not be used haphazardly. It is contextual and not just for aesthetics; when using several badges with different colors on the same page, make it so each color has a meaning and belongs to a specific category or context. For example, use color for representing a status, or context-sensitive information."
      }), "\n", createVNode(_components.h2, {
        id: "interactivity",
        children: createVNode(_components.a, {
          href: "#interactivity",
          children: "Interactivity"
        })
      }), "\n", createVNode(_components.p, {
        children: "Because they are read-only components, badges are devoid of state changes. This means that they should not have on-hover, on-click or any other interaction triggered by the user."
      }), "\n", createVNode(_components.p, {
        children: "Badges cannot be edited, added or removed by the user. They are entirely managed by the system."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$b.propsPath
      })]
    })]
  });
}

function MDXContent$b(props = {}) {
  return createVNode(MDXLayout$b, { ...props,
    children: createVNode(_createMdxContent$b, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$b, "astro:jsx");

__astro_tag_component__(MDXContent$b, "astro:jsx");
MDXContent$b[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$b.layout);
const url$b = "/docs/badge";
const file$b = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/badge.mdx";
function rawContent$b() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$b() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$b = MDXContent$b;

const _page45 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$b,
	getHeadings: getHeadings$b,
	default: MDXContent$b,
	url: url$b,
	file: file$b,
	rawContent: rawContent$b,
	compiledContent: compiledContent$b,
	Content: Content$b
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$a = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$a;
  content.file = file$a;
  content.url = url$a;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$a,
    url: url$a,
    content,
    frontmatter: content,
    headings: getHeadings$a(),
    "server:root": true,
    children
  });
};
const frontmatter$a = {
  "title": "Input",
  "description": "Input let users enter and edit data.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Input/Input.tsx",
  "exampleCodeFile1": "Input.main.tsx",
  "group": "inputs"
};
function getHeadings$a() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$a(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$a.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$a.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$a.propsPath
      })]
    })]
  });
}

function MDXContent$a(props = {}) {
  return createVNode(MDXLayout$a, { ...props,
    children: createVNode(_createMdxContent$a, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$a, "astro:jsx");

__astro_tag_component__(MDXContent$a, "astro:jsx");
MDXContent$a[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$a.layout);
const url$a = "/docs/input";
const file$a = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/input.mdx";
function rawContent$a() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$a() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$a = MDXContent$a;

const _page46 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$a,
	getHeadings: getHeadings$a,
	default: MDXContent$a,
	url: url$a,
	file: file$a,
	rawContent: rawContent$a,
	compiledContent: compiledContent$a,
	Content: Content$a
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$9 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$9;
  content.file = file$9;
  content.url = url$9;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$9,
    url: url$9,
    content,
    frontmatter: content,
    headings: getHeadings$9(),
    "server:root": true,
    children
  });
};
const frontmatter$9 = {
  "title": "Label",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Label/Label.d.ts",
  "exampleCodeFile1": "Label.main.tsx",
  "group": "typography"
};
function getHeadings$9() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$9(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$9.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$9.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$9.propsPath
      })]
    })]
  });
}

function MDXContent$9(props = {}) {
  return createVNode(MDXLayout$9, { ...props,
    children: createVNode(_createMdxContent$9, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$9, "astro:jsx");

__astro_tag_component__(MDXContent$9, "astro:jsx");
MDXContent$9[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$9.layout);
const url$9 = "/docs/label";
const file$9 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/label.mdx";
function rawContent$9() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$9() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$9 = MDXContent$9;

const _page47 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$9,
	getHeadings: getHeadings$9,
	default: MDXContent$9,
	url: url$9,
	file: file$9,
	rawContent: rawContent$9,
	compiledContent: compiledContent$9,
	Content: Content$9
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$8 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$8;
  content.file = file$8;
  content.url = url$8;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$8,
    url: url$8,
    content,
    frontmatter: content,
    headings: getHeadings$8(),
    "server:root": true,
    children
  });
};
const frontmatter$8 = {
  "title": "Radio",
  "description": "Allows the user to choose only one of a predefined set of mutually exclusive options.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Radio/Radio.tsx",
  "exampleCodeFile1": "Radio.main.tsx",
  "group": "inputs"
};
function getHeadings$8() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$8(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$8.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$8.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "A radio button is a control element allowing the selection of a single option amongst a predefined set of choices. They are similar to checkboxes, however the latter allows the selection of several options at once, or even none at all. Within a set of options accompanied by radio buttons, there will always be a single one that is selected at once."
      }), "\n", createVNode(_components.p, {
        children: "Within the same list, only one radio button can be selected at once. Clicking an unselected radio button will deselect the current selected one and apply the selection to the one the user has clicked."
      }), "\n", createVNode(_components.p, {
        children: "In the event when by default, there are no buttons selected in a list when a user enters a page, selecting one would make restoring to the empty default impossible. Then the list of radio buttons would behave like it normally would."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$8.propsPath
      })]
    })]
  });
}

function MDXContent$8(props = {}) {
  return createVNode(MDXLayout$8, { ...props,
    children: createVNode(_createMdxContent$8, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$8, "astro:jsx");

__astro_tag_component__(MDXContent$8, "astro:jsx");
MDXContent$8[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$8.layout);
const url$8 = "/docs/radio";
const file$8 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/radio.mdx";
function rawContent$8() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$8() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$8 = MDXContent$8;

const _page48 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$8,
	getHeadings: getHeadings$8,
	default: MDXContent$8,
	url: url$8,
	file: file$8,
	rawContent: rawContent$8,
	compiledContent: compiledContent$8,
	Content: Content$8
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$7 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$7;
  content.file = file$7;
  content.url = url$7;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$7,
    url: url$7,
    content,
    frontmatter: content,
    headings: getHeadings$7(),
    "server:root": true,
    children
  });
};
const frontmatter$7 = {
  "title": "Table",
  "description": "Data tables display sets of data.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Table/Table.d.ts",
  "exampleCodeFile1": "Table.main.tsx",
  "group": "core"
};
function getHeadings$7() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$7(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$7.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$7.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Tables are an important element in most web-based applications. We\u2019ve presented a set of flexible standards to allow for a variety of table styles. As always, the specifics of how you style your table should be determined by the desired user experience and the goals of the application."
      }), "\n", createVNode(_components.p, {
        children: "Bentley makes extensive use of tables and data grids throughout its web applications. Use the following flexible grid format below in most circumstances as it provides functionality \u201Cbuilt in\u201D to the design, and because users learning how to consistently sort, filter, and search tables is an important skill to leverage."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$7.propsPath
      })]
    })]
  });
}

function MDXContent$7(props = {}) {
  return createVNode(MDXLayout$7, { ...props,
    children: createVNode(_createMdxContent$7, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$7, "astro:jsx");

__astro_tag_component__(MDXContent$7, "astro:jsx");
MDXContent$7[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$7.layout);
const url$7 = "/docs/table";
const file$7 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/table.mdx";
function rawContent$7() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$7() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$7 = MDXContent$7;

const _page49 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$7,
	getHeadings: getHeadings$7,
	default: MDXContent$7,
	url: url$7,
	file: file$7,
	rawContent: rawContent$7,
	compiledContent: compiledContent$7,
	Content: Content$7
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$6 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$6;
  content.file = file$6;
  content.url = url$6;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$6,
    url: url$6,
    content,
    frontmatter: content,
    headings: getHeadings$6(),
    "server:root": true,
    children
  });
};
const frontmatter$6 = {
  "title": "Toast",
  "description": "A Toast is a non modal, unobtrusive window element used to display small amount of information to a user.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Toast/Toast.d.ts",
  "exampleCodeFile1": "Toast.main.tsx",
  "group": "core"
};
function getHeadings$6() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$6(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$6.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$6.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "A toast notification provides a brief message about app processes at the top of the screen. Because these messages are so prominent, we need to be careful not to overuse or misuse them."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$6.propsPath
      })]
    })]
  });
}

function MDXContent$6(props = {}) {
  return createVNode(MDXLayout$6, { ...props,
    children: createVNode(_createMdxContent$6, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$6, "astro:jsx");

__astro_tag_component__(MDXContent$6, "astro:jsx");
MDXContent$6[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$6.layout);
const url$6 = "/docs/toast";
const file$6 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/toast.mdx";
function rawContent$6() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$6() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$6 = MDXContent$6;

const _page50 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$6,
	getHeadings: getHeadings$6,
	default: MDXContent$6,
	url: url$6,
	file: file$6,
	rawContent: rawContent$6,
	compiledContent: compiledContent$6,
	Content: Content$6
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$5 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$5;
  content.file = file$5;
  content.url = url$5;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$5,
    url: url$5,
    content,
    frontmatter: content,
    headings: getHeadings$5(),
    "server:root": true,
    children
  });
};
const frontmatter$5 = {
  "title": "Code",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/src/core/Typography/Code/Code.tsx",
  "exampleCodeFile1": "Code.main.tsx",
  "group": "typography"
};
function getHeadings$5() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$5(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$5.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$5.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$5.propsPath
      })]
    })]
  });
}

function MDXContent$5(props = {}) {
  return createVNode(MDXLayout$5, { ...props,
    children: createVNode(_createMdxContent$5, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$5, "astro:jsx");

__astro_tag_component__(MDXContent$5, "astro:jsx");
MDXContent$5[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$5.layout);
const url$5 = "/docs/code";
const file$5 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/code.mdx";
function rawContent$5() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$5() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$5 = MDXContent$5;

const _page51 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$5,
	getHeadings: getHeadings$5,
	default: MDXContent$5,
	url: url$5,
	file: file$5,
	rawContent: rawContent$5,
	compiledContent: compiledContent$5,
	Content: Content$5
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$4 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$4;
  content.file = file$4;
  content.url = url$4;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$4,
    url: url$4,
    content,
    frontmatter: content,
    headings: getHeadings$4(),
    "server:root": true,
    children
  });
};
const frontmatter$4 = {
  "title": "Tabs",
  "description": "Tabs make it easy to explore and switch between different views or functional aspects of an app, or to browse categorized data sets.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Tabs/Tabs.d.ts",
  "exampleCodeFile1": "Tabs.main.tsx",
  "group": "core"
};
function getHeadings$4() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$4(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$4.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$4.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$4.propsPath
      })]
    })]
  });
}

function MDXContent$4(props = {}) {
  return createVNode(MDXLayout$4, { ...props,
    children: createVNode(_createMdxContent$4, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$4, "astro:jsx");

__astro_tag_component__(MDXContent$4, "astro:jsx");
MDXContent$4[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$4.layout);
const url$4 = "/docs/tabs";
const file$4 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/tabs.mdx";
function rawContent$4() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$4() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$4 = MDXContent$4;

const _page52 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$4,
	getHeadings: getHeadings$4,
	default: MDXContent$4,
	url: url$4,
	file: file$4,
	rawContent: rawContent$4,
	compiledContent: compiledContent$4,
	Content: Content$4
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$3 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$3;
  content.file = file$3;
  content.url = url$3;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$3,
    url: url$3,
    content,
    frontmatter: content,
    headings: getHeadings$3(),
    "server:root": true,
    children
  });
};
const frontmatter$3 = {
  "title": "Text",
  "description": null,
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Typography/Text/Text.d.ts",
  "exampleCodeFile1": "Text.main.tsx",
  "group": "typography"
};
function getHeadings$3() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$3(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$3.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$3.exampleCodeFile1
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$3.propsPath
      })]
    })]
  });
}

function MDXContent$3(props = {}) {
  return createVNode(MDXLayout$3, { ...props,
    children: createVNode(_createMdxContent$3, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$3, "astro:jsx");

__astro_tag_component__(MDXContent$3, "astro:jsx");
MDXContent$3[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$3.layout);
const url$3 = "/docs/text";
const file$3 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/text.mdx";
function rawContent$3() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$3() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$3 = MDXContent$3;

const _page53 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$3,
	getHeadings: getHeadings$3,
	default: MDXContent$3,
	url: url$3,
	file: file$3,
	rawContent: rawContent$3,
	compiledContent: compiledContent$3,
	Content: Content$3
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$2 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$2;
  content.file = file$2;
  content.url = url$2;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$2,
    url: url$2,
    content,
    frontmatter: content,
    headings: getHeadings$2(),
    "server:root": true,
    children
  });
};
const frontmatter$2 = {
  "title": "Tile",
  "description": "Tiles, also known as cards, contain content and actions about a single subject.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Tile/Tile.d.ts",
  "exampleCodeFile1": "Tile.main.tsx",
  "group": "core"
};
function getHeadings$2() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$2(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$2.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$2.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Tiles are containers that display content and actions pertaining to a single item or project. They should be easy to scan for relevant and actionable information. All text should be concise and placed in a way that clearly indicates informational hierarchy."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$2.propsPath
      })]
    })]
  });
}

function MDXContent$2(props = {}) {
  return createVNode(MDXLayout$2, { ...props,
    children: createVNode(_createMdxContent$2, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$2, "astro:jsx");

__astro_tag_component__(MDXContent$2, "astro:jsx");
MDXContent$2[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$2.layout);
const url$2 = "/docs/tile";
const file$2 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/tile.mdx";
function rawContent$2() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$2() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$2 = MDXContent$2;

const _page54 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$2,
	getHeadings: getHeadings$2,
	default: MDXContent$2,
	url: url$2,
	file: file$2,
	rawContent: rawContent$2,
	compiledContent: compiledContent$2,
	Content: Content$2
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout$1 = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter$1;
  content.file = file$1;
  content.url = url$1;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file: file$1,
    url: url$1,
    content,
    frontmatter: content,
    headings: getHeadings$1(),
    "server:root": true,
    children
  });
};
const frontmatter$1 = {
  "title": "Tree",
  "description": "A tree provides a list of data.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Tree/Tree.d.ts",
  "exampleCodeFile1": "Tree.main.tsx",
  "group": "core"
};
function getHeadings$1() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent$1(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter$1.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter$1.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "A tree can be used to organize data in an application specific way, or it can be used to sort, filter, group, or search data as the user deems appropriate. Each line of data level may begin with an eye icon for toggling its visibility. In this context, this icon is called specialty checkbox."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter$1.propsPath
      })]
    })]
  });
}

function MDXContent$1(props = {}) {
  return createVNode(MDXLayout$1, { ...props,
    children: createVNode(_createMdxContent$1, { ...props
    })
  });
}

__astro_tag_component__(getHeadings$1, "astro:jsx");

__astro_tag_component__(MDXContent$1, "astro:jsx");
MDXContent$1[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter$1.layout);
const url$1 = "/docs/tree";
const file$1 = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/tree.mdx";
function rawContent$1() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent$1() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content$1 = MDXContent$1;

const _page55 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$1,
	getHeadings: getHeadings$1,
	default: MDXContent$1,
	url: url$1,
	file: file$1,
	rawContent: rawContent$1,
	compiledContent: compiledContent$1,
	Content: Content$1
}, Symbol.toStringTag, { value: 'Module' }));

const MDXLayout = async function ({
  children
}) {
  const Layout = (await import('./chunks/_layout.d57b153b.mjs')).default;
  const {
    layout,
    ...content
  } = frontmatter;
  content.file = file;
  content.url = url;
  content.astro = {};
  Object.defineProperty(content.astro, "headings", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."');
    }

  });
  Object.defineProperty(content.astro, "html", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."');
    }

  });
  Object.defineProperty(content.astro, "source", {
    get() {
      throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."');
    }

  });
  return createVNode(Layout, {
    file,
    url,
    content,
    frontmatter: content,
    headings: getHeadings(),
    "server:root": true,
    children
  });
};
const frontmatter = {
  "title": "Tag",
  "description": "A tag is a user-generated keyword associated with certain items to categorize them and make them easily discoverable.",
  "layout": "./_layout.astro",
  "propsPath": "@itwin/itwinui-react/esm/core/Tag/Tag.d.ts",
  "exampleCodeFile1": "Tag.main.tsx",
  "group": "core"
};
function getHeadings() {
  return [{
    "depth": 2,
    "slug": "props",
    "text": "Props"
  }];
}

function _createMdxContent(props) {
  const _components = Object.assign({
    aside: "aside",
    nav: "nav",
    ol: "ol",
    li: "li",
    a: "a",
    main: "main",
    p: "p",
    h2: "h2"
  }, props.components);

  return createVNode(Fragment, {
    children: [createVNode(_components.aside, {
      className: "toc-wrapper",
      "aria-label": "Table of contents",
      children: createVNode(_components.nav, {
        children: createVNode(_components.ol, {
          children: [createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#overview",
              children: "Overview"
            })
          }), createVNode(_components.li, {
            children: createVNode(_components.a, {
              href: "#props",
              children: "Props"
            })
          })]
        })
      })
    }), createVNode(_components.main, {
      children: ["\n", createVNode("p", {
        children: frontmatter.description
      }), "\n", createVNode($$LiveExample, {
        src: frontmatter.exampleCodeFile1
      }), "\n", createVNode(_components.p, {
        children: "Tags are user-generated keywords used to label, categorize, or organize items and files. A group of multiple tags is a standard way of labeling an item to make it easily discoverable by peers who may not know the exact title of said item. A single tag may be mapped to more than one project at once if these projects fit in similar categories. Tags may also be used as a way to filter out content; in that context, the tags are pre-existing, and users select tags that fit their search to narrow down the results."
      }), "\n", createVNode(_components.h2, {
        id: "props",
        children: createVNode(_components.a, {
          href: "#props",
          children: "Props"
        })
      }), "\n", createVNode($$PropsTable, {
        path: frontmatter.propsPath
      })]
    })]
  });
}

function MDXContent(props = {}) {
  return createVNode(MDXLayout, { ...props,
    children: createVNode(_createMdxContent, { ...props
    })
  });
}

__astro_tag_component__(getHeadings, "astro:jsx");

__astro_tag_component__(MDXContent, "astro:jsx");
MDXContent[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter.layout);
const url = "/docs/tag";
const file = "C:/Users/rohan.kadkol/Documents/iTwinUI-react/apps/website/src/pages/docs/tag.mdx";
function rawContent() { throw new Error("MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }function compiledContent() { throw new Error("MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins") }const Content = MDXContent;

const _page56 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter,
	getHeadings,
	default: MDXContent,
	url,
	file,
	rawContent,
	compiledContent,
	Content
}, Symbol.toStringTag, { value: 'Module' }));

const pageMap = new Map([['src/pages/index.astro', _page0],['src/pages/docs/index.mdx', _page1],['src/pages/docs/informationpanel.mdx', _page2],['src/pages/docs/expandableblock.mdx', _page3],['src/pages/docs/labeledtextarea.mdx', _page4],['src/pages/docs/dropdownbutton.mdx', _page5],['src/pages/docs/progresslinear.mdx', _page6],['src/pages/docs/progressradial.mdx', _page7],['src/pages/docs/sidenavigation.mdx', _page8],['src/pages/docs/labeledselect.mdx', _page9],['src/pages/docs/nonidealstate.mdx', _page10],['src/pages/docs/dropdownmenu.mdx', _page11],['src/pages/docs/keyboardkeys.mdx', _page12],['src/pages/docs/labeledinput.mdx', _page13],['src/pages/docs/toggleswitch.mdx', _page14],['src/pages/docs/breadcrumbs.mdx', _page15],['src/pages/docs/buttongroup.mdx', _page16],['src/pages/docs/colorpicker.mdx', _page17],['src/pages/docs/ideasbutton.mdx', _page18],['src/pages/docs/splitbutton.mdx', _page19],['src/pages/docs/Typography.mdx', _page20],['src/pages/docs/blockquote.mdx', _page21],['src/pages/docs/datepicker.mdx', _page22],['src/pages/docs/fileupload.mdx', _page23],['src/pages/docs/iconbutton.mdx', _page24],['src/pages/docs/inputgroup.mdx', _page25],['src/pages/docs/radiotile.mdx', _page26],['src/pages/docs/variables.mdx', _page27],['src/pages/docs/carousel.mdx', _page28],['src/pages/docs/checkbox.mdx', _page29],['src/pages/docs/combobox.mdx', _page30],['src/pages/docs/fieldset.mdx', _page31],['src/pages/docs/textarea.mdx', _page32],['src/pages/docs/stepper.mdx', _page33],['src/pages/docs/surface.mdx', _page34],['src/pages/docs/tooltip.mdx', _page35],['src/pages/docs/anchor.mdx', _page36],['src/pages/docs/avatar.mdx', _page37],['src/pages/docs/button.mdx', _page38],['src/pages/docs/dialog.mdx', _page39],['src/pages/docs/footer.mdx', _page40],['src/pages/docs/header.mdx', _page41],['src/pages/docs/select.mdx', _page42],['src/pages/docs/slider.mdx', _page43],['src/pages/docs/alert.mdx', _page44],['src/pages/docs/badge.mdx', _page45],['src/pages/docs/input.mdx', _page46],['src/pages/docs/label.mdx', _page47],['src/pages/docs/radio.mdx', _page48],['src/pages/docs/table.mdx', _page49],['src/pages/docs/toast.mdx', _page50],['src/pages/docs/code.mdx', _page51],['src/pages/docs/tabs.mdx', _page52],['src/pages/docs/text.mdx', _page53],['src/pages/docs/tile.mdx', _page54],['src/pages/docs/tree.mdx', _page55],['src/pages/docs/tag.mdx', _page56],]);
const renderers = [Object.assign({"name":"astro:jsx","serverEntrypoint":"astro/jsx/server.js","jsxImportSource":"astro"}, { ssr: server_default }),Object.assign({"name":"@astrojs/react","clientEntrypoint":"@astrojs/react/client.js","serverEntrypoint":"@astrojs/react/server.js","jsxImportSource":"react"}, { ssr: _renderer1 }),];

export { $$Header as $, _page20 as A, _page21 as B, _page22 as C, _page23 as D, _page24 as E, _page25 as F, _page26 as G, _page27 as H, _page28 as I, _page29 as J, _page30 as K, _page31 as L, _page32 as M, _page33 as N, _page34 as O, _page35 as P, _page36 as Q, _page37 as R, _page38 as S, _page39 as T, _page40 as U, _page41 as V, _page42 as W, _page43 as X, _page44 as Y, _page45 as Z, _page1 as _, createComponent as a, _page46 as a0, _page47 as a1, _page48 as a2, _page49 as a3, _page50 as a4, _page51 as a5, _page52 as a6, _page53 as a7, _page54 as a8, _page55 as a9, _page56 as aa, addAttribute as b, createAstro as c, renderComponent as d, renderSlot as e, $$Global as f, _page2 as g, _page3 as h, _page4 as i, _page5 as j, _page6 as k, _page7 as l, maybeRenderHead as m, _page8 as n, _page9 as o, _page10 as p, pageMap, _page11 as q, renderTemplate as r, renderers, _page12 as s, _page13 as t, _page14 as u, _page15 as v, _page16 as w, _page17 as x, _page18 as y, _page19 as z };
